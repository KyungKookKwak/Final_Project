INFO : ContextLoader - Root WebApplicationContext: initialization started
INFO : XmlWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Thu Feb 07 15:46:32 KST 2019]; root of context hierarchy
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/root-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/security-context.xml]
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@722a5108]
DEBUG: LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
DEBUG: SqlSessionFactoryBean - Parsed configuration file: 'class path resource [mybatis-config.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\board\board-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\demo\demo-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\member\member-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\memo\memo-mapper.xml]'
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : ContextLoader - Root WebApplicationContext: initialization completed in 3503 ms
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization started
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.active]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.default]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
INFO : XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 15:46:36 KST 2019]; parent: Root WebApplicationContext
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/servlet-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/aspect-context.xml]
INFO : AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@4bbfaeb]
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object com.kh.spring.common.aop.AroundAdviceAspect.aroundAdvice(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.LoginLoggerAdvice.advice(org.aspectj.lang.JoinPoint,java.lang.Object)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceDelete(org.aspectj.lang.JoinPoint)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceInsert(org.aspectj.lang.JoinPoint)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardList.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.selectBoardList(int,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardForm.do]}" onto public void com.kh.spring.board.controller.BoardController.boardForm()
INFO : RequestMappingHandlerMapping - Mapped "{[/board/insertBoard.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.insertBoard(com.kh.spring.board.model.vo.Board,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardView.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.boardView(org.springframework.web.servlet.ModelAndView,int)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/fileDownload.do]}" onto public void com.kh.spring.board.controller.BoardController.fileDownload(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo()
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo1.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo1(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo2.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo2(org.springframework.ui.Model,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo3.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo3(org.springframework.ui.Model,com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/insertDev.do],methods=[POST]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.insertDev(com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demoList.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.selectDemoList(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/deleteDev.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.deleteDemo(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.kh.spring.HomeController.home(java.util.Locale,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnroll.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnrollEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogin.do],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogout.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberView.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberUpdateEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/memo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/insertMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/deleteMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 15:46:36 KST 2019]; parent: Root WebApplicationContext
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 15:46:36 KST 2019]; parent: Root WebApplicationContext
INFO : SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0'
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'boardServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.board.model.service.BoardServiceImpl@4e0b7250]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'demoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.demo.model.service.DemoServiceImpl@114edd72]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.model.service.MemberServiceImpl@46b2f8a6]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberController' with 0 common interceptors and 2 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.controller.MemberController@4ef453cf]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.model.service.MemoServiceImpl@3ccd5c00]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoController' with 0 common interceptors and 4 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.controller.MemoController@15e7a4b4]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization completed in 4432 ms
INFO : XmlWebApplicationContext - Closing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 15:46:36 KST 2019]; parent: Root WebApplicationContext
INFO : XmlWebApplicationContext - Closing Root WebApplicationContext: startup date [Thu Feb 07 15:46:32 KST 2019]; root of context hierarchy
INFO : ContextLoader - Root WebApplicationContext: initialization started
INFO : XmlWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Thu Feb 07 16:05:07 KST 2019]; root of context hierarchy
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/root-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/security-context.xml]
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@42dbb951]
DEBUG: LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
DEBUG: SqlSessionFactoryBean - Parsed configuration file: 'class path resource [mybatis-config.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\board\board-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\demo\demo-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\member\member-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\memo\memo-mapper.xml]'
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : ContextLoader - Root WebApplicationContext: initialization completed in 3406 ms
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization started
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.active]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.default]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
INFO : XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:05:11 KST 2019]; parent: Root WebApplicationContext
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/servlet-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/aspect-context.xml]
INFO : AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@3b30b884]
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object com.kh.spring.common.aop.AroundAdviceAspect.aroundAdvice(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.LoginLoggerAdvice.advice(org.aspectj.lang.JoinPoint,java.lang.Object)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceDelete(org.aspectj.lang.JoinPoint)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceInsert(org.aspectj.lang.JoinPoint)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardList.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.selectBoardList(int,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardForm.do]}" onto public void com.kh.spring.board.controller.BoardController.boardForm()
INFO : RequestMappingHandlerMapping - Mapped "{[/board/insertBoard.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.insertBoard(com.kh.spring.board.model.vo.Board,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardView.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.boardView(org.springframework.web.servlet.ModelAndView,int)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/fileDownload.do]}" onto public void com.kh.spring.board.controller.BoardController.fileDownload(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo()
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo1.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo1(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo2.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo2(org.springframework.ui.Model,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo3.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo3(org.springframework.ui.Model,com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/insertDev.do],methods=[POST]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.insertDev(com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demoList.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.selectDemoList(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/deleteDev.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.deleteDemo(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.kh.spring.HomeController.home(java.util.Locale,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnroll.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnrollEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogin.do],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogout.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberView.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberUpdateEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/checkDuplicate.do]}" onto public void com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/memo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/insertMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/deleteMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:05:11 KST 2019]; parent: Root WebApplicationContext
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:05:11 KST 2019]; parent: Root WebApplicationContext
INFO : SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0'
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'boardServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.board.model.service.BoardServiceImpl@4c745284]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'demoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.demo.model.service.DemoServiceImpl@11ce4ecf]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.model.service.MemberServiceImpl@68692edf]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberController' with 0 common interceptors and 2 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.controller.MemberController@4b559c2b]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public void com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.model.service.MemoServiceImpl@32ecbf92]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoController' with 0 common interceptors and 4 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.controller.MemoController@1a1dc7d9]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization completed in 4017 ms
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/memberEnroll.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - 회원등록페이지 요청
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
INFO : XmlWebApplicationContext - Closing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:05:11 KST 2019]; parent: Root WebApplicationContext
INFO : XmlWebApplicationContext - Closing Root WebApplicationContext: startup date [Thu Feb 07 16:05:07 KST 2019]; root of context hierarchy
INFO : ContextLoader - Root WebApplicationContext: initialization started
INFO : XmlWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Thu Feb 07 16:12:24 KST 2019]; root of context hierarchy
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/root-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/security-context.xml]
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@483fa161]
DEBUG: LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
DEBUG: SqlSessionFactoryBean - Parsed configuration file: 'class path resource [mybatis-config.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\board\board-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\demo\demo-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\member\member-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\memo\memo-mapper.xml]'
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : ContextLoader - Root WebApplicationContext: initialization completed in 3540 ms
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization started
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.active]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.default]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
INFO : XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:12:28 KST 2019]; parent: Root WebApplicationContext
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/servlet-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/aspect-context.xml]
INFO : AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@176e3b0c]
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object com.kh.spring.common.aop.AroundAdviceAspect.aroundAdvice(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.LoginLoggerAdvice.advice(org.aspectj.lang.JoinPoint,java.lang.Object)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceDelete(org.aspectj.lang.JoinPoint)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceInsert(org.aspectj.lang.JoinPoint)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardList.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.selectBoardList(int,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardForm.do]}" onto public void com.kh.spring.board.controller.BoardController.boardForm()
INFO : RequestMappingHandlerMapping - Mapped "{[/board/insertBoard.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.insertBoard(com.kh.spring.board.model.vo.Board,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardView.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.boardView(org.springframework.web.servlet.ModelAndView,int)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/fileDownload.do]}" onto public void com.kh.spring.board.controller.BoardController.fileDownload(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo()
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo1.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo1(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo2.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo2(org.springframework.ui.Model,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo3.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo3(org.springframework.ui.Model,com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/insertDev.do],methods=[POST]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.insertDev(com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demoList.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.selectDemoList(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/deleteDev.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.deleteDemo(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.kh.spring.HomeController.home(java.util.Locale,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnroll.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnrollEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogin.do],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogout.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberView.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberUpdateEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/checkDuplicate.do]}" onto public void com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/memo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/insertMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/deleteMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:12:28 KST 2019]; parent: Root WebApplicationContext
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:12:28 KST 2019]; parent: Root WebApplicationContext
INFO : SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0'
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'boardServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.board.model.service.BoardServiceImpl@7ed08e5a]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'demoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.demo.model.service.DemoServiceImpl@28d731d1]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.model.service.MemberServiceImpl@ad98337]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberController' with 0 common interceptors and 2 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.controller.MemberController@6c885c5e]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public void com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.model.service.MemoServiceImpl@3a2c3ed4]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoController' with 0 common interceptors and 4 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.controller.MemoController@d405b21]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization completed in 4711 ms
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/memberEnroll.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - 회원등록페이지 요청
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aadf
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aadf
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aadf
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aadfag
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aadfag
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
INFO : XmlWebApplicationContext - Closing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:12:28 KST 2019]; parent: Root WebApplicationContext
INFO : XmlWebApplicationContext - Closing Root WebApplicationContext: startup date [Thu Feb 07 16:12:24 KST 2019]; root of context hierarchy
INFO : ContextLoader - Root WebApplicationContext: initialization started
INFO : XmlWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Thu Feb 07 16:16:38 KST 2019]; root of context hierarchy
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/root-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/security-context.xml]
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@4aedfc13]
DEBUG: LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
DEBUG: SqlSessionFactoryBean - Parsed configuration file: 'class path resource [mybatis-config.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\board\board-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\demo\demo-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\member\member-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\memo\memo-mapper.xml]'
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : ContextLoader - Root WebApplicationContext: initialization completed in 3355 ms
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization started
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.active]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.default]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
INFO : XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:16:41 KST 2019]; parent: Root WebApplicationContext
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/servlet-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/aspect-context.xml]
INFO : AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@4220d06b]
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object com.kh.spring.common.aop.AroundAdviceAspect.aroundAdvice(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.LoginLoggerAdvice.advice(org.aspectj.lang.JoinPoint,java.lang.Object)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceDelete(org.aspectj.lang.JoinPoint)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceInsert(org.aspectj.lang.JoinPoint)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardList.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.selectBoardList(int,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardForm.do]}" onto public void com.kh.spring.board.controller.BoardController.boardForm()
INFO : RequestMappingHandlerMapping - Mapped "{[/board/insertBoard.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.insertBoard(com.kh.spring.board.model.vo.Board,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardView.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.boardView(org.springframework.web.servlet.ModelAndView,int)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/fileDownload.do]}" onto public void com.kh.spring.board.controller.BoardController.fileDownload(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo()
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo1.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo1(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo2.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo2(org.springframework.ui.Model,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo3.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo3(org.springframework.ui.Model,com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/insertDev.do],methods=[POST]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.insertDev(com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demoList.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.selectDemoList(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/deleteDev.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.deleteDemo(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.kh.spring.HomeController.home(java.util.Locale,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnroll.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnrollEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogin.do],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogout.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberView.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberUpdateEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/checkDuplicate.do]}" onto public void com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/memo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/insertMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/deleteMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:16:41 KST 2019]; parent: Root WebApplicationContext
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:16:41 KST 2019]; parent: Root WebApplicationContext
INFO : SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0'
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'boardServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.board.model.service.BoardServiceImpl@2ca3c224]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'demoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.demo.model.service.DemoServiceImpl@4634ba]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.model.service.MemberServiceImpl@6beda044]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberController' with 0 common interceptors and 2 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.controller.MemberController@6abd7360]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public void com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.model.service.MemoServiceImpl@69af2ec0]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoController' with 0 common interceptors and 4 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.controller.MemoController@604a4ba5]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization completed in 4005 ms
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/memberEnroll.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - 회원등록페이지 요청
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaa
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - ... log4jdbc initializing ...
DEBUG: debug -   log4jdbc.properties not found on classpath
DEBUG: debug - x log4jdbc.debug.stack.prefix is not defined
DEBUG: debug - x log4jdbc.sqltiming.warn.threshold is not defined
DEBUG: debug - x log4jdbc.sqltiming.error.threshold is not defined
DEBUG: debug - x log4jdbc.dump.booleanastruefalse is not defined (using default value false)
DEBUG: debug - x log4jdbc.dump.sql.maxlinelength is not defined (using default of 90)
DEBUG: debug - x log4jdbc.dump.fulldebugstacktrace is not defined (using default value false)
DEBUG: debug - x log4jdbc.statement.warn is not defined (using default value false)
DEBUG: debug - x log4jdbc.dump.sql.select is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.insert is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.update is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.delete is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.create is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.addsemicolon is not defined (using default value false)
DEBUG: debug - x log4jdbc.auto.load.popular.drivers is not defined (using default value true)
DEBUG: debug - x log4jdbc.trim.sql is not defined (using default value true)
DEBUG: debug - x log4jdbc.suppress.generated.keys.exception is not defined (using default value false)
DEBUG: debug - x log4jdbc.drivers is not defined
DEBUG: debug -   FOUND DRIVER oracle.jdbc.OracleDriver
DEBUG: debug -   FOUND DRIVER oracle.jdbc.driver.OracleDriver
DEBUG: debug - ... log4jdbc initialized! ...
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: debug - driver name is Oracle JDBC driver
DEBUG: MemberController - ID중복체크 : aaaaa
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
INFO : connection - 1. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  1 (1)
DEBUG: audit - 1. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4b29b97a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b29b97a] read-only
DEBUG: audit - 1. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 1. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b29b97a] to manual commit
DEBUG: audit - 1. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 2. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  1 2 (2)
DEBUG: audit - 2. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5e075c32] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e075c32] read-only
DEBUG: audit - 2. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 2. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e075c32] to manual commit
DEBUG: audit - 2. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8112bc]
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64d4afc6]
DEBUG: audit - 1. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: audit - 2. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b29b97a] will be managed by Spring
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e075c32] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 1. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@2022fcb8  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@440850be  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.setString(1, "aaaa") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.setString(1, "aaaaa") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaa(String)
DEBUG: selectOneMember - ==> Parameters: aaaa(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
2. select * from member where memberid = 'aaaaa'  {executed in 9 msec}
DEBUG: audit - 2. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
1. select * from member where memberid = 'aaaa'  {executed in 14 msec}
DEBUG: audit - 1. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@438db5c5  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7b4bbf40  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3241e57d  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@36bac625  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 1. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4b29b97a  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: resultset - 2. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 2. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5e075c32  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2ed3c326  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 2. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8112bc]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8112bc]
DEBUG: audit - 1. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64d4afc6]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8112bc]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64d4afc6]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8112bc]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64d4afc6]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64d4afc6]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5e075c32]
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4b29b97a]
DEBUG: audit - 1. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 2. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 2. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 1. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 2. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: audit - 1. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e075c32]
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b29b97a]
DEBUG: audit - 2. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e075c32] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
DEBUG: audit - 1. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b29b97a] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 1. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
INFO : connection - 2. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: connection - open connections:  none
DEBUG: audit - 2. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: audit - 1. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaa
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 3. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  3 (1)
DEBUG: audit - 3. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6166a63a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6166a63a] read-only
DEBUG: audit - 3. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 3. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6166a63a] to manual commit
DEBUG: audit - 3. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fa14466]
DEBUG: audit - 3. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6166a63a] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 3. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@2e9c4e5d  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.setString(1, "aaaaaa") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaa(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
3. select * from member where memberid = 'aaaaaa'  {executed in 2 msec}
DEBUG: audit - 3. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7a1f6ac2  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@1ff88393  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 3. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6166a63a  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 3. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fa14466]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fa14466]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fa14466]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fa14466]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6166a63a]
DEBUG: audit - 3. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 3. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 3. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6166a63a]
DEBUG: audit - 3. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6166a63a] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 3. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 3. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaa
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 4. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  4 (1)
DEBUG: audit - 4. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@700dad7c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@700dad7c] read-only
DEBUG: audit - 4. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 4. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@700dad7c] to manual commit
DEBUG: audit - 4. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eca5d0d]
DEBUG: audit - 4. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@700dad7c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 4. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3ff75736  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.setString(1, "aaaaaaa") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaaa(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
4. select * from member where memberid = 'aaaaaaa'  {executed in 1 msec}
DEBUG: audit - 4. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@228c6bf9  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@e026890  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 4. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@700dad7c  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 4. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eca5d0d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eca5d0d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eca5d0d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eca5d0d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@700dad7c]
DEBUG: audit - 4. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 4. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 4. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@700dad7c]
DEBUG: audit - 4. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@700dad7c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 4. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 4. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaa
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 5. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  5 (1)
DEBUG: audit - 5. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@66ef738d] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66ef738d] read-only
DEBUG: audit - 5. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 5. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66ef738d] to manual commit
DEBUG: audit - 5. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68288120]
DEBUG: audit - 5. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66ef738d] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 5. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@29158b1b  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.setString(1, "aaaaaaaa") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaa(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
5. select * from member where memberid = 'aaaaaaaa'  {executed in 1 msec}
DEBUG: audit - 5. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@347bf6af  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@18f64081  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 5. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@66ef738d  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 5. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68288120]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68288120]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68288120]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68288120]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@66ef738d]
DEBUG: audit - 5. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 5. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 5. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66ef738d]
DEBUG: audit - 5. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66ef738d] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 5. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 5. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaa
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 6. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  6 (1)
DEBUG: audit - 6. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1ca1fbd0] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1ca1fbd0] read-only
DEBUG: audit - 6. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 6. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1ca1fbd0] to manual commit
DEBUG: audit - 6. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12661634]
DEBUG: audit - 6. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1ca1fbd0] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 6. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@535b1c0f  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.setString(1, "aaaaaaaaa") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaa(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
6. select * from member where memberid = 'aaaaaaaaa'  {executed in 4 msec}
DEBUG: audit - 6. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@40b712cf  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@62426b5b  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 6. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1ca1fbd0  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 6. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12661634]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12661634]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12661634]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12661634]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1ca1fbd0]
DEBUG: audit - 6. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 6. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 6. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1ca1fbd0]
DEBUG: audit - 6. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1ca1fbd0] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 6. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 6. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaa
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 7. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  7 (1)
DEBUG: audit - 7. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@744bccc2] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@744bccc2] read-only
DEBUG: audit - 7. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 7. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@744bccc2] to manual commit
DEBUG: audit - 7. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a8c2c3b]
DEBUG: audit - 7. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@744bccc2] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 7. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3bb12600  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.setString(1, "aaaaaaaaaa") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaa(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
7. select * from member where memberid = 'aaaaaaaaaa'  {executed in 1 msec}
DEBUG: audit - 7. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1136d068  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@ac0db81  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 7. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@744bccc2  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 7. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a8c2c3b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a8c2c3b]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a8c2c3b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a8c2c3b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@744bccc2]
DEBUG: audit - 7. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 7. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 7. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@744bccc2]
DEBUG: audit - 7. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@744bccc2] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 7. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 7. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaa
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 8. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  8 (1)
DEBUG: audit - 8. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3129fabf] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3129fabf] read-only
DEBUG: audit - 8. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 8. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3129fabf] to manual commit
DEBUG: audit - 8. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7940423e]
DEBUG: audit - 8. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3129fabf] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 8. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@19323151  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.setString(1, "aaaaaaaaaaa") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaa(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
8. select * from member where memberid = 'aaaaaaaaaaa'  {executed in 1 msec}
DEBUG: audit - 8. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@6730ccca  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@1c9a33a0  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 8. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3129fabf  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 8. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7940423e]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7940423e]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7940423e]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7940423e]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3129fabf]
DEBUG: audit - 8. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 8. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 8. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3129fabf]
DEBUG: audit - 8. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3129fabf] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 8. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 8. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaaa
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 9. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  9 (1)
DEBUG: audit - 9. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@2833d472] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2833d472] read-only
DEBUG: audit - 9. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 9. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2833d472] to manual commit
DEBUG: audit - 9. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5848c91f]
DEBUG: audit - 9. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2833d472] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 9. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@294b5f69  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.setString(1, "aaaaaaaaaaaa") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaaa(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
9. select * from member where memberid = 'aaaaaaaaaaaa'  {executed in 1 msec}
DEBUG: audit - 9. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1f6d9e76  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@1f3acb5  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 9. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@2833d472  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 9. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5848c91f]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5848c91f]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5848c91f]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5848c91f]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@2833d472]
DEBUG: audit - 9. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 9. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 9. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2833d472]
DEBUG: audit - 9. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2833d472] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 9. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 9. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaaaqwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 10. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  10 (1)
DEBUG: audit - 10. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@42365b18] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@42365b18] read-only
DEBUG: audit - 10. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 10. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@42365b18] to manual commit
DEBUG: audit - 10. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4609c786]
DEBUG: audit - 10. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@42365b18] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 10. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@425ccba8  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.setString(1, "aaaaaaaaaaaaqwe") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaaaqwe(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
10. select * from member where memberid = 'aaaaaaaaaaaaqwe'  {executed in 0 msec}
DEBUG: audit - 10. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@32c2b660  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3a7f7249  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 10. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@42365b18  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 10. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4609c786]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4609c786]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4609c786]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4609c786]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@42365b18]
DEBUG: audit - 10. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 10. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 10. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@42365b18]
DEBUG: audit - 10. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@42365b18] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 10. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 10. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaaaqwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 11. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  11 (1)
DEBUG: audit - 11. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@25d1cf2f] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@25d1cf2f] read-only
DEBUG: audit - 11. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 11. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@25d1cf2f] to manual commit
DEBUG: audit - 11. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71ca6c7c]
DEBUG: audit - 11. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@25d1cf2f] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 11. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6f8f0978  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. PreparedStatement.setString(1, "aaaaaaaaaaaaqwe") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaaaqwe(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
11. select * from member where memberid = 'aaaaaaaaaaaaqwe'  {executed in 1 msec}
DEBUG: audit - 11. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 11. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@448c1b11  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 11. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@66072670  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 11. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 11. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 11. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@25d1cf2f  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 11. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71ca6c7c]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71ca6c7c]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71ca6c7c]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71ca6c7c]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@25d1cf2f]
DEBUG: audit - 11. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 11. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 11. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@25d1cf2f]
DEBUG: audit - 11. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@25d1cf2f] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 11. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 11. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaaaqweq
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 12. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  12 (1)
DEBUG: audit - 12. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7e1c29f7] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7e1c29f7] read-only
DEBUG: audit - 12. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 12. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7e1c29f7] to manual commit
DEBUG: audit - 12. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3337eb7e]
DEBUG: audit - 12. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7e1c29f7] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 12. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3e9cb10  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. PreparedStatement.setString(1, "aaaaaaaaaaaaqweq") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaaaqweq(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
12. select * from member where memberid = 'aaaaaaaaaaaaqweq'  {executed in 0 msec}
DEBUG: audit - 12. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1ca5190b  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@10457dfa  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 12. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7e1c29f7  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 12. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3337eb7e]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3337eb7e]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3337eb7e]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3337eb7e]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7e1c29f7]
DEBUG: audit - 12. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 12. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 12. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7e1c29f7]
DEBUG: audit - 12. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7e1c29f7] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 12. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 12. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaaaqweqwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 13. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  13 (1)
DEBUG: audit - 13. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@291f9bb] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@291f9bb] read-only
DEBUG: audit - 13. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 13. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@291f9bb] to manual commit
DEBUG: audit - 13. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eb3b112]
DEBUG: audit - 13. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@291f9bb] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 13. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@14447d0b  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. PreparedStatement.setString(1, "aaaaaaaaaaaaqweqwe") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaaaqweqwe(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
13. select * from member where memberid = 'aaaaaaaaaaaaqweqwe'  {executed in 0 msec}
DEBUG: audit - 13. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 13. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@19951219  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 13. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4afd0b18  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 13. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 13. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 13. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@291f9bb  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 13. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eb3b112]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eb3b112]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eb3b112]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eb3b112]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@291f9bb]
DEBUG: audit - 13. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 13. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 13. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@291f9bb]
DEBUG: audit - 13. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@291f9bb] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 13. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 13. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaaaqweqwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 14. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  14 (1)
DEBUG: audit - 14. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5a930afa] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5a930afa] read-only
DEBUG: audit - 14. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 14. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5a930afa] to manual commit
DEBUG: audit - 14. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fd8a879]
DEBUG: audit - 14. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5a930afa] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 14. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3916e79  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. PreparedStatement.setString(1, "aaaaaaaaaaaaqweqwe") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaaaqweqwe(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
14. select * from member where memberid = 'aaaaaaaaaaaaqweqwe'  {executed in 0 msec}
DEBUG: audit - 14. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4197602b  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@5b969300  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 14. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5a930afa  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 14. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fd8a879]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fd8a879]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fd8a879]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fd8a879]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5a930afa]
DEBUG: audit - 14. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 14. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 14. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5a930afa]
DEBUG: audit - 14. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5a930afa] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 14. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 14. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaaaqweqweq
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 15. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  15 (1)
DEBUG: audit - 15. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4c726392] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c726392] read-only
DEBUG: audit - 15. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 15. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c726392] to manual commit
DEBUG: audit - 15. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@493a7454]
DEBUG: audit - 15. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c726392] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 15. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 15. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@8c783c8  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 15. PreparedStatement.setString(1, "aaaaaaaaaaaaqweqweq") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaaaqweqweq(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
15. select * from member where memberid = 'aaaaaaaaaaaaqweqweq'  {executed in 1 msec}
DEBUG: audit - 15. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 15. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 15. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@57760fb1  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 15. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4d7449df  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 15. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 15. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 15. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 15. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4c726392  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 15. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 15. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 15. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@493a7454]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@493a7454]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@493a7454]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@493a7454]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4c726392]
DEBUG: audit - 15. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 15. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 15. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c726392]
DEBUG: audit - 15. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c726392] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 15. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 15. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaaaqweqweqwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 16. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  16 (1)
DEBUG: audit - 16. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3374e340] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3374e340] read-only
DEBUG: audit - 16. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 16. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3374e340] to manual commit
DEBUG: audit - 16. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ac40c06]
DEBUG: audit - 16. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3374e340] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 16. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 16. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1145051f  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 16. PreparedStatement.setString(1, "aaaaaaaaaaaaqweqweqwe") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaaaqweqweqwe(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
16. select * from member where memberid = 'aaaaaaaaaaaaqweqweqwe'  {executed in 0 msec}
DEBUG: audit - 16. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 16. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 16. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@72dbf74d  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 16. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@31a75c4d  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 16. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 16. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 16. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 16. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3374e340  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 16. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 16. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 16. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ac40c06]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ac40c06]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ac40c06]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ac40c06]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3374e340]
DEBUG: audit - 16. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 16. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 16. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3374e340]
DEBUG: audit - 16. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3374e340] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 16. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 16. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaaaqweqweqwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 17. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  17 (1)
DEBUG: audit - 17. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@69ad735c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@69ad735c] read-only
DEBUG: audit - 17. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 17. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@69ad735c] to manual commit
DEBUG: audit - 17. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9ed94f]
DEBUG: audit - 17. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@69ad735c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 17. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 17. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@5fd06670  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 17. PreparedStatement.setString(1, "aaaaaaaaaaaaqweqweqwe") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaaaqweqweqwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
17. select * from member where memberid = 'aaaaaaaaaaaaqweqweqwe'  {executed in 0 msec}
DEBUG: audit - 17. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 17. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 17. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@55cc2b9e  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 17. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@378aabc9  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 17. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 17. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 17. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 17. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@69ad735c  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 17. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 17. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 17. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9ed94f]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9ed94f]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9ed94f]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9ed94f]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@69ad735c]
DEBUG: audit - 17. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 17. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 17. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@69ad735c]
DEBUG: audit - 17. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@69ad735c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 17. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 17. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaaaqweqweqweqw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 18. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  18 (1)
DEBUG: audit - 18. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@70c70c4b] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@70c70c4b] read-only
DEBUG: audit - 18. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 18. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@70c70c4b] to manual commit
DEBUG: audit - 18. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f713bb]
DEBUG: audit - 18. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@70c70c4b] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 18. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 18. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@540ae158  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 18. PreparedStatement.setString(1, "aaaaaaaaaaaaqweqweqweqw") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaaaqweqweqweqw(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
18. select * from member where memberid = 'aaaaaaaaaaaaqweqweqweqw'  {executed in 1 msec}
DEBUG: audit - 18. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 18. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 18. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1c670ac6  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 18. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@5ccda83a  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 18. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 18. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 18. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 18. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@70c70c4b  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 18. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 18. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 18. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f713bb]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f713bb]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f713bb]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f713bb]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@70c70c4b]
DEBUG: audit - 18. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 18. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 18. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@70c70c4b]
DEBUG: audit - 18. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@70c70c4b] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 18. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 18. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaaaqweqweqweqwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 19. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  19 (1)
DEBUG: audit - 19. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3a932b14] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3a932b14] read-only
DEBUG: audit - 19. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 19. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3a932b14] to manual commit
DEBUG: audit - 19. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49d09b38]
DEBUG: audit - 19. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3a932b14] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 19. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 19. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@26b7b7ac  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 19. PreparedStatement.setString(1, "aaaaaaaaaaaaqweqweqweqwe") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaaaqweqweqweqwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
19. select * from member where memberid = 'aaaaaaaaaaaaqweqweqweqwe'  {executed in 1 msec}
DEBUG: audit - 19. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 19. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 19. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@55ff3e5  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 19. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@489ba12d  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 19. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 19. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 19. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 19. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3a932b14  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 19. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 19. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 19. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49d09b38]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49d09b38]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49d09b38]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49d09b38]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3a932b14]
DEBUG: audit - 19. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 19. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 19. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3a932b14]
DEBUG: audit - 19. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3a932b14] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 19. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 19. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaaaqweqweqweqwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 20. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  20 (1)
DEBUG: audit - 20. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6324ae6c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6324ae6c] read-only
DEBUG: audit - 20. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 20. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6324ae6c] to manual commit
DEBUG: audit - 20. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4781282b]
DEBUG: audit - 20. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6324ae6c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 20. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 20. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@217b3c64  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 20. PreparedStatement.setString(1, "aaaaaaaaaaaaqweqweqweqwe") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaaaqweqweqweqwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
20. select * from member where memberid = 'aaaaaaaaaaaaqweqweqweqwe'  {executed in 0 msec}
DEBUG: audit - 20. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 20. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 20. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@676ab1e9  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 20. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@29641d5f  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 20. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 20. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 20. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 20. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6324ae6c  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 20. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 20. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 20. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4781282b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4781282b]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4781282b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4781282b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6324ae6c]
DEBUG: audit - 20. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 20. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 20. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6324ae6c]
DEBUG: audit - 20. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6324ae6c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 20. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 20. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : aaaaaaaaaaaaqweqweqweqwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 21. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  21 (1)
DEBUG: audit - 21. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@44e40d7c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@44e40d7c] read-only
DEBUG: audit - 21. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 21. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@44e40d7c] to manual commit
DEBUG: audit - 21. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53371851]
DEBUG: audit - 21. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@44e40d7c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 21. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 21. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@282c599b  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 21. PreparedStatement.setString(1, "aaaaaaaaaaaaqweqweqweqwe") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: aaaaaaaaaaaaqweqweqweqwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
21. select * from member where memberid = 'aaaaaaaaaaaaqweqweqweqwe'  {executed in 0 msec}
DEBUG: audit - 21. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 21. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 21. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4c472e0f  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 21. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@27d94246  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 21. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 21. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 21. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 21. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@44e40d7c  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 21. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 21. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 21. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53371851]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53371851]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53371851]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53371851]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@44e40d7c]
DEBUG: audit - 21. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 21. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 21. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@44e40d7c]
DEBUG: audit - 21. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@44e40d7c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 21. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 21. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 22. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  22 (1)
DEBUG: audit - 22. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4532bcf6] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4532bcf6] read-only
DEBUG: audit - 22. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 22. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4532bcf6] to manual commit
DEBUG: audit - 22. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84e5e0b]
DEBUG: audit - 22. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4532bcf6] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 22. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 22. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@706638d  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 22. PreparedStatement.setString(1, "admi") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
22. select * from member where memberid = 'admi'  {executed in 1 msec}
DEBUG: audit - 22. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 22. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 22. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5783aa97  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 22. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2d47086a  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 22. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 22. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 22. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 22. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4532bcf6  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 22. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 22. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 22. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84e5e0b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84e5e0b]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84e5e0b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84e5e0b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4532bcf6]
DEBUG: audit - 22. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 22. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 22. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4532bcf6]
DEBUG: audit - 22. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4532bcf6] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 22. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 22. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admin
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 23. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  23 (1)
DEBUG: audit - 23. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@59ce5940] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@59ce5940] read-only
DEBUG: audit - 23. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 23. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@59ce5940] to manual commit
DEBUG: audit - 23. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ed5db57]
DEBUG: audit - 23. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@59ce5940] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 23. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 23. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@7d667c71  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 23. PreparedStatement.setString(1, "admin") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admin(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
23. select * from member where memberid = 'admin'  {executed in 3 msec}
DEBUG: audit - 23. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 23. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 23. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@56493ec4  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 23. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@16064839  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 23. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 23. ResultSet.next() returned true  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 23. ResultSet.getString(MEMBERID) returned admin  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.getString(PASSWORD) returned $2a$10$R1XcilPpsC6eClvR6RtkmOK7cN5yvhfIntRVH9ifJBsBqQmnNCNK2  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.getString(MEMBERNAME) returned 관리자  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.getString(GENDER) returned F  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.getInt(AGE) returned 49  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.getString(EMAIL) returned admin@naver.com  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.getString(PHONE) returned 01012345678  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.getString(ADDRESS) returned 서울시 강남구 버거킹 하하  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.getDate(ENROLLDATE) returned 2019-01-28  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.getString(hobby) returned 운동,게임,여행  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 23. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 1
DEBUG: resultset - 23. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 23. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@59ce5940  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 23. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 23. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 23. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ed5db57]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ed5db57]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ed5db57]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ed5db57]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@59ce5940]
DEBUG: audit - 23. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 23. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 23. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@59ce5940]
DEBUG: audit - 23. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@59ce5940] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 23. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 23. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 24. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  24 (1)
DEBUG: audit - 24. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@130acfb9] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@130acfb9] read-only
DEBUG: audit - 24. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 24. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@130acfb9] to manual commit
DEBUG: audit - 24. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1be08907]
DEBUG: audit - 24. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@130acfb9] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 24. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 24. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@eeda5ca  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 24. PreparedStatement.setString(1, "adminn") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminn(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
24. select * from member where memberid = 'adminn'  {executed in 1 msec}
DEBUG: audit - 24. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 24. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 24. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4bdfc4a9  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 24. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@5468c464  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 24. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 24. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 24. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 24. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@130acfb9  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 24. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 24. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 24. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1be08907]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1be08907]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1be08907]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1be08907]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@130acfb9]
DEBUG: audit - 24. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 24. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 24. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@130acfb9]
DEBUG: audit - 24. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@130acfb9] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 24. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 24. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admin
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 25. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  25 (1)
DEBUG: audit - 25. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@16da888e] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@16da888e] read-only
DEBUG: audit - 25. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 25. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@16da888e] to manual commit
DEBUG: audit - 25. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22b7905e]
DEBUG: audit - 25. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@16da888e] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 25. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 25. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@2a0e8bfb  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 25. PreparedStatement.setString(1, "admin") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admin(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
25. select * from member where memberid = 'admin'  {executed in 2 msec}
DEBUG: audit - 25. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 25. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 25. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@6852e8cc  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 25. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@7679a0f8  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 25. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 25. ResultSet.next() returned true  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 25. ResultSet.getString(MEMBERID) returned admin  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.getString(PASSWORD) returned $2a$10$R1XcilPpsC6eClvR6RtkmOK7cN5yvhfIntRVH9ifJBsBqQmnNCNK2  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.getString(MEMBERNAME) returned 관리자  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.getString(GENDER) returned F  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.getInt(AGE) returned 49  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.getString(EMAIL) returned admin@naver.com  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.getString(PHONE) returned 01012345678  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.getString(ADDRESS) returned 서울시 강남구 버거킹 하하  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor75.invoke(null:-1)
DEBUG: resultset - 25. ResultSet.getDate(ENROLLDATE) returned 2019-01-28  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor75.invoke(null:-1)
DEBUG: resultset - 25. ResultSet.getString(hobby) returned 운동,게임,여행  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 25. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 1
DEBUG: resultset - 25. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 25. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@16da888e  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 25. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 25. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 25. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22b7905e]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22b7905e]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22b7905e]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22b7905e]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@16da888e]
DEBUG: audit - 25. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 25. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 25. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@16da888e]
DEBUG: audit - 25. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@16da888e] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 25. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 25. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdh
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 26. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  26 (1)
DEBUG: audit - 26. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1b676596] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b676596] read-only
DEBUG: audit - 26. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 26. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b676596] to manual commit
DEBUG: audit - 26. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6bb81]
DEBUG: audit - 26. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b676596] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 26. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 26. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6f4be41c  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 26. PreparedStatement.setString(1, "asdh") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdh(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
26. select * from member where memberid = 'asdh'  {executed in 1 msec}
DEBUG: audit - 26. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 26. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 26. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4f2077b6  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 26. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@7a3fe760  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 26. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 26. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 26. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 26. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1b676596  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 26. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 26. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 26. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6bb81]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6bb81]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6bb81]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6bb81]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1b676596]
DEBUG: audit - 26. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 26. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 26. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b676596]
DEBUG: audit - 26. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b676596] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 26. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 26. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwd
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 27. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  27 (1)
DEBUG: audit - 27. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7654e8e1] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7654e8e1] read-only
DEBUG: audit - 27. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 27. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7654e8e1] to manual commit
DEBUG: audit - 27. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@eb46253]
DEBUG: audit - 27. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7654e8e1] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 27. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 27. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@356403b3  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 27. PreparedStatement.setString(1, "asdhfwd") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwd(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
27. select * from member where memberid = 'asdhfwd'  {executed in 1 msec}
DEBUG: audit - 27. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 27. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 27. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@64a6e61e  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 27. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@49adb623  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 27. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 27. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 27. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 27. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7654e8e1  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 27. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 27. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 27. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@eb46253]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@eb46253]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@eb46253]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@eb46253]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7654e8e1]
DEBUG: audit - 27. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 27. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 27. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7654e8e1]
DEBUG: audit - 27. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7654e8e1] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 27. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 27. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwd
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 28. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  28 (1)
DEBUG: audit - 28. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6e7ac165] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e7ac165] read-only
DEBUG: audit - 28. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 28. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e7ac165] to manual commit
DEBUG: audit - 28. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2450adb0]
DEBUG: audit - 28. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e7ac165] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 28. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 28. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3c347b75  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 28. PreparedStatement.setString(1, "asdhfwd") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwd(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
28. select * from member where memberid = 'asdhfwd'  {executed in 1 msec}
DEBUG: audit - 28. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 28. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 28. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4fde47f  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 28. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@25e1e47d  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 28. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 28. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 28. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 28. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6e7ac165  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 28. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 28. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 28. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2450adb0]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2450adb0]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2450adb0]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2450adb0]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6e7ac165]
DEBUG: audit - 28. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 28. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 28. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e7ac165]
DEBUG: audit - 28. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e7ac165] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 28. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 28. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 29. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  29 (1)
DEBUG: audit - 29. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@2a4d23b9] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2a4d23b9] read-only
DEBUG: audit - 29. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 29. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2a4d23b9] to manual commit
DEBUG: audit - 29. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ee32776]
DEBUG: audit - 29. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2a4d23b9] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 29. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 29. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@416fa782  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 29. PreparedStatement.setString(1, "asdhfwdk") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
29. select * from member where memberid = 'asdhfwdk'  {executed in 0 msec}
DEBUG: audit - 29. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 29. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 29. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2fc14fd  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 29. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@5234b43  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 29. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 29. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 29. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 29. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@2a4d23b9  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 29. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 29. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 29. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ee32776]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ee32776]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ee32776]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ee32776]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@2a4d23b9]
DEBUG: audit - 29. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 29. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 29. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2a4d23b9]
DEBUG: audit - 29. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2a4d23b9] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 29. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 29. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdse
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 30. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  30 (1)
DEBUG: audit - 30. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@64071994] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64071994] read-only
DEBUG: audit - 30. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 30. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64071994] to manual commit
DEBUG: audit - 30. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c843f40]
DEBUG: audit - 30. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64071994] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 30. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 30. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@428febc9  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 30. PreparedStatement.setString(1, "asdhfwdkdse") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdse(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
30. select * from member where memberid = 'asdhfwdkdse'  {executed in 0 msec}
DEBUG: audit - 30. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 30. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 30. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1e9891b5  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 30. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@738bc319  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 30. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 30. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 30. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 30. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@64071994  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 30. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 30. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 30. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c843f40]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c843f40]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c843f40]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c843f40]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@64071994]
DEBUG: audit - 30. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 30. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 30. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64071994]
DEBUG: audit - 30. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64071994] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 30. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 30. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsef
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 31. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  31 (1)
DEBUG: audit - 31. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@544715e5] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@544715e5] read-only
DEBUG: audit - 31. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 31. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@544715e5] to manual commit
DEBUG: audit - 31. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37672952]
DEBUG: audit - 31. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@544715e5] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 31. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 31. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1071f64e  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 31. PreparedStatement.setString(1, "asdhfwdkdsef") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsef(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
31. select * from member where memberid = 'asdhfwdkdsef'  {executed in 1 msec}
DEBUG: audit - 31. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 31. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 31. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7cf52198  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 31. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@7256baed  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 31. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 31. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 31. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 31. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@544715e5  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 31. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 31. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 31. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37672952]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37672952]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37672952]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37672952]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@544715e5]
DEBUG: audit - 31. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 31. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 31. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@544715e5]
DEBUG: audit - 31. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@544715e5] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 31. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 31. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsef
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 32. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  32 (1)
DEBUG: audit - 32. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4a9ac9dc] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a9ac9dc] read-only
DEBUG: audit - 32. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 32. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a9ac9dc] to manual commit
DEBUG: audit - 32. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71dfde17]
DEBUG: audit - 32. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a9ac9dc] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 32. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 32. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@57880b47  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 32. PreparedStatement.setString(1, "asdhfwdkdsef") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsef(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
32. select * from member where memberid = 'asdhfwdkdsef'  {executed in 0 msec}
DEBUG: audit - 32. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 32. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 32. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4bc0fc43  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 32. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4460ac4a  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 32. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 32. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 32. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 32. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4a9ac9dc  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 32. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 32. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 32. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71dfde17]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71dfde17]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71dfde17]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71dfde17]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4a9ac9dc]
DEBUG: audit - 32. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 32. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 32. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a9ac9dc]
DEBUG: audit - 32. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a9ac9dc] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 32. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 32. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsef
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 33. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  33 (1)
DEBUG: audit - 33. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@34a417ee] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@34a417ee] read-only
DEBUG: audit - 33. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 33. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@34a417ee] to manual commit
DEBUG: audit - 33. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fce03fa]
DEBUG: audit - 33. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@34a417ee] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 33. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 33. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@701afbd1  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 33. PreparedStatement.setString(1, "asdhfwdkdsef") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsef(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
33. select * from member where memberid = 'asdhfwdkdsef'  {executed in 1 msec}
DEBUG: audit - 33. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 33. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 33. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@6495895b  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 33. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@b2b97e0  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 33. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 33. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 33. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 33. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@34a417ee  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 33. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 33. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 33. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fce03fa]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fce03fa]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fce03fa]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fce03fa]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@34a417ee]
DEBUG: audit - 33. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 33. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 33. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@34a417ee]
DEBUG: audit - 33. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@34a417ee] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 33. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 33. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 34. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  34 (1)
DEBUG: audit - 34. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4df1da72] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4df1da72] read-only
DEBUG: audit - 34. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 34. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4df1da72] to manual commit
DEBUG: audit - 34. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc7e4e6]
DEBUG: audit - 34. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4df1da72] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 34. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 34. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3990e137  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 34. PreparedStatement.setString(1, "asdhfwdkdsefn") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefn(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
34. select * from member where memberid = 'asdhfwdkdsefn'  {executed in 0 msec}
DEBUG: audit - 34. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 34. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 34. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7a719e3d  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 34. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6a01a541  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 34. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 34. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 34. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 34. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4df1da72  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 34. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 34. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 34. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc7e4e6]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc7e4e6]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc7e4e6]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc7e4e6]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4df1da72]
DEBUG: audit - 34. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 34. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 34. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4df1da72]
DEBUG: audit - 34. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4df1da72] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 34. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 34. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnos
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 35. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  35 (1)
DEBUG: audit - 35. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@43a58a1e] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43a58a1e] read-only
DEBUG: audit - 35. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 35. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43a58a1e] to manual commit
DEBUG: audit - 35. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4026b313]
DEBUG: audit - 35. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43a58a1e] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 35. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 35. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@550e482f  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 35. PreparedStatement.setString(1, "asdhfwdkdsefnos") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnos(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
35. select * from member where memberid = 'asdhfwdkdsefnos'  {executed in 1 msec}
DEBUG: audit - 35. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 35. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 35. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3a14ddea  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 35. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4fdf4f90  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 35. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 35. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 35. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 35. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@43a58a1e  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 35. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 35. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 35. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4026b313]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4026b313]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4026b313]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4026b313]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@43a58a1e]
DEBUG: audit - 35. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 35. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 35. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43a58a1e]
DEBUG: audit - 35. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43a58a1e] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 35. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 35. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosr
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 36. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  36 (1)
DEBUG: audit - 36. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6569193e] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6569193e] read-only
DEBUG: audit - 36. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 36. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6569193e] to manual commit
DEBUG: audit - 36. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55327a8b]
DEBUG: audit - 36. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6569193e] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 36. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 36. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1c62cae7  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 36. PreparedStatement.setString(1, "asdhfwdkdsefnosr") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosr(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
36. select * from member where memberid = 'asdhfwdkdsefnosr'  {executed in 1 msec}
DEBUG: audit - 36. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 36. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 36. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@31ef90bc  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 36. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@77cf4228  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 36. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 36. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 36. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 36. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6569193e  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 36. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 36. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 36. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55327a8b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55327a8b]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55327a8b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55327a8b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6569193e]
DEBUG: audit - 36. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 36. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 36. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6569193e]
DEBUG: audit - 36. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6569193e] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 36. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 36. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosr
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 37. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  37 (1)
DEBUG: audit - 37. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6e156754] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e156754] read-only
DEBUG: audit - 37. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 37. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e156754] to manual commit
DEBUG: audit - 37. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bf988be]
DEBUG: audit - 37. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e156754] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 37. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 37. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@c84b043  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 37. PreparedStatement.setString(1, "asdhfwdkdsefnosr") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosr(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
37. select * from member where memberid = 'asdhfwdkdsefnosr'  {executed in 0 msec}
DEBUG: audit - 37. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 37. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 37. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@496e5940  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 37. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@7ee584ab  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 37. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 37. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 37. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 37. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6e156754  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 37. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 37. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 37. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bf988be]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bf988be]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bf988be]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bf988be]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6e156754]
DEBUG: audit - 37. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 37. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 37. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e156754]
DEBUG: audit - 37. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e156754] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 37. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 37. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosr
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 38. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  38 (1)
DEBUG: audit - 38. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6277e162] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6277e162] read-only
DEBUG: audit - 38. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 38. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6277e162] to manual commit
DEBUG: audit - 38. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d07c18a]
DEBUG: audit - 38. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6277e162] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 38. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 38. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3cdac0ee  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 38. PreparedStatement.setString(1, "asdhfwdkdsefnosr") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosr(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
38. select * from member where memberid = 'asdhfwdkdsefnosr'  {executed in 1 msec}
DEBUG: audit - 38. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 38. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 38. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@61fb5ae6  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 38. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@22b3dcc2  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 38. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 38. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 38. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 38. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6277e162  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 38. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 38. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 38. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d07c18a]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d07c18a]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d07c18a]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d07c18a]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6277e162]
DEBUG: audit - 38. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 38. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 38. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6277e162]
DEBUG: audit - 38. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6277e162] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 38. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 38. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhs
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 39. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  39 (1)
DEBUG: audit - 39. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@26f73551] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@26f73551] read-only
DEBUG: audit - 39. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 39. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@26f73551] to manual commit
DEBUG: audit - 39. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a98c5ba]
DEBUG: audit - 39. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@26f73551] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 39. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 39. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@674744ec  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 39. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhs") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhs(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
39. select * from member where memberid = 'asdhfwdkdsefnosrjhs'  {executed in 0 msec}
DEBUG: audit - 39. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 39. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 39. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7805a8e8  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 39. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@24ec0747  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 39. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 39. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 39. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 39. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@26f73551  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 39. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 39. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 39. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a98c5ba]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a98c5ba]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a98c5ba]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a98c5ba]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@26f73551]
DEBUG: audit - 39. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 39. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 39. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@26f73551]
DEBUG: audit - 39. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@26f73551] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 39. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 39. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhs
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 40. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  40 (1)
DEBUG: audit - 40. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3be20ccf] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3be20ccf] read-only
DEBUG: audit - 40. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 40. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3be20ccf] to manual commit
DEBUG: audit - 40. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e79d9]
DEBUG: audit - 40. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3be20ccf] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 40. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 40. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@717fc60e  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 40. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhs") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhs(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
40. select * from member where memberid = 'asdhfwdkdsefnosrjhs'  {executed in 1 msec}
DEBUG: audit - 40. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 40. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 40. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5ad0289a  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 40. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2f6542a8  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 40. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 40. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 40. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 40. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3be20ccf  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 40. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 40. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 40. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e79d9]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e79d9]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e79d9]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e79d9]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3be20ccf]
DEBUG: audit - 40. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 40. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 40. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3be20ccf]
DEBUG: audit - 40. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3be20ccf] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 40. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 40. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhs
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 41. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  41 (1)
DEBUG: audit - 41. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3272d1ad] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3272d1ad] read-only
DEBUG: audit - 41. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 41. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3272d1ad] to manual commit
DEBUG: audit - 41. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2e922b]
DEBUG: audit - 41. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3272d1ad] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 41. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 41. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3fc4c3c8  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 41. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhs") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhs(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
41. select * from member where memberid = 'asdhfwdkdsefnosrjhs'  {executed in 1 msec}
DEBUG: audit - 41. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 41. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 41. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1b9f8224  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 41. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@42f9e4b6  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 41. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 41. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 41. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 41. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3272d1ad  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 41. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 41. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 41. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2e922b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2e922b]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2e922b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2e922b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3272d1ad]
DEBUG: audit - 41. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 41. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 41. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3272d1ad]
DEBUG: audit - 41. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3272d1ad] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 41. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 41. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsosw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 42. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  42 (1)
DEBUG: audit - 42. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@54c7469a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54c7469a] read-only
DEBUG: audit - 42. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 42. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54c7469a] to manual commit
DEBUG: audit - 42. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4302ad76]
DEBUG: audit - 42. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54c7469a] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 42. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 42. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4eaf8cfa  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 42. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsosw") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsosw(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
42. select * from member where memberid = 'asdhfwdkdsefnosrjhsosw'  {executed in 1 msec}
DEBUG: audit - 42. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 42. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 42. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2032f023  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 42. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@760d904e  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 42. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 42. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 42. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 42. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@54c7469a  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 42. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 42. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 42. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4302ad76]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4302ad76]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4302ad76]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4302ad76]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@54c7469a]
DEBUG: audit - 42. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 42. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 42. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54c7469a]
DEBUG: audit - 42. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54c7469a] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 42. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 42. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsosw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 43. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  43 (1)
DEBUG: audit - 43. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@2380285e] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2380285e] read-only
DEBUG: audit - 43. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 43. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2380285e] to manual commit
DEBUG: audit - 43. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e38b8c]
DEBUG: audit - 43. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2380285e] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 43. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 43. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1b370fe3  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 43. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsosw") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsosw(String)
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 44. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  43 44 (2)
DEBUG: audit - 44. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@50ac820b] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@50ac820b] read-only
DEBUG: audit - 44. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
43. select * from member where memberid = 'asdhfwdkdsefnosrjhsosw'  {executed in 3 msec}
DEBUG: audit - 44. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: audit - 43. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@50ac820b] to manual commit
DEBUG: audit - 44. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: resultset - 43. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e0b5870]
DEBUG: audit - 43. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@39570603  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 44. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@50ac820b] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: resultset - 43. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@21f0554e  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: audit - 44. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 44. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@7fb13619  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 43. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: audit - 44. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswn") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswn(String)
DEBUG: resultset - 43. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
44. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswn'  {executed in 2 msec}
DEBUG: resultset - 43. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 44. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 44. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 44. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4bb94f3e  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 44. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@7fc556e1  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 44. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 44. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 44. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 43. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@2380285e  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 44. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@50ac820b  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 44. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2ed3c326  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 43. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 44. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 44. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e0b5870]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e0b5870]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e0b5870]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e0b5870]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@50ac820b]
DEBUG: audit - 44. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 43. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 44. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 44. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@50ac820b]
DEBUG: audit - 43. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e38b8c]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e38b8c]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e38b8c]
DEBUG: audit - 44. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e38b8c]
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@50ac820b] after transaction
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@2380285e]
INFO : connection - 44. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  43 (1)
DEBUG: audit - 43. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 44. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: audit - 43. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 43. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2380285e]
DEBUG: audit - 43. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2380285e] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 43. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 43. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 45. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  45 (1)
DEBUG: audit - 45. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@36921a68] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@36921a68] read-only
DEBUG: audit - 45. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 45. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@36921a68] to manual commit
DEBUG: audit - 45. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@117a73a5]
DEBUG: audit - 45. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@36921a68] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 45. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 45. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@380b7a11  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 45. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwe") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
45. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwe'  {executed in 1 msec}
DEBUG: audit - 45. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 45. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 45. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1e6c6622  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 45. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@5c49d911  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 45. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 45. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 45. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 45. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@36921a68  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 45. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 45. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 45. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@117a73a5]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@117a73a5]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@117a73a5]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@117a73a5]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@36921a68]
DEBUG: audit - 45. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 45. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 45. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@36921a68]
DEBUG: audit - 45. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@36921a68] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 45. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 45. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwef
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 46. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  46 (1)
DEBUG: audit - 46. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@777e3747] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@777e3747] read-only
DEBUG: audit - 46. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 46. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@777e3747] to manual commit
DEBUG: audit - 46. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dc1febd]
DEBUG: audit - 46. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@777e3747] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 46. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 46. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3db521ef  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 46. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwef") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwef(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
46. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwef'  {executed in 1 msec}
DEBUG: audit - 46. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 46. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 46. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3bf7ed11  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 46. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4931d8c4  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 46. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 46. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 46. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 46. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@777e3747  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 46. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 46. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 46. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dc1febd]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dc1febd]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dc1febd]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dc1febd]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@777e3747]
DEBUG: audit - 46. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 46. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 46. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@777e3747]
DEBUG: audit - 46. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@777e3747] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 46. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 46. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwef
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 47. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  47 (1)
DEBUG: audit - 47. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@362f46e1] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@362f46e1] read-only
DEBUG: audit - 47. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 47. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@362f46e1] to manual commit
DEBUG: audit - 47. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f00fecf]
DEBUG: audit - 47. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@362f46e1] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 47. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 47. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@760d08c2  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 47. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwef") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwef(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
47. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwef'  {executed in 1 msec}
DEBUG: audit - 47. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 47. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 47. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3ad940ac  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 47. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@22b737be  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 47. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 47. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 47. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 47. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@362f46e1  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 47. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 47. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 47. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f00fecf]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f00fecf]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f00fecf]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f00fecf]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@362f46e1]
DEBUG: audit - 47. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 47. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 47. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@362f46e1]
DEBUG: audit - 47. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@362f46e1] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 47. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 47. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefj
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 48. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  48 (1)
DEBUG: audit - 48. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7ef51d7e] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ef51d7e] read-only
DEBUG: audit - 48. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 48. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ef51d7e] to manual commit
DEBUG: audit - 48. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6020417a]
DEBUG: audit - 48. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ef51d7e] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 48. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 48. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@b1d6e8a  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 48. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefj") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefj(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
48. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefj'  {executed in 1 msec}
DEBUG: audit - 48. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 48. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 48. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5dd59c7a  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 48. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3f1c3d2b  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 48. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 48. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 48. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 48. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7ef51d7e  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 48. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 48. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 48. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6020417a]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6020417a]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6020417a]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6020417a]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7ef51d7e]
DEBUG: audit - 48. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 48. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 48. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ef51d7e]
DEBUG: audit - 48. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ef51d7e] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 48. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 48. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 49. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  49 (1)
DEBUG: audit - 49. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@57311c03] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57311c03] read-only
DEBUG: audit - 49. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 49. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57311c03] to manual commit
DEBUG: audit - 49. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a0c422d]
DEBUG: audit - 49. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57311c03] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 49. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 49. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1b890bf7  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 49. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjwe") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
49. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjwe'  {executed in 1 msec}
DEBUG: audit - 49. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 49. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 49. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4407cd81  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 49. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2cf2e206  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 49. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 49. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 49. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 49. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@57311c03  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 49. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 49. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 49. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a0c422d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a0c422d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a0c422d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a0c422d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@57311c03]
DEBUG: audit - 49. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 49. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 49. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57311c03]
DEBUG: audit - 49. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57311c03] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 49. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 49. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 50. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  50 (1)
DEBUG: audit - 50. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@79de4f25] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@79de4f25] read-only
DEBUG: audit - 50. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 50. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@79de4f25] to manual commit
DEBUG: audit - 50. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769ea9a6]
DEBUG: audit - 50. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@79de4f25] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 50. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 50. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@28a4bc17  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 50. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofi") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofi(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
50. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofi'  {executed in 1 msec}
DEBUG: audit - 50. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 50. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 50. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@23087941  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 50. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@20d8371f  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 50. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 50. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 50. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 50. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@79de4f25  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 50. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 50. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 50. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769ea9a6]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769ea9a6]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769ea9a6]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769ea9a6]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@79de4f25]
DEBUG: audit - 50. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 50. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 50. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@79de4f25]
DEBUG: audit - 50. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@79de4f25] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 50. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 50. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 51. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  51 (1)
DEBUG: audit - 51. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@2e683639] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2e683639] read-only
DEBUG: audit - 51. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 51. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2e683639] to manual commit
DEBUG: audit - 51. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37ab6abf]
DEBUG: audit - 51. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2e683639] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 51. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 51. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@5d13c226  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 51. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofi") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofi(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
51. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofi'  {executed in 0 msec}
DEBUG: audit - 51. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 51. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 51. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@32a5fe43  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 51. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@5e37843a  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 51. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 51. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 51. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 51. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@2e683639  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 51. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 51. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 51. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37ab6abf]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37ab6abf]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37ab6abf]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37ab6abf]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@2e683639]
DEBUG: audit - 51. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 51. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 51. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2e683639]
DEBUG: audit - 51. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2e683639] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 51. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 51. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 52. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  52 (1)
DEBUG: audit - 52. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1a1094d5] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1a1094d5] read-only
DEBUG: audit - 52. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 52. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1a1094d5] to manual commit
DEBUG: audit - 52. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@286a0331]
DEBUG: audit - 52. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1a1094d5] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 52. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihwe
DEBUG: audit - 52. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@5fb31a4  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 53. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: audit - 52. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihw") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihw(String)
DEBUG: connection - open connections:  52 53 (2)
DEBUG: audit - 53. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@ad2c880] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@ad2c880] read-only
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
52. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihw'  {executed in 2 msec}
DEBUG: audit - 52. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 53. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 53. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: resultset - 52. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@ad2c880] to manual commit
DEBUG: audit - 52. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1bd3bbf2  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 53. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ca5363d]
DEBUG: resultset - 52. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@63585032  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: audit - 53. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: resultset - 52. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@ad2c880] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 53. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 53. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@2843752b  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 52. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: audit - 53. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihwe") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: resultset - 52. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihwe(String)
DEBUG: audit - 52. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1a1094d5  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 52. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 52. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 52. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@286a0331]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@286a0331]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@286a0331]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@286a0331]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1a1094d5]
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
53. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihwe'  {executed in 1 msec}
DEBUG: audit - 53. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 52. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: resultset - 53. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 52. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 53. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@34492e6b  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 52. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1a1094d5]
DEBUG: resultset - 53. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6108f201  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: audit - 52. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1a1094d5] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
DEBUG: resultset - 53. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
INFO : connection - 52. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  53 (1)
DEBUG: audit - 52. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: resultset - 53. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 53. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 53. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@ad2c880  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 53. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2ed3c326  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 53. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 53. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ca5363d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ca5363d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ca5363d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ca5363d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@ad2c880]
DEBUG: audit - 53. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: audit - 53. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 53. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihw
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@ad2c880]
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
DEBUG: audit - 53. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@ad2c880] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 54. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  54 (1)
INFO : connection - 53. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  54 (1)
DEBUG: audit - 54. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4d40d8bf] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4d40d8bf] read-only
DEBUG: audit - 53. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: audit - 54. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: audit - 54. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4d40d8bf] to manual commit
DEBUG: audit - 54. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e2b9ee3]
DEBUG: audit - 54. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4d40d8bf] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 54. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 54. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4c3488a9  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 54. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihw") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihw(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
54. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihw'  {executed in 1 msec}
DEBUG: audit - 54. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 54. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 54. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@77a34b0  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 54. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@35146e3a  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 54. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 54. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 54. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 54. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4d40d8bf  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 54. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 54. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 54. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e2b9ee3]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e2b9ee3]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e2b9ee3]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e2b9ee3]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4d40d8bf]
DEBUG: audit - 54. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 54. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 54. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4d40d8bf]
DEBUG: audit - 54. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4d40d8bf] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 54. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 54. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 55. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  55 (1)
DEBUG: audit - 55. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@390e8f1a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@390e8f1a] read-only
DEBUG: audit - 55. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 55. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@390e8f1a] to manual commit
DEBUG: audit - 55. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab6b1d8]
DEBUG: audit - 55. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@390e8f1a] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 55. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 55. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@35854568  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 55. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihwe") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
55. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihwe'  {executed in 1 msec}
DEBUG: audit - 55. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 55. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 55. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@783e6a9d  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 55. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@17693c33  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 55. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 55. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 55. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 55. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@390e8f1a  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 55. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 55. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 55. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab6b1d8]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab6b1d8]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab6b1d8]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab6b1d8]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@390e8f1a]
DEBUG: audit - 55. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 55. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 55. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@390e8f1a]
DEBUG: audit - 55. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@390e8f1a] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 55. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 55. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoif
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 56. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  56 (1)
DEBUG: audit - 56. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4e8eda98] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4e8eda98] read-only
DEBUG: audit - 56. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 56. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4e8eda98] to manual commit
DEBUG: audit - 56. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aa030ff]
DEBUG: audit - 56. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4e8eda98] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 56. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 56. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@190bc524  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 56. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoif") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoif(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
56. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoif'  {executed in 0 msec}
DEBUG: audit - 56. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 56. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 56. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@21698687  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 56. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@7a956d9d  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 56. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 56. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 56. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 56. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4e8eda98  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 56. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 56. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 56. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aa030ff]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aa030ff]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aa030ff]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aa030ff]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4e8eda98]
DEBUG: audit - 56. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 56. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 56. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4e8eda98]
DEBUG: audit - 56. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4e8eda98] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 56. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 56. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoif
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 57. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  57 (1)
DEBUG: audit - 57. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@24e55c99] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@24e55c99] read-only
DEBUG: audit - 57. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 57. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@24e55c99] to manual commit
DEBUG: audit - 57. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e52355b]
DEBUG: audit - 57. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@24e55c99] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 57. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 57. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@492cedbb  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 57. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoif") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoif(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
57. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoif'  {executed in 0 msec}
DEBUG: audit - 57. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 57. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 57. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@47237193  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 57. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@18046cc1  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 57. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 57. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 57. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 57. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@24e55c99  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 57. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 57. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 57. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e52355b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e52355b]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e52355b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e52355b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@24e55c99]
DEBUG: audit - 57. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 57. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 57. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@24e55c99]
DEBUG: audit - 57. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@24e55c99] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 57. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 57. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoif
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 58. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  58 (1)
DEBUG: audit - 58. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4a6a080b] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a6a080b] read-only
DEBUG: audit - 58. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 58. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a6a080b] to manual commit
DEBUG: audit - 58. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ae356f2]
DEBUG: audit - 58. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a6a080b] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 58. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 58. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@58fb2a2  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 58. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoif") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoif(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
58. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoif'  {executed in 1 msec}
DEBUG: audit - 58. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 58. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 58. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1fbfc848  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 58. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2f5b598b  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 58. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 58. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 58. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 58. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4a6a080b  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 58. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 58. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 58. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ae356f2]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ae356f2]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ae356f2]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ae356f2]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4a6a080b]
DEBUG: audit - 58. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 58. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 58. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a6a080b]
DEBUG: audit - 58. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a6a080b] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 58. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 58. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoif
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 59. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  59 (1)
DEBUG: audit - 59. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@2c22ae6d] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2c22ae6d] read-only
DEBUG: audit - 59. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 59. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2c22ae6d] to manual commit
DEBUG: audit - 59. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f27cead]
DEBUG: audit - 59. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2c22ae6d] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 59. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 59. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3eef4f6f  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 59. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoif") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoif(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
59. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoif'  {executed in 1 msec}
DEBUG: audit - 59. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 59. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 59. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@787cf19  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 59. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@46142be2  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 59. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 59. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 59. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 59. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@2c22ae6d  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 59. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 59. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 59. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f27cead]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f27cead]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f27cead]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f27cead]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@2c22ae6d]
DEBUG: audit - 59. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 59. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 59. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2c22ae6d]
DEBUG: audit - 59. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2c22ae6d] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 59. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 59. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoifwje
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 60. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  60 (1)
DEBUG: audit - 60. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@372d970] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@372d970] read-only
DEBUG: audit - 60. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 60. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@372d970] to manual commit
DEBUG: audit - 60. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e3b990d]
DEBUG: audit - 60. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@372d970] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 60. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 60. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@f1889f9  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 60. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoifwje") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoifwje(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
60. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoifwje'  {executed in 1 msec}
DEBUG: audit - 60. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 60. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 60. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1a347833  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 60. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@48157989  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 60. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 60. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 60. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 60. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@372d970  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 60. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 60. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 60. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e3b990d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e3b990d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e3b990d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e3b990d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@372d970]
DEBUG: audit - 60. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 60. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 60. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@372d970]
DEBUG: audit - 60. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@372d970] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 60. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 60. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 61. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  61 (1)
DEBUG: audit - 61. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1c31fb10] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1c31fb10] read-only
DEBUG: audit - 61. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 61. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1c31fb10] to manual commit
DEBUG: audit - 61. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f701842]
DEBUG: audit - 61. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1c31fb10] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 61. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 61. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@20cef830  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 61. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoi") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoi(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
61. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoi'  {executed in 1 msec}
DEBUG: audit - 61. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 61. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 61. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@33346e42  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 61. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6cd9d26e  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 61. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 61. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 61. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 61. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1c31fb10  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 61. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 61. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 61. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f701842]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f701842]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f701842]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f701842]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1c31fb10]
DEBUG: audit - 61. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 61. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 61. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1c31fb10]
DEBUG: audit - 61. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1c31fb10] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 61. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 61. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 62. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  62 (1)
DEBUG: audit - 62. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@e34285b] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e34285b] read-only
DEBUG: audit - 62. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 62. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e34285b] to manual commit
DEBUG: audit - 62. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@529e5e28]
DEBUG: audit - 62. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e34285b] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 62. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 62. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@75ec60c2  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 62. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
62. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif'  {executed in 1 msec}
DEBUG: audit - 62. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 62. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 62. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5ab5f8d4  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 62. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@7a7a92b4  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 62. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 62. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 62. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 62. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@e34285b  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 62. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 62. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 62. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@529e5e28]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@529e5e28]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@529e5e28]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@529e5e28]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@e34285b]
DEBUG: audit - 62. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 62. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 62. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e34285b]
DEBUG: audit - 62. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e34285b] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 62. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 62. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 63. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  63 (1)
DEBUG: audit - 63. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3e023d0e] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e023d0e] read-only
DEBUG: audit - 63. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 63. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e023d0e] to manual commit
DEBUG: audit - 63. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ddbfdc8]
DEBUG: audit - 63. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e023d0e] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 63. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 63. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@5622cc96  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 63. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
63. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif'  {executed in 1 msec}
DEBUG: audit - 63. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 63. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 63. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@79e76111  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 63. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2b00e658  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 63. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 63. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 63. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 63. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3e023d0e  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 63. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 63. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 63. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ddbfdc8]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ddbfdc8]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ddbfdc8]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ddbfdc8]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3e023d0e]
DEBUG: audit - 63. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 63. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 63. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e023d0e]
DEBUG: audit - 63. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e023d0e] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 63. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 63. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 64. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  64 (1)
DEBUG: audit - 64. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@35084681] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@35084681] read-only
DEBUG: audit - 64. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 64. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@35084681] to manual commit
DEBUG: audit - 64. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d11e149]
DEBUG: audit - 64. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@35084681] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 64. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 64. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1d6b4b08  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 64. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
64. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif'  {executed in 0 msec}
DEBUG: audit - 64. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 64. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 64. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@6aa03a6a  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 64. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@38e995de  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 64. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 64. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 64. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 64. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@35084681  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 64. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 64. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 64. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d11e149]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d11e149]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d11e149]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d11e149]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@35084681]
DEBUG: audit - 64. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 64. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 64. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@35084681]
DEBUG: audit - 64. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@35084681] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 64. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 64. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 65. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  65 (1)
DEBUG: audit - 65. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4e2e755] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4e2e755] read-only
DEBUG: audit - 65. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 65. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4e2e755] to manual commit
DEBUG: audit - 65. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b535ca4]
DEBUG: audit - 65. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4e2e755] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 65. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 65. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4e649940  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 65. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
65. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoif'  {executed in 1 msec}
DEBUG: audit - 65. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 65. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 65. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5d2f0796  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 65. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@5c98d6eb  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 65. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 65. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 65. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 65. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4e2e755  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 65. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 65. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 65. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b535ca4]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b535ca4]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b535ca4]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b535ca4]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4e2e755]
DEBUG: audit - 65. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 65. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 65. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4e2e755]
DEBUG: audit - 65. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4e2e755] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 65. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 65. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 66. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  66 (1)
DEBUG: audit - 66. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7a20ee39] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7a20ee39] read-only
DEBUG: audit - 66. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 66. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7a20ee39] to manual commit
DEBUG: audit - 66. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d4536bc]
DEBUG: audit - 66. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7a20ee39] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 66. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 66. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1dda43b  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 66. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhwe") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
66. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhwe'  {executed in 1 msec}
DEBUG: audit - 66. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 66. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 66. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7c71c31f  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 66. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6815eafb  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 66. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 66. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 66. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 66. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7a20ee39  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 66. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 66. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 66. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d4536bc]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d4536bc]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d4536bc]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d4536bc]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7a20ee39]
DEBUG: audit - 66. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 66. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 66. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7a20ee39]
DEBUG: audit - 66. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7a20ee39] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 66. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 66. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhwei
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 67. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  67 (1)
DEBUG: audit - 67. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@46cf784e] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@46cf784e] read-only
DEBUG: audit - 67. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 67. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@46cf784e] to manual commit
DEBUG: audit - 67. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a01419]
DEBUG: audit - 67. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@46cf784e] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 67. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 67. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@f8a5f58  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 67. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhwei") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhwei(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
67. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhwei'  {executed in 0 msec}
DEBUG: audit - 67. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 67. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 67. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@323a5bef  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 67. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@5ad2916d  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 67. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 67. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 67. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 67. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@46cf784e  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 67. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 67. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 67. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a01419]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a01419]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a01419]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a01419]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@46cf784e]
DEBUG: audit - 67. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 67. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 67. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@46cf784e]
DEBUG: audit - 67. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@46cf784e] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 67. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 67. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 68. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  68 (1)
DEBUG: audit - 68. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@55c9dd01] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@55c9dd01] read-only
DEBUG: audit - 68. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 68. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@55c9dd01] to manual commit
DEBUG: audit - 68. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dab6fb8]
DEBUG: audit - 68. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@55c9dd01] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 68. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 68. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@395590d1  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 68. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
68. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif'  {executed in 0 msec}
DEBUG: audit - 68. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 68. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 68. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@226f732f  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 68. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@54cf1e75  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 68. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 68. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 68. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 68. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@55c9dd01  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 68. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 68. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 68. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dab6fb8]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dab6fb8]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dab6fb8]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dab6fb8]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@55c9dd01]
DEBUG: audit - 68. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 68. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 68. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@55c9dd01]
DEBUG: audit - 68. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@55c9dd01] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 68. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 68. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 69. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  69 (1)
DEBUG: audit - 69. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@70ec7a3a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@70ec7a3a] read-only
DEBUG: audit - 69. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 69. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@70ec7a3a] to manual commit
DEBUG: audit - 69. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34bcc77f]
DEBUG: audit - 69. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@70ec7a3a] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 69. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 69. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6a565890  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 69. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
69. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif'  {executed in 1 msec}
DEBUG: audit - 69. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 69. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 69. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@79f8c24a  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 69. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2bad6535  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 69. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 69. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 69. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 69. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@70ec7a3a  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 69. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 69. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 69. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34bcc77f]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34bcc77f]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34bcc77f]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34bcc77f]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@70ec7a3a]
DEBUG: audit - 69. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 69. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 69. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@70ec7a3a]
DEBUG: audit - 69. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@70ec7a3a] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 69. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 69. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 70. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  70 (1)
DEBUG: audit - 70. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6f745d8a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f745d8a] read-only
DEBUG: audit - 70. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 70. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f745d8a] to manual commit
DEBUG: audit - 70. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246846dc]
DEBUG: audit - 70. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f745d8a] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 70. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 70. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@7e9eac9e  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 70. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
70. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif'  {executed in 1 msec}
DEBUG: audit - 70. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 70. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 70. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@33cb26ca  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 70. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@55f3d8c9  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 70. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 70. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 70. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 70. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6f745d8a  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 70. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 70. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 70. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246846dc]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246846dc]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246846dc]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246846dc]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6f745d8a]
DEBUG: audit - 70. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 70. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 70. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f745d8a]
DEBUG: audit - 70. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f745d8a] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 70. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 70. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 71. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  71 (1)
DEBUG: audit - 71. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7b640f06] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b640f06] read-only
DEBUG: audit - 71. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 71. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b640f06] to manual commit
DEBUG: audit - 71. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c3c6722]
DEBUG: audit - 71. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b640f06] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 71. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 71. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1e02a5c8  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 71. PreparedStatement.setString(1, "asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
71. select * from member where memberid = 'asdhfwdkdsefnosrjhsoswnwefjweofihweoifwjeoifhweif'  {executed in 1 msec}
DEBUG: audit - 71. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 71. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 71. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@45c59531  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 71. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@a8fefdc  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 71. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 71. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 71. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 71. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7b640f06  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 71. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 71. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 71. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c3c6722]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c3c6722]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c3c6722]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c3c6722]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7b640f06]
DEBUG: audit - 71. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 71. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 71. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b640f06]
DEBUG: audit - 71. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b640f06] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 71. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 71. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 72. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  72 (1)
DEBUG: audit - 72. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5991ee86] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5991ee86] read-only
DEBUG: audit - 72. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 72. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5991ee86] to manual commit
DEBUG: audit - 72. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3355c26d]
DEBUG: audit - 72. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5991ee86] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 72. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 72. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@cd6d39f  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 72. PreparedStatement.setString(1, "admi") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
72. select * from member where memberid = 'admi'  {executed in 1 msec}
DEBUG: audit - 72. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 72. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 72. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5a65e95d  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 72. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@473e0ed6  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 72. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 72. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 72. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 72. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5991ee86  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 72. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 72. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 72. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3355c26d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3355c26d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3355c26d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3355c26d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5991ee86]
DEBUG: audit - 72. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 72. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 72. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5991ee86]
DEBUG: audit - 72. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5991ee86] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 72. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 72. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admin
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 73. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  73 (1)
DEBUG: audit - 73. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@160f397e] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@160f397e] read-only
DEBUG: audit - 73. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 73. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@160f397e] to manual commit
DEBUG: audit - 73. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a9fabf8]
DEBUG: audit - 73. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@160f397e] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 73. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 73. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4f019746  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: audit - 73. PreparedStatement.setString(1, "admin") returned   sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admin(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
73. select * from member where memberid = 'admin'  {executed in 0 msec}
DEBUG: audit - 73. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: audit - 73. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@202a9311  sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@27ed2c87  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.next() returned true  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getString(MEMBERID) returned admin  sun.reflect.GeneratedMethodAccessor76.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor75.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getString(PASSWORD) returned $2a$10$R1XcilPpsC6eClvR6RtkmOK7cN5yvhfIntRVH9ifJBsBqQmnNCNK2  sun.reflect.GeneratedMethodAccessor76.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor75.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getString(MEMBERNAME) returned 관리자  sun.reflect.GeneratedMethodAccessor76.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor75.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getString(GENDER) returned F  sun.reflect.GeneratedMethodAccessor76.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor75.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getInt(AGE) returned 49  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 73. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor75.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getString(EMAIL) returned admin@naver.com  sun.reflect.GeneratedMethodAccessor76.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor75.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getString(PHONE) returned 01012345678  sun.reflect.GeneratedMethodAccessor76.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor75.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getString(ADDRESS) returned 서울시 강남구 버거킹 하하  sun.reflect.GeneratedMethodAccessor76.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor75.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getDate(ENROLLDATE) returned 2019-01-28  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 73. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor75.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getString(hobby) returned 운동,게임,여행  sun.reflect.GeneratedMethodAccessor76.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 1
DEBUG: resultset - 73. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 73. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@160f397e  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 73. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2b4fe001  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 73. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 73. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a9fabf8]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a9fabf8]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a9fabf8]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a9fabf8]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@160f397e]
DEBUG: audit - 73. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 73. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 73. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@160f397e]
DEBUG: audit - 73. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@160f397e] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 73. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 73. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
INFO : XmlWebApplicationContext - Closing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:16:41 KST 2019]; parent: Root WebApplicationContext
INFO : XmlWebApplicationContext - Closing Root WebApplicationContext: startup date [Thu Feb 07 16:16:38 KST 2019]; root of context hierarchy
INFO : ContextLoader - Root WebApplicationContext: initialization started
INFO : XmlWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Thu Feb 07 16:34:53 KST 2019]; root of context hierarchy
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/root-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/security-context.xml]
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@737fb010]
DEBUG: LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
DEBUG: SqlSessionFactoryBean - Parsed configuration file: 'class path resource [mybatis-config.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\board\board-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\demo\demo-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\member\member-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\memo\memo-mapper.xml]'
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : ContextLoader - Root WebApplicationContext: initialization completed in 8124 ms
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization started
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.active]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.default]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
INFO : XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:35:01 KST 2019]; parent: Root WebApplicationContext
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/servlet-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/aspect-context.xml]
INFO : AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@4ad8c859]
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object com.kh.spring.common.aop.AroundAdviceAspect.aroundAdvice(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.LoginLoggerAdvice.advice(org.aspectj.lang.JoinPoint,java.lang.Object)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceDelete(org.aspectj.lang.JoinPoint)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceInsert(org.aspectj.lang.JoinPoint)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardList.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.selectBoardList(int,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardForm.do]}" onto public void com.kh.spring.board.controller.BoardController.boardForm()
INFO : RequestMappingHandlerMapping - Mapped "{[/board/insertBoard.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.insertBoard(com.kh.spring.board.model.vo.Board,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardView.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.boardView(org.springframework.web.servlet.ModelAndView,int)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/fileDownload.do]}" onto public void com.kh.spring.board.controller.BoardController.fileDownload(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo()
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo1.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo1(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo2.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo2(org.springframework.ui.Model,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo3.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo3(org.springframework.ui.Model,com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/insertDev.do],methods=[POST]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.insertDev(com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demoList.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.selectDemoList(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/deleteDev.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.deleteDemo(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.kh.spring.HomeController.home(java.util.Locale,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnroll.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnrollEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogin.do],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogout.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberView.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberUpdateEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/checkDuplicate.do]}" onto public void com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/memo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/insertMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/deleteMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:35:01 KST 2019]; parent: Root WebApplicationContext
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:35:01 KST 2019]; parent: Root WebApplicationContext
INFO : SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0'
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'boardServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.board.model.service.BoardServiceImpl@b96b898]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'demoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.demo.model.service.DemoServiceImpl@6732f954]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.model.service.MemberServiceImpl@69504a36]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberController' with 0 common interceptors and 2 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.controller.MemberController@2465db1f]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public void com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.model.service.MemoServiceImpl@602199a]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoController' with 0 common interceptors and 4 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.controller.MemoController@a1e8a38]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization completed in 12200 ms
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/memberEnroll.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - 회원등록페이지 요청
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdf
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdfq
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - ... log4jdbc initializing ...
DEBUG: debug -   log4jdbc.properties not found on classpath
DEBUG: debug - x log4jdbc.debug.stack.prefix is not defined
DEBUG: debug - x log4jdbc.sqltiming.warn.threshold is not defined
DEBUG: debug - x log4jdbc.sqltiming.error.threshold is not defined
DEBUG: debug - x log4jdbc.dump.booleanastruefalse is not defined (using default value false)
DEBUG: debug - x log4jdbc.dump.sql.maxlinelength is not defined (using default of 90)
DEBUG: debug - x log4jdbc.dump.fulldebugstacktrace is not defined (using default value false)
DEBUG: debug - x log4jdbc.statement.warn is not defined (using default value false)
DEBUG: debug - x log4jdbc.dump.sql.select is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.insert is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.update is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.delete is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.create is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.addsemicolon is not defined (using default value false)
DEBUG: debug - x log4jdbc.auto.load.popular.drivers is not defined (using default value true)
DEBUG: debug - x log4jdbc.trim.sql is not defined (using default value true)
DEBUG: debug - x log4jdbc.suppress.generated.keys.exception is not defined (using default value false)
DEBUG: debug - x log4jdbc.drivers is not defined
DEBUG: debug -   FOUND DRIVER oracle.jdbc.OracleDriver
DEBUG: debug -   FOUND DRIVER oracle.jdbc.driver.OracleDriver
DEBUG: debug - ... log4jdbc initialized! ...
DEBUG: debug - driver name is Oracle JDBC driver
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 1. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
INFO : connection - 2. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  1 2 (2)
DEBUG: connection - open connections:  1 2 (2)
DEBUG: audit - 1. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: audit - 2. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@20756d49] for JDBC transaction
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5e3e737a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@20756d49] read-only
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e3e737a] read-only
DEBUG: audit - 2. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 1. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 1. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: audit - 2. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@20756d49] to manual commit
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e3e737a] to manual commit
DEBUG: audit - 1. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: audit - 2. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e118c35]
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@564563ac]
DEBUG: audit - 1. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@20756d49] will be managed by Spring
DEBUG: audit - 2. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e3e737a] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdfqwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 3. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  1 2 3 (3)
DEBUG: audit - 3. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@48becb42] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@48becb42] read-only
DEBUG: audit - 3. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 3. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@48becb42] to manual commit
DEBUG: audit - 3. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbc4c31]
DEBUG: audit - 3. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@48becb42] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 3. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3cfb82d9  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@722245e5  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3ddeda36  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.setString(1, "asdfqwe") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: asdfqwe(String)
DEBUG: audit - 1. PreparedStatement.setString(1, "asdf") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.setString(1, "asdfq") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: asdfq(String)
DEBUG: selectOneMember - ==> Parameters: asdf(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
2. select * from member where memberid = 'asdfq'  {executed in 26 msec}
DEBUG: audit - 2. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
1. select * from member where memberid = 'asdf'  {executed in 32 msec}
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
3. select * from member where memberid = 'asdfqwe'  {executed in 39 msec}
DEBUG: audit - 3. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4ac92d81  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@451580f8  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@12664091  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@1c2a660  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@218508e3  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2658ae17  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 3. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@48becb42  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2ee359d8  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 3. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbc4c31]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbc4c31]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbc4c31]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbc4c31]
DEBUG: resultset - 1. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@20756d49  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@84ff246  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: audit - 1. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@48becb42]
DEBUG: audit - 1. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@564563ac]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@564563ac]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@564563ac]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@564563ac]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@20756d49]
DEBUG: audit - 1. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 1. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: resultset - 2. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: audit - 3. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdfqwer
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: selectOneMember - <==      Total: 0
DEBUG: audit - 1. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@20756d49]
DEBUG: audit - 1. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@20756d49] after transaction
DEBUG: resultset - 2. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
DEBUG: audit - 2. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5e3e737a  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
INFO : connection - 1. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: audit - 2. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@4846b64f  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: connection - open connections:  2 3 (2)
DEBUG: audit - 1. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: audit - 2. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e118c35]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e118c35]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e118c35]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e118c35]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5e3e737a]
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: audit - 2. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 2. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 2. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e3e737a]
DEBUG: audit - 2. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e3e737a] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 2. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  3 (1)
DEBUG: audit - 2. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: audit - 3. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@48becb42]
DEBUG: audit - 3. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@48becb42] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 3. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 3. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdfqwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 4. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  4 (1)
DEBUG: audit - 4. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1236e56b] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1236e56b] read-only
DEBUG: audit - 4. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 4. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1236e56b] to manual commit
DEBUG: audit - 4. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@184a3152]
DEBUG: audit - 4. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1236e56b] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 4. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@16f9aed4  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.setString(1, "asdfqwe") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: asdfqwe(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
4. select * from member where memberid = 'asdfqwe'  {executed in 1 msec}
DEBUG: audit - 4. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@33c10cdd  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@7ac86b56  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 4. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1236e56b  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@2ee359d8  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 4. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@184a3152]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@184a3152]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@184a3152]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@184a3152]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1236e56b]
DEBUG: audit - 4. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 4. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 4. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1236e56b]
DEBUG: audit - 4. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1236e56b] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 4. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 4. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 5. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  5 (1)
DEBUG: audit - 5. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6cc0f79f] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6cc0f79f] read-only
DEBUG: audit - 5. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 5. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6cc0f79f] to manual commit
DEBUG: audit - 5. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29c27463]
DEBUG: audit - 5. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6cc0f79f] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 5. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@18a1f8d1  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.setString(1, "asdfqwer") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: asdfqwer(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
5. select * from member where memberid = 'asdfqwer'  {executed in 2 msec}
DEBUG: audit - 5. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@73b69855  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@49ed8b2c  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 5. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6cc0f79f  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3871358b  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 5. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29c27463]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29c27463]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29c27463]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29c27463]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6cc0f79f]
DEBUG: audit - 5. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 5. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 5. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6cc0f79f]
DEBUG: audit - 5. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6cc0f79f] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 5. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 5. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdfqwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 6. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  6 (1)
DEBUG: audit - 6. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@625c1136] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@625c1136] read-only
DEBUG: audit - 6. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 6. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@625c1136] to manual commit
DEBUG: audit - 6. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9bf30d]
DEBUG: audit - 6. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@625c1136] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 6. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@2da6f936  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.setString(1, "asdfqwe") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: asdfqwe(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
6. select * from member where memberid = 'asdfqwe'  {executed in 1 msec}
DEBUG: audit - 6. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2f718815  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@1cc1156d  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 6. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@625c1136  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3871358b  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 6. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9bf30d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9bf30d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9bf30d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9bf30d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@625c1136]
DEBUG: audit - 6. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 6. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 6. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@625c1136]
DEBUG: audit - 6. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@625c1136] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 6. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 6. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdfqw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 7. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  7 (1)
DEBUG: audit - 7. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@29876e27] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29876e27] read-only
DEBUG: audit - 7. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 7. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29876e27] to manual commit
DEBUG: audit - 7. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27408567]
DEBUG: audit - 7. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29876e27] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 7. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@667d8f5c  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.setString(1, "asdfqw") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: asdfqw(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
7. select * from member where memberid = 'asdfqw'  {executed in 1 msec}
DEBUG: audit - 7. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@741923e2  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@5751ebbb  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 7. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@29876e27  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3871358b  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 7. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27408567]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27408567]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27408567]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27408567]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@29876e27]
DEBUG: audit - 7. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 7. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 7. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29876e27]
DEBUG: audit - 7. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29876e27] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 7. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 7. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdfq
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 8. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  8 (1)
DEBUG: audit - 8. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4bb6112f] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4bb6112f] read-only
DEBUG: audit - 8. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 8. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4bb6112f] to manual commit
DEBUG: audit - 8. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@196dc629]
DEBUG: audit - 8. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4bb6112f] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 8. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@7bff93ca  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.setString(1, "asdfq") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: asdfq(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
8. select * from member where memberid = 'asdfq'  {executed in 1 msec}
DEBUG: audit - 8. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3bdaf3  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@77100853  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 8. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4bb6112f  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3871358b  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 8. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@196dc629]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@196dc629]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@196dc629]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@196dc629]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4bb6112f]
DEBUG: audit - 8. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 8. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 8. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4bb6112f]
DEBUG: audit - 8. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4bb6112f] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 8. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 8. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdf
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 9. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  9 (1)
DEBUG: audit - 9. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3de7db4b] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3de7db4b] read-only
DEBUG: audit - 9. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 9. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3de7db4b] to manual commit
DEBUG: audit - 9. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d8482f]
DEBUG: audit - 9. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3de7db4b] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 9. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4ed22f6f  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.setString(1, "asdf") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: asdf(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
9. select * from member where memberid = 'asdf'  {executed in 1 msec}
DEBUG: audit - 9. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4d6c887d  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@368e28cf  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 9. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3de7db4b  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3871358b  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 9. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d8482f]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d8482f]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d8482f]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d8482f]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3de7db4b]
DEBUG: audit - 9. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 9. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 9. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3de7db4b]
DEBUG: audit - 9. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3de7db4b] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 9. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 9. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : asdf
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 10. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  10 (1)
DEBUG: audit - 10. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@189823bb] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@189823bb] read-only
DEBUG: audit - 10. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 10. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@189823bb] to manual commit
DEBUG: audit - 10. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e0b6ba0]
DEBUG: audit - 10. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@189823bb] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 10. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@29b0ec6a  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.setString(1, "asdf") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: asdf(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
10. select * from member where memberid = 'asdf'  {executed in 1 msec}
DEBUG: audit - 10. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@706c871c  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@256fa4da  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 10. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@189823bb  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3871358b  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 10. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e0b6ba0]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e0b6ba0]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e0b6ba0]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e0b6ba0]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@189823bb]
DEBUG: audit - 10. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 10. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 10. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@189823bb]
DEBUG: audit - 10. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@189823bb] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 10. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 10. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 11. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  11 (1)
DEBUG: audit - 11. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@71392008] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@71392008] read-only
DEBUG: audit - 11. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 11. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@71392008] to manual commit
DEBUG: audit - 11. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cf4eb1b]
DEBUG: audit - 11. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@71392008] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 11. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1259594a  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. PreparedStatement.setString(1, "admi") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
11. select * from member where memberid = 'admi'  {executed in 1 msec}
DEBUG: audit - 11. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 11. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2a581269  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 11. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@21ff980a  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 11. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 11. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 11. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@71392008  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3871358b  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 11. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cf4eb1b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cf4eb1b]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cf4eb1b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cf4eb1b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@71392008]
DEBUG: audit - 11. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 11. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 11. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@71392008]
DEBUG: audit - 11. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@71392008] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 11. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 11. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admin
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 12. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  12 (1)
DEBUG: audit - 12. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7f17e08f] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7f17e08f] read-only
DEBUG: audit - 12. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 12. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7f17e08f] to manual commit
DEBUG: audit - 12. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71d0011d]
DEBUG: audit - 12. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7f17e08f] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 12. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@30ed0b26  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. PreparedStatement.setString(1, "admin") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admin(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
12. select * from member where memberid = 'admin'  {executed in 2 msec}
DEBUG: audit - 12. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@70be862c  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@197b9cf  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.next() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getString(MEMBERID) returned admin  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getString(PASSWORD) returned $2a$10$R1XcilPpsC6eClvR6RtkmOK7cN5yvhfIntRVH9ifJBsBqQmnNCNK2  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getString(MEMBERNAME) returned 관리자  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getString(GENDER) returned F  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getInt(AGE) returned 49  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getString(EMAIL) returned admin@naver.com  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getString(PHONE) returned 01012345678  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getString(ADDRESS) returned 서울시 강남구 버거킹 하하  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getDate(ENROLLDATE) returned 2019-01-28  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getString(hobby) returned 운동,게임,여행  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 1
DEBUG: resultset - 12. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7f17e08f  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3871358b  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 12. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71d0011d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71d0011d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71d0011d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71d0011d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7f17e08f]
DEBUG: audit - 12. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 12. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 12. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7f17e08f]
DEBUG: audit - 12. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7f17e08f] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 12. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 12. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/memberEnroll.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - 회원등록페이지 요청
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 13. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  13 (1)
DEBUG: audit - 13. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6539570c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6539570c] read-only
DEBUG: audit - 13. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 13. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6539570c] to manual commit
DEBUG: audit - 13. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@625ff9a2]
DEBUG: audit - 13. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6539570c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 13. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4bc88e16  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. PreparedStatement.setString(1, "admi") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
13. select * from member where memberid = 'admi'  {executed in 1 msec}
DEBUG: audit - 13. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 13. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@64e63154  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 13. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@79e95683  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 13. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 13. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 13. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6539570c  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3871358b  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 13. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@625ff9a2]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@625ff9a2]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@625ff9a2]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@625ff9a2]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6539570c]
DEBUG: audit - 13. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 13. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 13. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6539570c]
DEBUG: audit - 13. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6539570c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 13. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 13. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admin
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 14. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  14 (1)
DEBUG: audit - 14. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1cf52e3f] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cf52e3f] read-only
DEBUG: audit - 14. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 14. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cf52e3f] to manual commit
DEBUG: audit - 14. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4303d399]
DEBUG: audit - 14. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cf52e3f] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 14. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@2d8a013b  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. PreparedStatement.setString(1, "admin") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admin(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
14. select * from member where memberid = 'admin'  {executed in 1 msec}
DEBUG: audit - 14. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@18bb5663  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4579c1f6  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.next() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getString(MEMBERID) returned admin  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getString(PASSWORD) returned $2a$10$R1XcilPpsC6eClvR6RtkmOK7cN5yvhfIntRVH9ifJBsBqQmnNCNK2  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getString(MEMBERNAME) returned 관리자  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getString(GENDER) returned F  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getInt(AGE) returned 49  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getString(EMAIL) returned admin@naver.com  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getString(PHONE) returned 01012345678  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getString(ADDRESS) returned 서울시 강남구 버거킹 하하  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 14. ResultSet.getDate(ENROLLDATE) returned 2019-01-28  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 14. ResultSet.getString(hobby) returned 운동,게임,여행  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 1
DEBUG: resultset - 14. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1cf52e3f  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3871358b  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 14. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4303d399]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4303d399]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4303d399]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4303d399]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1cf52e3f]
DEBUG: audit - 14. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 14. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 14. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cf52e3f]
DEBUG: audit - 14. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cf52e3f] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 14. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 14. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
INFO : XmlWebApplicationContext - Closing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:35:01 KST 2019]; parent: Root WebApplicationContext
INFO : XmlWebApplicationContext - Closing Root WebApplicationContext: startup date [Thu Feb 07 16:34:53 KST 2019]; root of context hierarchy
INFO : ContextLoader - Root WebApplicationContext: initialization started
INFO : XmlWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Thu Feb 07 16:56:33 KST 2019]; root of context hierarchy
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/root-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/security-context.xml]
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@430aaeaf]
DEBUG: LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
DEBUG: SqlSessionFactoryBean - Parsed configuration file: 'class path resource [mybatis-config.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\board\board-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\demo\demo-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\member\member-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\memo\memo-mapper.xml]'
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : ContextLoader - Root WebApplicationContext: initialization completed in 3221 ms
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization started
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.active]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.default]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
INFO : XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:56:36 KST 2019]; parent: Root WebApplicationContext
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/servlet-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/aspect-context.xml]
INFO : AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@42526f62]
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object com.kh.spring.common.aop.AroundAdviceAspect.aroundAdvice(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.LoginLoggerAdvice.advice(org.aspectj.lang.JoinPoint,java.lang.Object)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceDelete(org.aspectj.lang.JoinPoint)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceInsert(org.aspectj.lang.JoinPoint)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardList.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.selectBoardList(int,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardForm.do]}" onto public void com.kh.spring.board.controller.BoardController.boardForm()
INFO : RequestMappingHandlerMapping - Mapped "{[/board/insertBoard.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.insertBoard(com.kh.spring.board.model.vo.Board,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardView.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.boardView(org.springframework.web.servlet.ModelAndView,int)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/fileDownload.do]}" onto public void com.kh.spring.board.controller.BoardController.fileDownload(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo()
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo1.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo1(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo2.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo2(org.springframework.ui.Model,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo3.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo3(org.springframework.ui.Model,com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/insertDev.do],methods=[POST]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.insertDev(com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demoList.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.selectDemoList(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/deleteDev.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.deleteDemo(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.kh.spring.HomeController.home(java.util.Locale,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnroll.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnrollEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogin.do],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogout.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberView.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberUpdateEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
WARN : XmlWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
public java.lang.String com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,org.springframework.ui.Model)
to {[/member/memberUpdateEnd.do]}: There is already 'memberController' bean method
public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member) mapped.
ERROR: DispatcherServlet - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
public java.lang.String com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,org.springframework.ui.Model)
to {[/member/memberUpdateEnd.do]}: There is already 'memberController' bean method
public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1706)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:579)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:501)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:672)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:638)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:686)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:554)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:499)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:172)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:983)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4978)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5290)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1423)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1413)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
public java.lang.String com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,org.springframework.ui.Model)
to {[/member/memberUpdateEnd.do]}: There is already 'memberController' bean method
public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.assertUniqueMethodMapping(AbstractHandlerMethodMapping.java:580)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:544)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:250)
	at java.util.LinkedHashMap.forEach(Unknown Source)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:248)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:218)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:129)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1765)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1702)
	... 28 more
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization started
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.active]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.default]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
INFO : XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:56:48 KST 2019]; parent: Root WebApplicationContext
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/servlet-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/aspect-context.xml]
INFO : AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@31ae634e]
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object com.kh.spring.common.aop.AroundAdviceAspect.aroundAdvice(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.LoginLoggerAdvice.advice(org.aspectj.lang.JoinPoint,java.lang.Object)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceDelete(org.aspectj.lang.JoinPoint)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceInsert(org.aspectj.lang.JoinPoint)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardList.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.selectBoardList(int,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardForm.do]}" onto public void com.kh.spring.board.controller.BoardController.boardForm()
INFO : RequestMappingHandlerMapping - Mapped "{[/board/insertBoard.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.insertBoard(com.kh.spring.board.model.vo.Board,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardView.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.boardView(org.springframework.web.servlet.ModelAndView,int)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/fileDownload.do]}" onto public void com.kh.spring.board.controller.BoardController.fileDownload(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo()
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo1.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo1(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo2.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo2(org.springframework.ui.Model,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo3.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo3(org.springframework.ui.Model,com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/insertDev.do],methods=[POST]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.insertDev(com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demoList.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.selectDemoList(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/deleteDev.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.deleteDemo(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.kh.spring.HomeController.home(java.util.Locale,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnroll.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnrollEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogin.do],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogout.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberView.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberUpdateEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
WARN : XmlWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
public java.lang.String com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,org.springframework.ui.Model)
to {[/member/memberUpdateEnd.do]}: There is already 'memberController' bean method
public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member) mapped.
ERROR: DispatcherServlet - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
public java.lang.String com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,org.springframework.ui.Model)
to {[/member/memberUpdateEnd.do]}: There is already 'memberController' bean method
public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1706)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:579)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:501)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:672)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:638)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:686)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:554)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:499)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:172)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:773)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:133)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:650)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
public java.lang.String com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,org.springframework.ui.Model)
to {[/member/memberUpdateEnd.do]}: There is already 'memberController' bean method
public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.assertUniqueMethodMapping(AbstractHandlerMethodMapping.java:580)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:544)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:250)
	at java.util.LinkedHashMap.forEach(Unknown Source)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:248)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:218)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:129)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1765)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1702)
	... 36 more
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization started
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.active]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.default]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
INFO : XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:57:10 KST 2019]; parent: Root WebApplicationContext
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/servlet-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/aspect-context.xml]
INFO : AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@76d7106c]
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object com.kh.spring.common.aop.AroundAdviceAspect.aroundAdvice(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.LoginLoggerAdvice.advice(org.aspectj.lang.JoinPoint,java.lang.Object)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceDelete(org.aspectj.lang.JoinPoint)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceInsert(org.aspectj.lang.JoinPoint)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardList.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.selectBoardList(int,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardForm.do]}" onto public void com.kh.spring.board.controller.BoardController.boardForm()
INFO : RequestMappingHandlerMapping - Mapped "{[/board/insertBoard.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.insertBoard(com.kh.spring.board.model.vo.Board,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardView.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.boardView(org.springframework.web.servlet.ModelAndView,int)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/fileDownload.do]}" onto public void com.kh.spring.board.controller.BoardController.fileDownload(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo()
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo1.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo1(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo2.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo2(org.springframework.ui.Model,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo3.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo3(org.springframework.ui.Model,com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/insertDev.do],methods=[POST]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.insertDev(com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demoList.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.selectDemoList(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/deleteDev.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.deleteDemo(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.kh.spring.HomeController.home(java.util.Locale,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnroll.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnrollEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogin.do],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogout.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberView.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberUpdateEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
WARN : XmlWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
public java.lang.String com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,org.springframework.ui.Model)
to {[/member/memberUpdateEnd.do]}: There is already 'memberController' bean method
public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member) mapped.
ERROR: DispatcherServlet - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
public java.lang.String com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,org.springframework.ui.Model)
to {[/member/memberUpdateEnd.do]}: There is already 'memberController' bean method
public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1706)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:579)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:501)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:672)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:638)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:686)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:554)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:499)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:172)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:773)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:133)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:650)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
public java.lang.String com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,org.springframework.ui.Model)
to {[/member/memberUpdateEnd.do]}: There is already 'memberController' bean method
public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.assertUniqueMethodMapping(AbstractHandlerMethodMapping.java:580)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:544)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:250)
	at java.util.LinkedHashMap.forEach(Unknown Source)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:248)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:218)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:129)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1765)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1702)
	... 36 more
INFO : XmlWebApplicationContext - Closing Root WebApplicationContext: startup date [Thu Feb 07 16:56:33 KST 2019]; root of context hierarchy
INFO : ContextLoader - Root WebApplicationContext: initialization started
INFO : XmlWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Thu Feb 07 16:58:15 KST 2019]; root of context hierarchy
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/root-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/security-context.xml]
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@372c3981]
DEBUG: LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
DEBUG: SqlSessionFactoryBean - Parsed configuration file: 'class path resource [mybatis-config.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\board\board-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\demo\demo-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\member\member-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\memo\memo-mapper.xml]'
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : ContextLoader - Root WebApplicationContext: initialization completed in 3153 ms
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization started
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.active]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.default]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
INFO : XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:58:18 KST 2019]; parent: Root WebApplicationContext
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/servlet-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/aspect-context.xml]
INFO : AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@5224d9cc]
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object com.kh.spring.common.aop.AroundAdviceAspect.aroundAdvice(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.LoginLoggerAdvice.advice(org.aspectj.lang.JoinPoint,java.lang.Object)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceDelete(org.aspectj.lang.JoinPoint)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceInsert(org.aspectj.lang.JoinPoint)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardList.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.selectBoardList(int,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardForm.do]}" onto public void com.kh.spring.board.controller.BoardController.boardForm()
INFO : RequestMappingHandlerMapping - Mapped "{[/board/insertBoard.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.insertBoard(com.kh.spring.board.model.vo.Board,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardView.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.boardView(org.springframework.web.servlet.ModelAndView,int)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/fileDownload.do]}" onto public void com.kh.spring.board.controller.BoardController.fileDownload(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo()
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo1.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo1(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo2.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo2(org.springframework.ui.Model,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo3.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo3(org.springframework.ui.Model,com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/insertDev.do],methods=[POST]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.insertDev(com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demoList.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.selectDemoList(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/deleteDev.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.deleteDemo(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.kh.spring.HomeController.home(java.util.Locale,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnroll.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnrollEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogin.do],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogout.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberView.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberUpdateEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/checkDuplicate.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/memo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/insertMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/deleteMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:58:18 KST 2019]; parent: Root WebApplicationContext
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:58:18 KST 2019]; parent: Root WebApplicationContext
INFO : SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0'
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'boardServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.board.model.service.BoardServiceImpl@9bd0fc4]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'demoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.demo.model.service.DemoServiceImpl@3bfc03fb]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.model.service.MemberServiceImpl@35f69b33]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberController' with 0 common interceptors and 2 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.controller.MemberController@5554bfd0]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,org.springframework.ui.Model)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.model.service.MemoServiceImpl@7317c544]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoController' with 0 common interceptors and 4 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.controller.MemoController@2d40e7d7]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization completed in 3859 ms
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/memberEnroll.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - 회원등록페이지 요청
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : qqqq
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - ... log4jdbc initializing ...
DEBUG: debug -   log4jdbc.properties not found on classpath
DEBUG: debug - x log4jdbc.debug.stack.prefix is not defined
DEBUG: debug - x log4jdbc.sqltiming.warn.threshold is not defined
DEBUG: debug - x log4jdbc.sqltiming.error.threshold is not defined
DEBUG: debug - x log4jdbc.dump.booleanastruefalse is not defined (using default value false)
DEBUG: debug - x log4jdbc.dump.sql.maxlinelength is not defined (using default of 90)
DEBUG: debug - x log4jdbc.dump.fulldebugstacktrace is not defined (using default value false)
DEBUG: debug - x log4jdbc.statement.warn is not defined (using default value false)
DEBUG: debug - x log4jdbc.dump.sql.select is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.insert is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.update is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.delete is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.create is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.addsemicolon is not defined (using default value false)
DEBUG: debug - x log4jdbc.auto.load.popular.drivers is not defined (using default value true)
DEBUG: debug - x log4jdbc.trim.sql is not defined (using default value true)
DEBUG: debug - x log4jdbc.suppress.generated.keys.exception is not defined (using default value false)
DEBUG: debug - x log4jdbc.drivers is not defined
DEBUG: debug -   FOUND DRIVER oracle.jdbc.OracleDriver
DEBUG: debug -   FOUND DRIVER oracle.jdbc.driver.OracleDriver
DEBUG: debug - ... log4jdbc initialized! ...
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 1. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  1 (1)
DEBUG: audit - 1. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@19316b87] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@19316b87] read-only
DEBUG: audit - 1. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 1. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@19316b87] to manual commit
DEBUG: audit - 1. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bf3033d]
DEBUG: audit - 1. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@19316b87] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 1. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1096760d  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.setString(1, "qqqq") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: qqqq(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
1. select * from member where memberid = 'qqqq'  {executed in 12 msec}
DEBUG: audit - 1. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@751977a8  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3918f118  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 1. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@19316b87  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@329f2fd0  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 1. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bf3033d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bf3033d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bf3033d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bf3033d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@19316b87]
DEBUG: audit - 1. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 1. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 1. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@19316b87]
DEBUG: audit - 1. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@19316b87] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 1. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 1. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : qqqqq
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 2. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  2 (1)
DEBUG: audit - 2. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@789e8fa0] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@789e8fa0] read-only
DEBUG: audit - 2. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 2. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@789e8fa0] to manual commit
DEBUG: audit - 2. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76596ec3]
DEBUG: audit - 2. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@789e8fa0] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 2. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@376464f8  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.setString(1, "qqqqq") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: qqqqq(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
2. select * from member where memberid = 'qqqqq'  {executed in 1 msec}
DEBUG: audit - 2. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3b8b0e3b  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@61950ff  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 2. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@789e8fa0  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@329f2fd0  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 2. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76596ec3]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76596ec3]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76596ec3]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76596ec3]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@789e8fa0]
DEBUG: audit - 2. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 2. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 2. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@789e8fa0]
DEBUG: audit - 2. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@789e8fa0] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 2. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 2. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : qqqqqq
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 3. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  3 (1)
DEBUG: audit - 3. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@664ffe1c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@664ffe1c] read-only
DEBUG: audit - 3. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 3. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@664ffe1c] to manual commit
DEBUG: audit - 3. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68880ca5]
DEBUG: audit - 3. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@664ffe1c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 3. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@29b5069e  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.setString(1, "qqqqqq") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: qqqqqq(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
3. select * from member where memberid = 'qqqqqq'  {executed in 1 msec}
DEBUG: audit - 3. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3013b2aa  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@18566d29  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 3. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@664ffe1c  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@329f2fd0  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 3. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68880ca5]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68880ca5]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68880ca5]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68880ca5]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@664ffe1c]
DEBUG: audit - 3. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 3. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 3. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@664ffe1c]
DEBUG: audit - 3. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@664ffe1c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 3. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 3. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : qqqqqqw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 4. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  4 (1)
DEBUG: audit - 4. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3191049f] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3191049f] read-only
DEBUG: audit - 4. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 4. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3191049f] to manual commit
DEBUG: audit - 4. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66506ad8]
DEBUG: audit - 4. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3191049f] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 4. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@432c562  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.setString(1, "qqqqqqw") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: qqqqqqw(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
4. select * from member where memberid = 'qqqqqqw'  {executed in 1 msec}
DEBUG: audit - 4. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3d3e8c87  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@585d3752  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 4. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3191049f  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@329f2fd0  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 4. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66506ad8]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66506ad8]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66506ad8]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66506ad8]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3191049f]
DEBUG: audit - 4. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 4. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 4. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3191049f]
DEBUG: audit - 4. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3191049f] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 4. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 4. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 5. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  5 (1)
DEBUG: audit - 5. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@21ef9a9b] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21ef9a9b] read-only
DEBUG: audit - 5. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 5. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21ef9a9b] to manual commit
DEBUG: audit - 5. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad6a8f5]
DEBUG: audit - 5. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21ef9a9b] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 5. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@735a96fe  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.setString(1, "admi") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
5. select * from member where memberid = 'admi'  {executed in 1 msec}
DEBUG: audit - 5. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2ebce14c  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@51d2656e  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 5. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@21ef9a9b  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@329f2fd0  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 5. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad6a8f5]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad6a8f5]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad6a8f5]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad6a8f5]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@21ef9a9b]
DEBUG: audit - 5. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 5. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 5. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21ef9a9b]
DEBUG: audit - 5. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21ef9a9b] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 5. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 5. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admin
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 6. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  6 (1)
DEBUG: audit - 6. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7dcabd72] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7dcabd72] read-only
DEBUG: audit - 6. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 6. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7dcabd72] to manual commit
DEBUG: audit - 6. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fed176]
DEBUG: audit - 6. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7dcabd72] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 6. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@636478e5  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.setString(1, "admin") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admin(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
6. select * from member where memberid = 'admin'  {executed in 1 msec}
DEBUG: audit - 6. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4bed78d6  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3cef75bc  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.next() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getString(MEMBERID) returned admin  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getString(PASSWORD) returned $2a$10$R1XcilPpsC6eClvR6RtkmOK7cN5yvhfIntRVH9ifJBsBqQmnNCNK2  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getString(MEMBERNAME) returned 관리자  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getString(GENDER) returned F  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getInt(AGE) returned 49  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getString(EMAIL) returned admin@naver.com  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getString(PHONE) returned 01012345678  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getString(ADDRESS) returned 서울시 강남구 버거킹 하하  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getDate(ENROLLDATE) returned 2019-01-28  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getString(hobby) returned 운동,게임,여행  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 1
DEBUG: resultset - 6. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7dcabd72  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@329f2fd0  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 6. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fed176]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fed176]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fed176]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fed176]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7dcabd72]
DEBUG: audit - 6. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 6. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 6. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7dcabd72]
DEBUG: audit - 6. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7dcabd72] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 6. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 6. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/memberEnroll.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - 회원등록페이지 요청
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 7. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  7 (1)
DEBUG: audit - 7. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@66ed9b9d] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66ed9b9d] read-only
DEBUG: audit - 7. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 7. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66ed9b9d] to manual commit
DEBUG: audit - 7. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a06ddf5]
DEBUG: audit - 7. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66ed9b9d] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 7. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@2afeea72  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.setString(1, "admi") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
7. select * from member where memberid = 'admi'  {executed in 1 msec}
DEBUG: audit - 7. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2045bdc3  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@1c90254b  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 7. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@66ed9b9d  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@329f2fd0  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 7. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a06ddf5]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a06ddf5]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a06ddf5]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a06ddf5]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@66ed9b9d]
DEBUG: audit - 7. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 7. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 7. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66ed9b9d]
DEBUG: audit - 7. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66ed9b9d] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 7. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 7. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admin
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 8. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  8 (1)
DEBUG: audit - 8. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@57f484da] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57f484da] read-only
DEBUG: audit - 8. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 8. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57f484da] to manual commit
DEBUG: audit - 8. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59337054]
DEBUG: audit - 8. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57f484da] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 8. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@180e7a6f  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.setString(1, "admin") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admin(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
8. select * from member where memberid = 'admin'  {executed in 1 msec}
DEBUG: audit - 8. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@6b2fefe0  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@29dc8301  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.next() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getString(MEMBERID) returned admin  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getString(PASSWORD) returned $2a$10$R1XcilPpsC6eClvR6RtkmOK7cN5yvhfIntRVH9ifJBsBqQmnNCNK2  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getString(MEMBERNAME) returned 관리자  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getString(GENDER) returned F  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getInt(AGE) returned 49  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getString(EMAIL) returned admin@naver.com  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getString(PHONE) returned 01012345678  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getString(ADDRESS) returned 서울시 강남구 버거킹 하하  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 8. ResultSet.getDate(ENROLLDATE) returned 2019-01-28  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 8. ResultSet.getString(hobby) returned 운동,게임,여행  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 1
DEBUG: resultset - 8. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@57f484da  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@329f2fd0  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 8. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59337054]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59337054]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59337054]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59337054]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@57f484da]
DEBUG: audit - 8. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 8. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 8. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57f484da]
DEBUG: audit - 8. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57f484da] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 8. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 8. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/memberEnroll.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - 회원등록페이지 요청
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 9. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  9 (1)
DEBUG: audit - 9. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@74d42b09] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@74d42b09] read-only
DEBUG: audit - 9. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 9. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@74d42b09] to manual commit
DEBUG: audit - 9. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@539eae0b]
DEBUG: audit - 9. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@74d42b09] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 9. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@585a7c82  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.setString(1, "admi") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
9. select * from member where memberid = 'admi'  {executed in 2 msec}
DEBUG: audit - 9. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@d0398e3  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2bcb91be  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 9. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@74d42b09  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@329f2fd0  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 9. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@539eae0b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@539eae0b]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@539eae0b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@539eae0b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@74d42b09]
DEBUG: audit - 9. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 9. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 9. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@74d42b09]
DEBUG: audit - 9. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@74d42b09] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 9. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 9. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admin
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 10. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  10 (1)
DEBUG: audit - 10. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@10ff294e] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@10ff294e] read-only
DEBUG: audit - 10. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 10. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@10ff294e] to manual commit
DEBUG: audit - 10. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cc63337]
DEBUG: audit - 10. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@10ff294e] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 10. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@5d4c166c  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.setString(1, "admin") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admin(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
10. select * from member where memberid = 'admin'  {executed in 1 msec}
DEBUG: audit - 10. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3490e1d2  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@29d223fc  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.next() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.getString(MEMBERID) returned admin  sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.getString(PASSWORD) returned $2a$10$R1XcilPpsC6eClvR6RtkmOK7cN5yvhfIntRVH9ifJBsBqQmnNCNK2  sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.getString(MEMBERNAME) returned 관리자  sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.getString(GENDER) returned F  sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.getInt(AGE) returned 49  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.getString(EMAIL) returned admin@naver.com  sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.getString(PHONE) returned 01012345678  sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.getString(ADDRESS) returned 서울시 강남구 버거킹 하하  sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.getDate(ENROLLDATE) returned 2019-01-28  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor63.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.getString(hobby) returned 운동,게임,여행  sun.reflect.GeneratedMethodAccessor64.invoke(null:-1)
DEBUG: resultset - 10. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 1
DEBUG: resultset - 10. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@10ff294e  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@329f2fd0  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 10. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cc63337]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cc63337]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cc63337]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cc63337]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@10ff294e]
DEBUG: audit - 10. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 10. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 10. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@10ff294e]
DEBUG: audit - 10. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@10ff294e] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 10. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 10. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
INFO : XmlWebApplicationContext - Closing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 16:58:18 KST 2019]; parent: Root WebApplicationContext
INFO : XmlWebApplicationContext - Closing Root WebApplicationContext: startup date [Thu Feb 07 16:58:15 KST 2019]; root of context hierarchy
INFO : ContextLoader - Root WebApplicationContext: initialization started
INFO : XmlWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Thu Feb 07 17:02:59 KST 2019]; root of context hierarchy
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/root-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/security-context.xml]
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@4e705fa6]
DEBUG: LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
DEBUG: SqlSessionFactoryBean - Parsed configuration file: 'class path resource [mybatis-config.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\board\board-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\demo\demo-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\member\member-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\memo\memo-mapper.xml]'
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : ContextLoader - Root WebApplicationContext: initialization completed in 3289 ms
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization started
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.active]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.default]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
INFO : XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 17:03:02 KST 2019]; parent: Root WebApplicationContext
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/servlet-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/aspect-context.xml]
INFO : AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@7187522d]
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object com.kh.spring.common.aop.AroundAdviceAspect.aroundAdvice(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.LoginLoggerAdvice.advice(org.aspectj.lang.JoinPoint,java.lang.Object)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceDelete(org.aspectj.lang.JoinPoint)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceInsert(org.aspectj.lang.JoinPoint)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardList.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.selectBoardList(int,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardForm.do]}" onto public void com.kh.spring.board.controller.BoardController.boardForm()
INFO : RequestMappingHandlerMapping - Mapped "{[/board/insertBoard.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.insertBoard(com.kh.spring.board.model.vo.Board,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardView.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.boardView(org.springframework.web.servlet.ModelAndView,int)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/fileDownload.do]}" onto public void com.kh.spring.board.controller.BoardController.fileDownload(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo()
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo1.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo1(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo2.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo2(org.springframework.ui.Model,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo3.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo3(org.springframework.ui.Model,com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/insertDev.do],methods=[POST]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.insertDev(com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demoList.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.selectDemoList(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/deleteDev.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.deleteDemo(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.kh.spring.HomeController.home(java.util.Locale,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnroll.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnrollEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogin.do],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogout.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberView.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberUpdateEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/checkDuplicate.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/memo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/insertMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/deleteMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 17:03:02 KST 2019]; parent: Root WebApplicationContext
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 17:03:02 KST 2019]; parent: Root WebApplicationContext
INFO : SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0'
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'boardServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.board.model.service.BoardServiceImpl@5e845d7e]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'demoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.demo.model.service.DemoServiceImpl@728d67c2]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.model.service.MemberServiceImpl@2b4e2623]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberController' with 0 common interceptors and 2 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.controller.MemberController@8d84e58]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String,org.springframework.ui.Model)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.model.service.MemoServiceImpl@4681228]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoController' with 0 common interceptors and 4 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.controller.MemoController@4c526312]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization completed in 4147 ms
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/memberEnroll.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - 회원등록페이지 요청
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - ... log4jdbc initializing ...
DEBUG: debug -   log4jdbc.properties not found on classpath
DEBUG: debug - x log4jdbc.debug.stack.prefix is not defined
DEBUG: debug - x log4jdbc.sqltiming.warn.threshold is not defined
DEBUG: debug - x log4jdbc.sqltiming.error.threshold is not defined
DEBUG: debug - x log4jdbc.dump.booleanastruefalse is not defined (using default value false)
DEBUG: debug - x log4jdbc.dump.sql.maxlinelength is not defined (using default of 90)
DEBUG: debug - x log4jdbc.dump.fulldebugstacktrace is not defined (using default value false)
DEBUG: debug - x log4jdbc.statement.warn is not defined (using default value false)
DEBUG: debug - x log4jdbc.dump.sql.select is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.insert is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.update is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.delete is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.create is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.addsemicolon is not defined (using default value false)
DEBUG: debug - x log4jdbc.auto.load.popular.drivers is not defined (using default value true)
DEBUG: debug - x log4jdbc.trim.sql is not defined (using default value true)
DEBUG: debug - x log4jdbc.suppress.generated.keys.exception is not defined (using default value false)
DEBUG: debug - x log4jdbc.drivers is not defined
DEBUG: debug -   FOUND DRIVER oracle.jdbc.OracleDriver
DEBUG: debug -   FOUND DRIVER oracle.jdbc.driver.OracleDriver
DEBUG: debug - ... log4jdbc initialized! ...
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 1. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  1 (1)
DEBUG: audit - 1. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4c172f13] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c172f13] read-only
DEBUG: audit - 1. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 1. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c172f13] to manual commit
DEBUG: audit - 1. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@499ced97]
DEBUG: audit - 1. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c172f13] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 1. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@399fd11b  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.setString(1, "admi") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
1. select * from member where memberid = 'admi'  {executed in 12 msec}
DEBUG: audit - 1. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@87d7f1  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@557581c9  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 1. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4c172f13  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 1. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@499ced97]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@499ced97]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@499ced97]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@499ced97]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4c172f13]
DEBUG: audit - 1. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 1. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 1. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c172f13]
DEBUG: audit - 1. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c172f13] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 1. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 1. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admin
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 2. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  2 (1)
DEBUG: audit - 2. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@45e9346] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@45e9346] read-only
DEBUG: audit - 2. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 2. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@45e9346] to manual commit
DEBUG: audit - 2. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a996dbd]
DEBUG: audit - 2. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@45e9346] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 2. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4ba46786  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.setString(1, "admin") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admin(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
2. select * from member where memberid = 'admin'  {executed in 2 msec}
DEBUG: audit - 2. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3b901917  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@7a256f5d  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.next() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(MEMBERID) returned admin  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(PASSWORD) returned $2a$10$R1XcilPpsC6eClvR6RtkmOK7cN5yvhfIntRVH9ifJBsBqQmnNCNK2  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(MEMBERNAME) returned 관리자  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(GENDER) returned F  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getInt(AGE) returned 49  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(EMAIL) returned admin@naver.com  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(PHONE) returned 01012345678  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(ADDRESS) returned 서울시 강남구 버거킹 하하  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getDate(ENROLLDATE) returned 2019-01-28  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(hobby) returned 운동,게임,여행  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 1
DEBUG: resultset - 2. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@45e9346  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 2. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a996dbd]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a996dbd]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a996dbd]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a996dbd]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@45e9346]
DEBUG: audit - 2. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 2. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 2. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@45e9346]
DEBUG: audit - 2. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@45e9346] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 2. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 2. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminf
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 3. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  3 (1)
DEBUG: audit - 3. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@458e23c3] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@458e23c3] read-only
DEBUG: audit - 3. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 3. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@458e23c3] to manual commit
DEBUG: audit - 3. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b49c502]
DEBUG: audit - 3. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@458e23c3] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 3. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@a74cf39  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.setString(1, "adminf") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminf(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
3. select * from member where memberid = 'adminf'  {executed in 1 msec}
DEBUG: audit - 3. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3e50658f  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3b34c692  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 3. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@458e23c3  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 3. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b49c502]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b49c502]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b49c502]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b49c502]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@458e23c3]
DEBUG: audit - 3. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 3. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 3. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@458e23c3]
DEBUG: audit - 3. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@458e23c3] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 3. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 3. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdf
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 4. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  4 (1)
DEBUG: audit - 4. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7d165333] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7d165333] read-only
DEBUG: audit - 4. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 4. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7d165333] to manual commit
DEBUG: audit - 4. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73d1b2e1]
DEBUG: audit - 4. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7d165333] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 4. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@32ecb8da  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.setString(1, "adminfdf") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminfdf(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
4. select * from member where memberid = 'adminfdf'  {executed in 0 msec}
DEBUG: audit - 4. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7d2cfa7f  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3940981  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 4. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 4. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7d165333  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 4. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 4. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73d1b2e1]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73d1b2e1]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73d1b2e1]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73d1b2e1]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7d165333]
DEBUG: audit - 4. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 4. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 4. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7d165333]
DEBUG: audit - 4. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7d165333] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 4. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 4. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdf
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 5. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  5 (1)
DEBUG: audit - 5. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3f6d7d40] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3f6d7d40] read-only
DEBUG: audit - 5. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 5. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3f6d7d40] to manual commit
DEBUG: audit - 5. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31aa94dd]
DEBUG: audit - 5. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3f6d7d40] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 5. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@70979ee6  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.setString(1, "adminfdf") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminfdf(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
5. select * from member where memberid = 'adminfdf'  {executed in 1 msec}
DEBUG: audit - 5. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@24c46ac9  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@41ad0ef0  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 5. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 5. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3f6d7d40  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 5. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 5. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31aa94dd]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31aa94dd]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31aa94dd]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31aa94dd]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3f6d7d40]
DEBUG: audit - 5. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 5. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 5. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3f6d7d40]
DEBUG: audit - 5. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3f6d7d40] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 5. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 5. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfna
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 6. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  6 (1)
DEBUG: audit - 6. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@33d83616] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@33d83616] read-only
DEBUG: audit - 6. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 6. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@33d83616] to manual commit
DEBUG: audit - 6. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d1fde1d]
DEBUG: audit - 6. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@33d83616] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 6. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@7c22d426  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.setString(1, "adminfdfna") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminfdfna(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
6. select * from member where memberid = 'adminfdfna'  {executed in 0 msec}
DEBUG: audit - 6. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@e383532  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4d14edde  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 6. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 6. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@33d83616  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 6. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 6. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d1fde1d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d1fde1d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d1fde1d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d1fde1d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@33d83616]
DEBUG: audit - 6. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 6. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 6. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@33d83616]
DEBUG: audit - 6. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@33d83616] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 6. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 6. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnas
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 7. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  7 (1)
DEBUG: audit - 7. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6845ef71] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6845ef71] read-only
DEBUG: audit - 7. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 7. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6845ef71] to manual commit
DEBUG: audit - 7. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66821c09]
DEBUG: audit - 7. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6845ef71] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 7. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@27bf1632  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.setString(1, "adminfdfnas") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminfdfnas(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
7. select * from member where memberid = 'adminfdfnas'  {executed in 1 msec}
DEBUG: audit - 7. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@60c65bd3  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@16527196  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 7. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 7. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6845ef71  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 7. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 7. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66821c09]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66821c09]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66821c09]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66821c09]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6845ef71]
DEBUG: audit - 7. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 7. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 7. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6845ef71]
DEBUG: audit - 7. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6845ef71] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 7. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 7. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 8. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  8 (1)
DEBUG: audit - 8. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@709dc30d] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@709dc30d] read-only
DEBUG: audit - 8. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 8. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@709dc30d] to manual commit
DEBUG: audit - 8. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@659e42a3]
DEBUG: audit - 8. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@709dc30d] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 8. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3b813853  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.setString(1, "adminfdfnasdn") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdn(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
8. select * from member where memberid = 'adminfdfnasdn'  {executed in 1 msec}
DEBUG: audit - 8. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@259a1185  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3206d4cf  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 8. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 8. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@709dc30d  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 8. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 8. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@659e42a3]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@659e42a3]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@659e42a3]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@659e42a3]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@709dc30d]
DEBUG: audit - 8. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 8. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 8. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@709dc30d]
DEBUG: audit - 8. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@709dc30d] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 8. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 8. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 9. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  9 (1)
DEBUG: audit - 9. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@8d586f1] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8d586f1] read-only
DEBUG: audit - 9. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 9. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8d586f1] to manual commit
DEBUG: audit - 9. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@612699b]
DEBUG: audit - 9. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8d586f1] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 9. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@472f63a0  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.setString(1, "adminfdfnasdn") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdn(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
9. select * from member where memberid = 'adminfdfnasdn'  {executed in 0 msec}
DEBUG: audit - 9. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@63e987ba  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@762264ed  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 9. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 9. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@8d586f1  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 9. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 9. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@612699b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@612699b]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@612699b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@612699b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@8d586f1]
DEBUG: audit - 9. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 9. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 9. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8d586f1]
DEBUG: audit - 9. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8d586f1] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 9. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 9. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdna
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 10. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  10 (1)
DEBUG: audit - 10. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3d25a819] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3d25a819] read-only
DEBUG: audit - 10. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 10. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3d25a819] to manual commit
DEBUG: audit - 10. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a322557]
DEBUG: audit - 10. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3d25a819] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 10. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@32c768af  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.setString(1, "adminfdfnasdna") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdna(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
10. select * from member where memberid = 'adminfdfnasdna'  {executed in 0 msec}
DEBUG: audit - 10. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@22327b8e  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@79f1fa02  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 10. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 10. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3d25a819  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 10. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 10. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a322557]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a322557]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a322557]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a322557]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3d25a819]
DEBUG: audit - 10. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 10. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 10. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3d25a819]
DEBUG: audit - 10. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3d25a819] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 10. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 10. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnan
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 11. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  11 (1)
DEBUG: audit - 11. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5175cca9] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5175cca9] read-only
DEBUG: audit - 11. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 11. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5175cca9] to manual commit
DEBUG: audit - 11. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74841155]
DEBUG: audit - 11. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5175cca9] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 11. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1fd94cbf  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. PreparedStatement.setString(1, "adminfdfnasdnan") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnan(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
11. select * from member where memberid = 'adminfdfnasdnan'  {executed in 0 msec}
DEBUG: audit - 11. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 11. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@6036db69  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 11. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@34ec7083  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 11. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 11. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 11. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5175cca9  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 11. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 11. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74841155]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74841155]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74841155]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74841155]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5175cca9]
DEBUG: audit - 11. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 11. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 11. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5175cca9]
DEBUG: audit - 11. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5175cca9] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 11. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 11. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnan
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 12. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  12 (1)
DEBUG: audit - 12. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@2a687fae] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2a687fae] read-only
DEBUG: audit - 12. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 12. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2a687fae] to manual commit
DEBUG: audit - 12. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b134fdf]
DEBUG: audit - 12. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2a687fae] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 12. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@7ce9aa26  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. PreparedStatement.setString(1, "adminfdfnasdnan") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnan(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
12. select * from member where memberid = 'adminfdfnasdnan'  {executed in 1 msec}
DEBUG: audit - 12. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@15952f1a  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2449f7c0  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 12. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 12. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@2a687fae  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 12. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 12. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b134fdf]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b134fdf]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b134fdf]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b134fdf]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@2a687fae]
DEBUG: audit - 12. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 12. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 12. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2a687fae]
DEBUG: audit - 12. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2a687fae] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 12. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 12. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 13. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  13 (1)
DEBUG: audit - 13. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@46fa3297] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@46fa3297] read-only
DEBUG: audit - 13. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 13. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@46fa3297] to manual commit
DEBUG: audit - 13. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a5b3076]
DEBUG: audit - 13. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@46fa3297] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 13. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4a070088  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. PreparedStatement.setString(1, "adminfdfnasdnanqwk") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwk(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
13. select * from member where memberid = 'adminfdfnasdnanqwk'  {executed in 2 msec}
DEBUG: audit - 13. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 13. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5dfefdd5  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 13. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6e15ae9c  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 13. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 13. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 13. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@46fa3297  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 13. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 13. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a5b3076]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a5b3076]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a5b3076]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a5b3076]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@46fa3297]
DEBUG: audit - 13. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 13. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 13. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@46fa3297]
DEBUG: audit - 13. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@46fa3297] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 13. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 13. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 14. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  14 (1)
DEBUG: audit - 14. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@199ea660] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@199ea660] read-only
DEBUG: audit - 14. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 14. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@199ea660] to manual commit
DEBUG: audit - 14. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3324f0d3]
DEBUG: audit - 14. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@199ea660] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 14. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@64bb2e70  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. PreparedStatement.setString(1, "adminfdfnasdnanqwk") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwk(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
14. select * from member where memberid = 'adminfdfnasdnanqwk'  {executed in 0 msec}
DEBUG: audit - 14. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@87a3921  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@1ccce295  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 14. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 14. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@199ea660  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 14. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 14. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3324f0d3]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3324f0d3]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3324f0d3]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3324f0d3]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@199ea660]
DEBUG: audit - 14. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 14. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 14. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@199ea660]
DEBUG: audit - 14. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@199ea660] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 14. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 14. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwkn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 15. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  15 (1)
DEBUG: audit - 15. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5c14a463] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c14a463] read-only
DEBUG: audit - 15. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 15. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c14a463] to manual commit
DEBUG: audit - 15. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10b861a9]
DEBUG: audit - 15. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c14a463] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 15. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 15. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3ede95de  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 15. PreparedStatement.setString(1, "adminfdfnasdnanqwkn") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwkn(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
15. select * from member where memberid = 'adminfdfnasdnanqwkn'  {executed in 1 msec}
DEBUG: audit - 15. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 15. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 15. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@471009da  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 15. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@14f69db8  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 15. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 15. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 15. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 15. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5c14a463  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 15. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 15. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 15. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10b861a9]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10b861a9]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10b861a9]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10b861a9]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5c14a463]
DEBUG: audit - 15. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 15. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 15. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c14a463]
DEBUG: audit - 15. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c14a463] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 15. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 15. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 16. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  16 (1)
DEBUG: audit - 16. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1c0d2b69] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1c0d2b69] read-only
DEBUG: audit - 16. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 16. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1c0d2b69] to manual commit
DEBUG: audit - 16. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@394361d6]
DEBUG: audit - 16. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1c0d2b69] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 16. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 16. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1b06549c  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 16. PreparedStatement.setString(1, "adminfdfnasdnanqwknwe") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwe(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
16. select * from member where memberid = 'adminfdfnasdnanqwknwe'  {executed in 0 msec}
DEBUG: audit - 16. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 16. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 16. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@18f18c6f  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 16. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@45e157ee  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 16. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 16. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 16. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 16. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1c0d2b69  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 16. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 16. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 16. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@394361d6]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@394361d6]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@394361d6]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@394361d6]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1c0d2b69]
DEBUG: audit - 16. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 16. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 16. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1c0d2b69]
DEBUG: audit - 16. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1c0d2b69] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 16. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 16. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkf
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 17. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  17 (1)
DEBUG: audit - 17. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@18c162d1] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@18c162d1] read-only
DEBUG: audit - 17. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 17. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@18c162d1] to manual commit
DEBUG: audit - 17. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4790e97d]
DEBUG: audit - 17. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@18c162d1] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 17. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 17. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@10013763  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 17. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkf") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkf(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
17. select * from member where memberid = 'adminfdfnasdnanqwknwejkf'  {executed in 0 msec}
DEBUG: audit - 17. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 17. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 17. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3c50858  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 17. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@43ded25c  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 17. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 17. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 17. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 17. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@18c162d1  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 17. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 17. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 17. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4790e97d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4790e97d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4790e97d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4790e97d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@18c162d1]
DEBUG: audit - 17. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 17. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 17. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@18c162d1]
DEBUG: audit - 17. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@18c162d1] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 17. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 17. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkf
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 18. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  18 (1)
DEBUG: audit - 18. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@2efe2ef5] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2efe2ef5] read-only
DEBUG: audit - 18. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 18. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2efe2ef5] to manual commit
DEBUG: audit - 18. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c8fd8d9]
DEBUG: audit - 18. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2efe2ef5] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 18. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 18. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6dc8f5aa  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 18. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkf") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkf(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
18. select * from member where memberid = 'adminfdfnasdnanqwknwejkf'  {executed in 0 msec}
DEBUG: audit - 18. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 18. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 18. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@321ef760  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 18. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@50b5a8ea  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 18. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 18. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 18. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 18. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@2efe2ef5  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 18. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 18. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 18. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c8fd8d9]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c8fd8d9]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c8fd8d9]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c8fd8d9]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@2efe2ef5]
DEBUG: audit - 18. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 18. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 18. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2efe2ef5]
DEBUG: audit - 18. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2efe2ef5] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 18. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 18. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkf
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 19. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  19 (1)
DEBUG: audit - 19. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1b0ede4d] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b0ede4d] read-only
DEBUG: audit - 19. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 19. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b0ede4d] to manual commit
DEBUG: audit - 19. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27009cef]
DEBUG: audit - 19. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b0ede4d] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 19. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 19. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6d1b131c  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 19. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkf") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkf(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
19. select * from member where memberid = 'adminfdfnasdnanqwknwejkf'  {executed in 1 msec}
DEBUG: audit - 19. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 19. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 19. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@a5444  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 19. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@234e474e  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 19. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 19. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 19. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 19. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1b0ede4d  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 19. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 19. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 19. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27009cef]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27009cef]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27009cef]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27009cef]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1b0ede4d]
DEBUG: audit - 19. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 19. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 19. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b0ede4d]
DEBUG: audit - 19. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b0ede4d] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 19. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 19. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 20. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  20 (1)
DEBUG: audit - 20. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3e38258c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e38258c] read-only
DEBUG: audit - 20. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 20. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e38258c] to manual commit
DEBUG: audit - 20. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3733a0f4]
DEBUG: audit - 20. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e38258c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 20. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 20. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@703b98b2  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 20. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfn(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
20. select * from member where memberid = 'adminfdfnasdnanqwknwejkfn'  {executed in 1 msec}
DEBUG: audit - 20. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 20. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 20. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@f50d77c  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 20. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@25cef262  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 20. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 20. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 20. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 20. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3e38258c  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 20. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 20. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 20. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3733a0f4]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3733a0f4]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3733a0f4]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3733a0f4]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3e38258c]
DEBUG: audit - 20. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 20. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 20. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e38258c]
DEBUG: audit - 20. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e38258c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 20. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 20. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 21. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  21 (1)
DEBUG: audit - 21. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1b4039d2] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b4039d2] read-only
DEBUG: audit - 21. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 21. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b4039d2] to manual commit
DEBUG: audit - 21. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e2932b1]
DEBUG: audit - 21. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b4039d2] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 21. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 21. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4fad4677  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 21. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnw") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnw(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
21. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnw'  {executed in 2 msec}
DEBUG: audit - 21. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 21. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 21. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@553978f9  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 21. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@52026455  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 21. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 21. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 21. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 21. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1b4039d2  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 21. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 21. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 21. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e2932b1]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e2932b1]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e2932b1]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e2932b1]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1b4039d2]
DEBUG: audit - 21. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 21. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 21. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b4039d2]
DEBUG: audit - 21. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b4039d2] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 21. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 21. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjo
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 22. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  22 (1)
DEBUG: audit - 22. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@28e17541] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28e17541] read-only
DEBUG: audit - 22. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 22. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28e17541] to manual commit
DEBUG: audit - 22. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19e842e1]
DEBUG: audit - 22. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28e17541] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 22. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 22. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4ea547b9  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 22. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjo") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjo(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
22. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjo'  {executed in 1 msec}
DEBUG: audit - 22. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 22. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 22. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@6d4d7851  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 22. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@36e9d053  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 22. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 22. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 22. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 22. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@28e17541  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 22. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 22. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 22. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19e842e1]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19e842e1]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19e842e1]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19e842e1]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@28e17541]
DEBUG: audit - 22. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 22. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 22. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28e17541]
DEBUG: audit - 22. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28e17541] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 22. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 22. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjof
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 23. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  23 (1)
DEBUG: audit - 23. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5be1590] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5be1590] read-only
DEBUG: audit - 23. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 23. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5be1590] to manual commit
DEBUG: audit - 23. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c34795]
DEBUG: audit - 23. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5be1590] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 23. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 23. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6bdd6034  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 23. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjof") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjof(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
23. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjof'  {executed in 1 msec}
DEBUG: audit - 23. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 23. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 23. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1ebafa4a  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 23. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@568df9e7  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 23. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 23. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 23. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 23. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5be1590  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 23. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 23. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 23. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c34795]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c34795]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c34795]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c34795]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5be1590]
DEBUG: audit - 23. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 23. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 23. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5be1590]
DEBUG: audit - 23. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5be1590] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 23. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 23. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjof
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 24. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  24 (1)
DEBUG: audit - 24. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5a474d98] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5a474d98] read-only
DEBUG: audit - 24. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 24. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5a474d98] to manual commit
DEBUG: audit - 24. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67b2200e]
DEBUG: audit - 24. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5a474d98] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 24. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 24. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@457b3bfc  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 24. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjof") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjof(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
24. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjof'  {executed in 1 msec}
DEBUG: audit - 24. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 24. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 24. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@25308546  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 24. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@537473be  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 24. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 24. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 24. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 24. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5a474d98  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 24. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 24. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 24. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67b2200e]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67b2200e]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67b2200e]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67b2200e]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5a474d98]
DEBUG: audit - 24. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 24. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 24. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5a474d98]
DEBUG: audit - 24. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5a474d98] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 24. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 24. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjof
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 25. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  25 (1)
DEBUG: audit - 25. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@27025b04] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@27025b04] read-only
DEBUG: audit - 25. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 25. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@27025b04] to manual commit
DEBUG: audit - 25. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@609bd8e7]
DEBUG: audit - 25. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@27025b04] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 25. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 25. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6faf298e  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 25. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjof") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjof(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
25. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjof'  {executed in 2 msec}
DEBUG: audit - 25. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 25. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 25. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5a409504  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 25. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6422324b  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 25. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 25. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 25. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 25. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@27025b04  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 25. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 25. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 25. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@609bd8e7]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@609bd8e7]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@609bd8e7]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@609bd8e7]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@27025b04]
DEBUG: audit - 25. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 25. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 25. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@27025b04]
DEBUG: audit - 25. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@27025b04] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 25. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 25. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 26. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  26 (1)
DEBUG: audit - 26. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@e3f9e06] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e3f9e06] read-only
DEBUG: audit - 26. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 26. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e3f9e06] to manual commit
DEBUG: audit - 26. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f7506fa]
DEBUG: audit - 26. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e3f9e06] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 26. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 26. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@58b7a319  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 26. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwe") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
26. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwe'  {executed in 0 msec}
DEBUG: audit - 26. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 26. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 26. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2a0ad9a7  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 26. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3ddf58ca  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 26. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 26. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 26. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 26. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@e3f9e06  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 26. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 26. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 26. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f7506fa]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f7506fa]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f7506fa]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f7506fa]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@e3f9e06]
DEBUG: audit - 26. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 26. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 26. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e3f9e06]
DEBUG: audit - 26. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e3f9e06] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 26. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 26. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejo
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 27. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  27 (1)
DEBUG: audit - 27. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@714867a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@714867a] read-only
DEBUG: audit - 27. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 27. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@714867a] to manual commit
DEBUG: audit - 27. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb703d4]
DEBUG: audit - 27. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@714867a] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 27. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 27. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@62375f  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 27. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejo") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejo(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
27. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejo'  {executed in 1 msec}
DEBUG: audit - 27. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 27. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 27. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2366567f  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 27. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@5e94864  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 27. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 27. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 27. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 27. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@714867a  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 27. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 27. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 27. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb703d4]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb703d4]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb703d4]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb703d4]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@714867a]
DEBUG: audit - 27. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 27. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 27. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@714867a]
DEBUG: audit - 27. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@714867a] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 27. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 27. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejof
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 28. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  28 (1)
DEBUG: audit - 28. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5ef03d4c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5ef03d4c] read-only
DEBUG: audit - 28. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 28. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5ef03d4c] to manual commit
DEBUG: audit - 28. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74bff69d]
DEBUG: audit - 28. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5ef03d4c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 28. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 28. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4c50b6b4  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 28. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejof") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejof(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
28. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejof'  {executed in 1 msec}
DEBUG: audit - 28. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 28. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 28. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1395e82f  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 28. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@1815ffde  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 28. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 28. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 28. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: audit - 28. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5ef03d4c  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofn
DEBUG: audit - 28. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: audit - 28. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 28. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74bff69d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74bff69d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74bff69d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74bff69d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5ef03d4c]
DEBUG: audit - 28. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 28. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 28. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5ef03d4c]
DEBUG: audit - 28. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5ef03d4c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 28. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 28. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejof
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 29. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  29 (1)
DEBUG: audit - 29. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6d889326] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6d889326] read-only
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: audit - 29. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: audit - 29. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6d889326] to manual commit
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejof
DEBUG: audit - 29. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646a52dc]
DEBUG: audit - 29. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6d889326] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 29. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 29. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@24c0956f  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 29. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejof") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejof(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
29. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejof'  {executed in 0 msec}
DEBUG: audit - 29. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 29. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 29. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@d783372  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 29. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3b327cb3  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 29. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 29. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 29. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 29. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6d889326  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 29. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 29. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 29. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646a52dc]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646a52dc]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646a52dc]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646a52dc]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6d889326]
DEBUG: audit - 29. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 29. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 29. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6d889326]
DEBUG: audit - 29. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6d889326] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 29. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 29. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 30. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  30 (1)
DEBUG: audit - 30. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@468c8246] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@468c8246] read-only
DEBUG: audit - 30. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 30. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@468c8246] to manual commit
DEBUG: audit - 30. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f646a7]
DEBUG: audit - 30. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@468c8246] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 30. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 30. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@612b5f28  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 30. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofn(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
30. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofn'  {executed in 1 msec}
DEBUG: audit - 30. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 30. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 30. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@43176ff9  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 30. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6572da42  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 30. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 30. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: resultset - 30. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 30. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@468c8246  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnwe
DEBUG: audit - 30. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@384628ab  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
DEBUG: audit - 30. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
INFO : connection - 31. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  30 31 (2)
DEBUG: audit - 30. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f646a7]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f646a7]
DEBUG: audit - 31. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f646a7]
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@59a67d2c] for JDBC transaction
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f646a7]
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@59a67d2c] read-only
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@468c8246]
DEBUG: audit - 31. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 31. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@59a67d2c] to manual commit
DEBUG: audit - 30. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 31. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: audit - 30. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: audit - 30. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5a712e]
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@468c8246]
DEBUG: audit - 30. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@468c8246] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 30. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  31 (1)
DEBUG: audit - 30. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: audit - 31. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@59a67d2c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: audit - 31. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: audit - 31. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@43c03d55  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 31. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnwe") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
31. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnwe'  {executed in 1 msec}
DEBUG: audit - 31. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 31. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 31. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2965771c  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 31. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@47d8a01f  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 31. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 31. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 31. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 31. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@59a67d2c  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 31. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 31. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 31. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5a712e]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5a712e]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5a712e]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5a712e]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@59a67d2c]
DEBUG: audit - 31. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 31. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 31. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@59a67d2c]
DEBUG: audit - 31. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@59a67d2c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 31. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 31. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweo
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 32. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  32 (1)
DEBUG: audit - 32. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@2b53f0a6] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2b53f0a6] read-only
DEBUG: audit - 32. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 32. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2b53f0a6] to manual commit
DEBUG: audit - 32. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b8ff938]
DEBUG: audit - 32. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2b53f0a6] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 32. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 32. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@5bd5b1da  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 32. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweo") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweo(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
32. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweo'  {executed in 1 msec}
DEBUG: audit - 32. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 32. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 32. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@6f37bcc6  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 32. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3ba5de21  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 32. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 32. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 32. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 32. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@2b53f0a6  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 32. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 32. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 32. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b8ff938]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b8ff938]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b8ff938]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b8ff938]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@2b53f0a6]
DEBUG: audit - 32. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 32. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 32. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2b53f0a6]
DEBUG: audit - 32. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2b53f0a6] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 32. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 32. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 33. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  33 (1)
DEBUG: audit - 33. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@63ed4fd9] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@63ed4fd9] read-only
DEBUG: audit - 33. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 33. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@63ed4fd9] to manual commit
DEBUG: audit - 33. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@228cbf3d]
DEBUG: audit - 33. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@63ed4fd9] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 33. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 33. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@5c95d6cf  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 33. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejof") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejof(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
33. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejof'  {executed in 1 msec}
DEBUG: audit - 33. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 33. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 33. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@558fd903  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 33. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@123df1d8  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 33. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 33. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 33. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 33. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@63ed4fd9  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 33. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 33. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 33. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@228cbf3d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@228cbf3d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@228cbf3d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@228cbf3d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@63ed4fd9]
DEBUG: audit - 33. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 33. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 33. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@63ed4fd9]
DEBUG: audit - 33. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@63ed4fd9] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 33. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 33. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweof
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 34. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  34 (1)
DEBUG: audit - 34. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@28a0b8d6] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28a0b8d6] read-only
DEBUG: audit - 34. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 34. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28a0b8d6] to manual commit
DEBUG: audit - 34. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3418d2e5]
DEBUG: audit - 34. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28a0b8d6] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 34. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 34. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@653a130c  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 34. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweof") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweof(String)
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
34. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweof'  {executed in 6 msec}
INFO : connection - 35. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  34 35 (2)
DEBUG: audit - 35. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@205614d4] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@205614d4] read-only
DEBUG: audit - 35. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 34. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: audit - 35. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@205614d4] to manual commit
DEBUG: resultset - 34. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 35. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3623ba09]
DEBUG: audit - 34. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@48f17175  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 35. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@205614d4] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: resultset - 34. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3a0c1d74  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 34. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 35. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 35. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1d50265f  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 35. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofn(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
35. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofn'  {executed in 1 msec}
DEBUG: resultset - 34. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: audit - 35. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 34. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: resultset - 35. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 34. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@28a0b8d6  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 35. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@db06195  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 34. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: resultset - 35. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@266861d8  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 34. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: resultset - 35. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 34. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: resultset - 35. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3418d2e5]
DEBUG: resultset - 35. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3418d2e5]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3418d2e5]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3418d2e5]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@28a0b8d6]
DEBUG: audit - 35. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@205614d4  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 35. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 34. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 35. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 34. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 35. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3623ba09]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3623ba09]
DEBUG: audit - 34. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3623ba09]
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28a0b8d6]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3623ba09]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@205614d4]
DEBUG: audit - 34. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28a0b8d6] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
DEBUG: audit - 35. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
INFO : connection - 34. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  35 (1)
DEBUG: audit - 35. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 34. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: audit - 35. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@205614d4]
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: audit - 35. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@205614d4] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 35. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: audit - 35. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 36. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  36 (1)
DEBUG: audit - 36. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7f65947f] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7f65947f] read-only
DEBUG: audit - 36. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 36. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7f65947f] to manual commit
DEBUG: audit - 36. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aaf4fe1]
DEBUG: audit - 36. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7f65947f] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 36. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 36. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@214a67e2  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 36. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofn(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
36. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofn'  {executed in 1 msec}
DEBUG: audit - 36. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 36. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 36. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@725fd9d8  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 36. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@126f4035  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 36. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 36. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 36. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 36. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7f65947f  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 36. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 36. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 36. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aaf4fe1]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aaf4fe1]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aaf4fe1]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aaf4fe1]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7f65947f]
DEBUG: audit - 36. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 36. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 36. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7f65947f]
DEBUG: audit - 36. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7f65947f] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 36. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 36. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 37. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  37 (1)
DEBUG: audit - 37. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6a617084] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6a617084] read-only
DEBUG: audit - 37. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 37. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6a617084] to manual commit
DEBUG: audit - 37. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b287a58]
DEBUG: audit - 37. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6a617084] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 37. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 37. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@2509d1ad  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 37. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwe") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
37. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwe'  {executed in 1 msec}
DEBUG: audit - 37. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 37. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 37. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@440d60d8  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 37. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@7ccf38bb  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 37. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 37. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 37. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 37. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6a617084  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 37. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 37. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 37. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b287a58]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b287a58]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b287a58]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b287a58]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6a617084]
DEBUG: audit - 37. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 37. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 37. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6a617084]
DEBUG: audit - 37. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6a617084] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 37. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 37. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekj
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 38. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  38 (1)
DEBUG: audit - 38. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@54d22503] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54d22503] read-only
DEBUG: audit - 38. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 38. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54d22503] to manual commit
DEBUG: audit - 38. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d7ecc3b]
DEBUG: audit - 38. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54d22503] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 38. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 38. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@16ca7bd8  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 38. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekj") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekj(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
38. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekj'  {executed in 1 msec}
DEBUG: audit - 38. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 38. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 38. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5375be3f  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 38. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3801bf7e  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 38. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 38. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 38. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 38. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@54d22503  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 38. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 38. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 38. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d7ecc3b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d7ecc3b]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d7ecc3b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d7ecc3b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@54d22503]
DEBUG: audit - 38. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 38. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 38. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54d22503]
DEBUG: audit - 38. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54d22503] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 38. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 38. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 39. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  39 (1)
DEBUG: audit - 39. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@2240f97d] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2240f97d] read-only
DEBUG: audit - 39. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 39. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2240f97d] to manual commit
DEBUG: audit - 39. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28b7bb7]
DEBUG: audit - 39. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2240f97d] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 39. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 39. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@665b11b4  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 39. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
39. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn'  {executed in 1 msec}
DEBUG: audit - 39. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 39. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 39. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@43f58713  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 39. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@1a7a1a19  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 39. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 39. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 39. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 39. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@2240f97d  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 39. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 39. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 39. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28b7bb7]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28b7bb7]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28b7bb7]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28b7bb7]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@2240f97d]
DEBUG: audit - 39. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 39. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 39. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2240f97d]
DEBUG: audit - 39. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2240f97d] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 39. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 39. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 40. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 41. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  40 41 (2)
DEBUG: connection - open connections:  40 (1)
DEBUG: audit - 40. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@28ed649a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28ed649a] read-only
DEBUG: audit - 41. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@64e10bf9] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64e10bf9] read-only
DEBUG: audit - 40. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 40. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28ed649a] to manual commit
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 42. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: audit - 41. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: connection - open connections:  40 41 42 (3)
DEBUG: audit - 41. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: audit - 40. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64e10bf9] to manual commit
DEBUG: audit - 42. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7bbf3daf] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7bbf3daf] read-only
DEBUG: audit - 41. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2609a8a5]
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: audit - 42. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ec04b3c]
DEBUG: audit - 42. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7bbf3daf] to manual commit
DEBUG: audit - 42. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@86c5850]
DEBUG: audit - 42. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7bbf3daf] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 41. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64e10bf9] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 42. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 40. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28ed649a] will be managed by Spring
DEBUG: audit - 41. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 42. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@7da1537c  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 41. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@268c6232  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 42. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn(String)
DEBUG: audit - 41. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn(String)
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 40. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
41. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn'  {executed in 1 msec}
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
42. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn'  {executed in 1 msec}
DEBUG: audit - 40. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@19029ed1  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 41. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: audit - 42. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: audit - 40. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn(String)
DEBUG: resultset - 41. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 42. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 41. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4ade0bd9  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 42. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7f715b22  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 41. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@21f9cea7  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
40. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfn'  {executed in 0 msec}
DEBUG: resultset - 42. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@15b52244  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 40. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 41. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 40. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 42. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 40. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5a08f0df  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 40. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@64dc909  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 41. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 42. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: resultset - 40. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 41. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: resultset - 42. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 41. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@64e10bf9  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 42. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7bbf3daf  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: resultset - 40. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: audit - 41. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 42. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@384628ab  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: resultset - 40. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 41. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 42. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 40. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@28ed649a  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 41. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2609a8a5]
DEBUG: audit - 42. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2609a8a5]
DEBUG: audit - 40. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@86c5850]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@86c5850]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@86c5850]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@86c5850]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7bbf3daf]
DEBUG: audit - 40. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2609a8a5]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2609a8a5]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@64e10bf9]
DEBUG: audit - 40. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ec04b3c]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ec04b3c]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ec04b3c]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ec04b3c]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@28ed649a]
DEBUG: audit - 42. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 42. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 41. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 40. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 42. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7bbf3daf]
DEBUG: audit - 41. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 40. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 41. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: audit - 42. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64e10bf9]
DEBUG: audit - 40. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7bbf3daf] after transaction
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28ed649a]
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
DEBUG: audit - 41. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64e10bf9] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
DEBUG: audit - 40. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28ed649a] after transaction
INFO : connection - 42. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 41. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: connection - open connections:  40 (1)
INFO : connection - 40. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: audit - 41. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: audit - 42. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: audit - 40. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 43. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  43 (1)
DEBUG: audit - 43. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@67fabd2c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@67fabd2c] read-only
DEBUG: audit - 43. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 43. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@67fabd2c] to manual commit
DEBUG: audit - 43. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a34333a]
DEBUG: audit - 43. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@67fabd2c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 43. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 43. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@64ce75a1  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 43. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnw") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnw(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
43. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnw'  {executed in 2 msec}
DEBUG: audit - 43. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 43. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 43. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@566fa7c9  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 43. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6d79e3dd  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 43. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 43. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 43. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 43. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@67fabd2c  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 43. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 43. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 43. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a34333a]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a34333a]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a34333a]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a34333a]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@67fabd2c]
DEBUG: audit - 43. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 43. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 43. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@67fabd2c]
DEBUG: audit - 43. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@67fabd2c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 43. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 43. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 44. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  44 (1)
DEBUG: audit - 44. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@34fdb663] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@34fdb663] read-only
DEBUG: audit - 44. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 44. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@34fdb663] to manual commit
DEBUG: audit - 44. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea6183]
DEBUG: audit - 44. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@34fdb663] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 44. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 44. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@18ee9081  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 44. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
44. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejk' 
 {executed in 1 msec}
DEBUG: audit - 44. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 44. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 44. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@41797351  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 44. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@134df484  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 44. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 44. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 44. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 44. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@34fdb663  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 44. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 44. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 44. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea6183]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea6183]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea6183]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea6183]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@34fdb663]
DEBUG: audit - 44. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 44. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 44. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@34fdb663]
DEBUG: audit - 44. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@34fdb663] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 44. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 44. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 45. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  45 (1)
DEBUG: audit - 45. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@61317a68] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@61317a68] read-only
DEBUG: audit - 45. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 45. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@61317a68] to manual commit
DEBUG: audit - 45. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dcfcacf]
DEBUG: audit - 45. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@61317a68] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 45. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 45. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@16fe692c  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 45. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
45. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn' 
 {executed in 1 msec}
DEBUG: audit - 45. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 45. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 45. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7cf6b3a1  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 45. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@7fec8742  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 45. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 45. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 45. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 45. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@61317a68  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 45. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 45. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 45. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dcfcacf]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dcfcacf]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dcfcacf]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dcfcacf]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@61317a68]
DEBUG: audit - 45. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 45. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 45. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@61317a68]
DEBUG: audit - 45. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@61317a68] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 45. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 45. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 46. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  46 (1)
DEBUG: audit - 46. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@57e9fb60] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57e9fb60] read-only
DEBUG: audit - 46. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 46. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57e9fb60] to manual commit
DEBUG: audit - 46. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@256ef308]
DEBUG: audit - 46. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57e9fb60] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 46. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 46. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@41f5ec97  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 46. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
46. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn' 
 {executed in 1 msec}
DEBUG: audit - 46. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 46. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 46. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@59df3d32  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 46. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@bfb63b2  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 46. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 46. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 46. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 46. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@57e9fb60  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 46. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 46. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 46. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@256ef308]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@256ef308]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@256ef308]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@256ef308]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@57e9fb60]
DEBUG: audit - 46. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 46. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 46. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57e9fb60]
DEBUG: audit - 46. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57e9fb60] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 46. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 46. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 47. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  47 48 (2)
INFO : connection - 48. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: audit - 47. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@2d5bb496] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2d5bb496] read-only
DEBUG: audit - 47. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 47. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2d5bb496] to manual commit
DEBUG: audit - 47. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@680a0e5e]
DEBUG: audit - 47. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2d5bb496] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: connection - open connections:  47 48 (2)
DEBUG: audit - 47. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 48. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@765e52a0] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@765e52a0] read-only
DEBUG: audit - 47. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@23bf66d9  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 48. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 48. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@765e52a0] to manual commit
DEBUG: audit - 47. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn(String)
DEBUG: audit - 48. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db1617f]
DEBUG: audit - 48. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@765e52a0] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 48. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
47. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn' 
 {executed in 1 msec}
DEBUG: audit - 48. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@379a35a8  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 47. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 47. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 48. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn(String)
DEBUG: audit - 47. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5330993c  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 47. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6bf015fa  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 47. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
48. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn' 
 {executed in 0 msec}
DEBUG: audit - 48. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 48. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 47. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: audit - 48. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@33d5aaa9  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 47. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: resultset - 48. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@25f99f35  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 47. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@2d5bb496  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: resultset - 48. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 47. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 47. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 47. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@680a0e5e]
DEBUG: resultset - 48. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@680a0e5e]
DEBUG: selectOneMember - <==      Total: 0
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@680a0e5e]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@680a0e5e]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@2d5bb496]
DEBUG: resultset - 48. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 48. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@765e52a0  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 47. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 48. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 47. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 48. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 47. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2d5bb496]
DEBUG: audit - 48. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: audit - 47. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db1617f]
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2d5bb496] after transaction
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db1617f]
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db1617f]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db1617f]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@765e52a0]
INFO : connection - 47. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  48 (1)
DEBUG: audit - 47. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: audit - 48. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: audit - 48. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 48. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@765e52a0]
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: audit - 48. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@765e52a0] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 48. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 48. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 49. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  49 (1)
DEBUG: audit - 49. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@75e867f2] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@75e867f2] read-only
DEBUG: audit - 49. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 49. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@75e867f2] to manual commit
DEBUG: audit - 49. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b801e4a]
DEBUG: audit - 49. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@75e867f2] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 49. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 49. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6e42a969  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 49. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
49. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn' 
 {executed in 1 msec}
DEBUG: audit - 49. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 49. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 49. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@582394a4  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 49. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@131aa3a4  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 49. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 49. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 49. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 49. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@75e867f2  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 49. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 49. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 49. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b801e4a]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b801e4a]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b801e4a]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b801e4a]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@75e867f2]
DEBUG: audit - 49. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 49. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 49. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@75e867f2]
DEBUG: audit - 49. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@75e867f2] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 49. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 49. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 50. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  50 (1)
DEBUG: audit - 50. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@25b7086e] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@25b7086e] read-only
DEBUG: audit - 50. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 50. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@25b7086e] to manual commit
DEBUG: audit - 50. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@527a8517]
DEBUG: audit - 50. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@25b7086e] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 50. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 50. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1b3cdd93  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 50. PreparedStatement.setString(1, "adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
50. select * from member where memberid = 'adminfdfnasdnanqwknwejkfnwjofnwejofnweofnwekjfnwejkfn' 
 {executed in 0 msec}
DEBUG: audit - 50. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 50. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 50. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@65542e2  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 50. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@12d02  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 50. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 50. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 50. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 50. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@25b7086e  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 50. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 50. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 50. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@527a8517]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@527a8517]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@527a8517]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@527a8517]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@25b7086e]
DEBUG: audit - 50. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 50. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 50. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@25b7086e]
DEBUG: audit - 50. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@25b7086e] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 50. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 50. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 51. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  51 (1)
DEBUG: audit - 51. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@328bb5e9] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@328bb5e9] read-only
DEBUG: audit - 51. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 51. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@328bb5e9] to manual commit
DEBUG: audit - 51. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d3cc78]
DEBUG: audit - 51. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@328bb5e9] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 51. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 51. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@228ae274  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 51. PreparedStatement.setString(1, "admi") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
51. select * from member where memberid = 'admi'  {executed in 1 msec}
DEBUG: audit - 51. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 51. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 51. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4d413f31  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 51. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@24189aed  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 51. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 51. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 51. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 51. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@328bb5e9  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 51. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 51. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 51. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d3cc78]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d3cc78]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d3cc78]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d3cc78]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@328bb5e9]
DEBUG: audit - 51. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 51. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 51. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@328bb5e9]
DEBUG: audit - 51. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@328bb5e9] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 51. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 51. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdg
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 52. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  52 (1)
DEBUG: audit - 52. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@12f78a13] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@12f78a13] read-only
DEBUG: audit - 52. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 52. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@12f78a13] to manual commit
DEBUG: audit - 52. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f8e6a8a]
DEBUG: audit - 52. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@12f78a13] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 52. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 52. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6af06b67  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 52. PreparedStatement.setString(1, "admisdg") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdg(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
52. select * from member where memberid = 'admisdg'  {executed in 0 msec}
DEBUG: audit - 52. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 52. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 52. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@44f9d338  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 52. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@28cf2b17  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 52. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 52. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 52. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 52. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@12f78a13  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 52. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 52. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 52. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f8e6a8a]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f8e6a8a]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f8e6a8a]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f8e6a8a]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@12f78a13]
DEBUG: audit - 52. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 52. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 52. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@12f78a13]
DEBUG: audit - 52. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@12f78a13] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 52. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 52. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdg
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 53. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  53 (1)
DEBUG: audit - 53. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@41ea28b2] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@41ea28b2] read-only
DEBUG: audit - 53. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 53. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@41ea28b2] to manual commit
DEBUG: audit - 53. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561e3e53]
DEBUG: audit - 53. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@41ea28b2] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 53. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 53. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@5f21e9cc  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 53. PreparedStatement.setString(1, "admisdg") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdg(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
53. select * from member where memberid = 'admisdg'  {executed in 0 msec}
DEBUG: audit - 53. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 53. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 53. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4f9ee522  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 53. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6855b624  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 53. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 53. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 53. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 53. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@41ea28b2  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 53. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 53. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 53. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561e3e53]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561e3e53]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561e3e53]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561e3e53]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@41ea28b2]
DEBUG: audit - 53. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 53. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 53. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@41ea28b2]
DEBUG: audit - 53. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@41ea28b2] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 53. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 53. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjis
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 54. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  54 (1)
DEBUG: audit - 54. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4f52f7bd] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f52f7bd] read-only
DEBUG: audit - 54. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 54. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f52f7bd] to manual commit
DEBUG: audit - 54. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23540c4e]
DEBUG: audit - 54. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f52f7bd] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 54. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 54. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@552828e9  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 54. PreparedStatement.setString(1, "admisdgjis") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjis(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
54. select * from member where memberid = 'admisdgjis'  {executed in 0 msec}
DEBUG: audit - 54. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 54. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 54. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@d1fd2ee  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 54. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@eaa897f  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 54. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 54. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 54. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 54. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4f52f7bd  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 54. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 54. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 54. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23540c4e]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23540c4e]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23540c4e]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23540c4e]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4f52f7bd]
DEBUG: audit - 54. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 54. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 54. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f52f7bd]
DEBUG: audit - 54. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f52f7bd] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 54. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 54. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjis
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 55. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  55 (1)
DEBUG: audit - 55. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@618e8465] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@618e8465] read-only
DEBUG: audit - 55. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 55. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@618e8465] to manual commit
DEBUG: audit - 55. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dc2671]
DEBUG: audit - 55. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@618e8465] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 55. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 55. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@5633be9a  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 55. PreparedStatement.setString(1, "admisdgjis") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjis(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
55. select * from member where memberid = 'admisdgjis'  {executed in 1 msec}
DEBUG: audit - 55. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 55. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 55. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@430bb595  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 55. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2601ec2b  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 55. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 55. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 55. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 55. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@618e8465  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 55. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 55. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 55. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dc2671]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dc2671]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dc2671]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dc2671]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@618e8465]
DEBUG: audit - 55. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 55. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 55. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@618e8465]
DEBUG: audit - 55. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@618e8465] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 55. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 55. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjis
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 56. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  56 (1)
DEBUG: audit - 56. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@394125e6] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@394125e6] read-only
DEBUG: audit - 56. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 56. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@394125e6] to manual commit
DEBUG: audit - 56. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57bef70d]
DEBUG: audit - 56. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@394125e6] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 56. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 56. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@279e7dd1  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 56. PreparedStatement.setString(1, "admisdgjis") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjis(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
56. select * from member where memberid = 'admisdgjis'  {executed in 0 msec}
DEBUG: audit - 56. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 56. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 56. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@174002d1  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 56. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@376689ab  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 56. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 56. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 56. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 56. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@394125e6  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 56. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 56. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 56. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57bef70d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57bef70d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57bef70d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57bef70d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@394125e6]
DEBUG: audit - 56. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 56. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 56. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@394125e6]
DEBUG: audit - 56. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@394125e6] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 56. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 56. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisg
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 57. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  57 (1)
DEBUG: audit - 57. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@39bd827a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@39bd827a] read-only
DEBUG: audit - 57. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 57. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@39bd827a] to manual commit
DEBUG: audit - 57. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6cc790]
DEBUG: audit - 57. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@39bd827a] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 57. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 57. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@281b910a  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 57. PreparedStatement.setString(1, "admisdgjisg") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisg(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
57. select * from member where memberid = 'admisdgjisg'  {executed in 1 msec}
DEBUG: audit - 57. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 57. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 57. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7d606821  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 57. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4489605a  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 57. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 57. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 57. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 57. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@39bd827a  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 57. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 57. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 57. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6cc790]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6cc790]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6cc790]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6cc790]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@39bd827a]
DEBUG: audit - 57. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 57. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 57. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@39bd827a]
DEBUG: audit - 57. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@39bd827a] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 57. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 57. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgj
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 58. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  58 (1)
DEBUG: audit - 58. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7b991043] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b991043] read-only
DEBUG: audit - 58. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 58. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b991043] to manual commit
DEBUG: audit - 58. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c83847]
DEBUG: audit - 58. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b991043] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 58. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 58. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1fd238d8  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 58. PreparedStatement.setString(1, "admisdgjisgj") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgj(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
58. select * from member where memberid = 'admisdgjisgj'  {executed in 1 msec}
DEBUG: audit - 58. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 58. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 58. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2c7a2869  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 58. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4e9237a1  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 58. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 58. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 58. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 58. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7b991043  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 58. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 58. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 58. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c83847]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c83847]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c83847]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c83847]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7b991043]
DEBUG: audit - 58. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 58. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 58. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b991043]
DEBUG: audit - 58. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b991043] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 58. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 58. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjs
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 59. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  59 (1)
DEBUG: audit - 59. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@21235f84] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21235f84] read-only
DEBUG: audit - 59. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 59. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21235f84] to manual commit
DEBUG: audit - 59. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ad1a328]
DEBUG: audit - 59. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21235f84] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 59. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 59. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@58d21d87  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 59. PreparedStatement.setString(1, "admisdgjisgjs") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjs(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
59. select * from member where memberid = 'admisdgjisgjs'  {executed in 0 msec}
DEBUG: audit - 59. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 59. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 59. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@63b6a666  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 59. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@34a981db  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 59. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 59. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 59. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 59. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@21235f84  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 59. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 59. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 59. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ad1a328]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ad1a328]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ad1a328]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ad1a328]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@21235f84]
DEBUG: audit - 59. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 59. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 59. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21235f84]
DEBUG: audit - 59. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21235f84] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 59. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 59. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdj
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 60. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  60 (1)
DEBUG: audit - 60. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1cdb1fc7] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cdb1fc7] read-only
DEBUG: audit - 60. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 60. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cdb1fc7] to manual commit
DEBUG: audit - 60. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6176898a]
DEBUG: audit - 60. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cdb1fc7] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 60. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 60. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@44f8d898  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 60. PreparedStatement.setString(1, "admisdgjisgjsdj") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdj(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
60. select * from member where memberid = 'admisdgjisgjsdj'  {executed in 1 msec}
DEBUG: audit - 60. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 60. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 60. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@19c2e7  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 60. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@55f621b7  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 60. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 60. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 60. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 60. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1cdb1fc7  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 60. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 60. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 60. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6176898a]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6176898a]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6176898a]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6176898a]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1cdb1fc7]
DEBUG: audit - 60. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 60. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 60. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cdb1fc7]
DEBUG: audit - 60. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cdb1fc7] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 60. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 60. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdj
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 61. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  61 (1)
DEBUG: audit - 61. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@257c3ab7] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@257c3ab7] read-only
DEBUG: audit - 61. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 61. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@257c3ab7] to manual commit
DEBUG: audit - 61. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5090f52e]
DEBUG: audit - 61. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@257c3ab7] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 61. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 61. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@74c3df38  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 61. PreparedStatement.setString(1, "admisdgjisgjsdj") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdj(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
61. select * from member where memberid = 'admisdgjisgjsdj'  {executed in 0 msec}
DEBUG: audit - 61. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 61. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 61. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@302eea95  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 61. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6740403b  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 61. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 61. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 61. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 61. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@257c3ab7  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 61. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 61. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 61. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5090f52e]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5090f52e]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5090f52e]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5090f52e]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@257c3ab7]
DEBUG: audit - 61. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 61. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 61. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@257c3ab7]
DEBUG: audit - 61. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@257c3ab7] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 61. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 61. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdj
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 62. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  62 (1)
DEBUG: audit - 62. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4542513d] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4542513d] read-only
DEBUG: audit - 62. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 62. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4542513d] to manual commit
DEBUG: audit - 62. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c00a1a1]
DEBUG: audit - 62. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4542513d] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 62. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 62. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@77acd743  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 62. PreparedStatement.setString(1, "admisdgjisgjsdj") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdj(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
62. select * from member where memberid = 'admisdgjisgjsdj'  {executed in 1 msec}
DEBUG: audit - 62. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 62. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 62. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2030bb32  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 62. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@9940b3c  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 62. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 62. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 62. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 62. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4542513d  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 62. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 62. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 62. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c00a1a1]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c00a1a1]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c00a1a1]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c00a1a1]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4542513d]
DEBUG: audit - 62. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 62. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 62. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4542513d]
DEBUG: audit - 62. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4542513d] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 62. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 62. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 63. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  63 (1)
DEBUG: audit - 63. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1cf2d76d] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cf2d76d] read-only
DEBUG: audit - 63. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 63. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cf2d76d] to manual commit
DEBUG: audit - 63. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57fe6d07]
DEBUG: audit - 63. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cf2d76d] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 63. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 63. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@608e10d7  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 63. PreparedStatement.setString(1, "admisdgjisgjsdjflk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
63. select * from member where memberid = 'admisdgjisgjsdjflk'  {executed in 1 msec}
DEBUG: audit - 63. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 63. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 63. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@6acdfa14  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 63. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4eff241f  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 63. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 63. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 63. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 63. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1cf2d76d  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 63. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 63. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 63. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57fe6d07]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57fe6d07]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57fe6d07]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57fe6d07]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1cf2d76d]
DEBUG: audit - 63. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 63. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 63. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cf2d76d]
DEBUG: audit - 63. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cf2d76d] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 63. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 63. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflkw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 64. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  64 (1)
DEBUG: audit - 64. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@10de65f3] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@10de65f3] read-only
DEBUG: audit - 64. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 64. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@10de65f3] to manual commit
DEBUG: audit - 64. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64b93523]
DEBUG: audit - 64. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@10de65f3] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 64. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 64. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@15e25053  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 64. PreparedStatement.setString(1, "admisdgjisgjsdjflkw") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflkw(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
64. select * from member where memberid = 'admisdgjisgjsdjflkw'  {executed in 1 msec}
DEBUG: audit - 64. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 64. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 64. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@76f05ee1  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 64. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@5bcd7d31  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 64. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 64. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 64. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 64. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@10de65f3  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 64. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 64. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 64. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64b93523]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64b93523]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64b93523]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64b93523]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@10de65f3]
DEBUG: audit - 64. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 64. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 64. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@10de65f3]
DEBUG: audit - 64. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@10de65f3] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 64. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 64. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflkwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 65. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  65 (1)
DEBUG: audit - 65. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@f56cf7c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@f56cf7c] read-only
DEBUG: audit - 65. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 65. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@f56cf7c] to manual commit
DEBUG: audit - 65. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cc22b6]
DEBUG: audit - 65. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@f56cf7c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 65. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 65. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@23786489  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 65. PreparedStatement.setString(1, "admisdgjisgjsdjflkwe") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflkwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
65. select * from member where memberid = 'admisdgjisgjsdjflkwe'  {executed in 1 msec}
DEBUG: audit - 65. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 65. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 65. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1aec62b5  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 65. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@7ad53acc  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 65. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 65. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 65. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 65. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@f56cf7c  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 65. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 65. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 65. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cc22b6]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cc22b6]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cc22b6]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cc22b6]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@f56cf7c]
DEBUG: audit - 65. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 65. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 65. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@f56cf7c]
DEBUG: audit - 65. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@f56cf7c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 65. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 65. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflkweo
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 66. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  66 (1)
DEBUG: audit - 66. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@36ebdda6] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@36ebdda6] read-only
DEBUG: audit - 66. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 66. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@36ebdda6] to manual commit
DEBUG: audit - 66. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e9dc0d9]
DEBUG: audit - 66. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@36ebdda6] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 66. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 66. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@50913761  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 66. PreparedStatement.setString(1, "admisdgjisgjsdjflkweo") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflkweo(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
66. select * from member where memberid = 'admisdgjisgjsdjflkweo'  {executed in 0 msec}
DEBUG: audit - 66. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 66. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 66. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@38ffd638  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 66. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@28f442f6  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 66. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 66. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 66. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 66. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@36ebdda6  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 66. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 66. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 66. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e9dc0d9]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e9dc0d9]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e9dc0d9]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e9dc0d9]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@36ebdda6]
DEBUG: audit - 66. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 66. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 66. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@36ebdda6]
DEBUG: audit - 66. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@36ebdda6] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 66. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 66. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflkweo
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 67. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  67 (1)
DEBUG: audit - 67. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5ccf3e28] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5ccf3e28] read-only
DEBUG: audit - 67. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 67. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5ccf3e28] to manual commit
DEBUG: audit - 67. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef10131]
DEBUG: audit - 67. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5ccf3e28] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 67. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 67. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@74ae8eda  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 67. PreparedStatement.setString(1, "admisdgjisgjsdjflkweo") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflkweo(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
67. select * from member where memberid = 'admisdgjisgjsdjflkweo'  {executed in 1 msec}
DEBUG: audit - 67. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 67. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 67. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5135c019  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 67. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@79bab87  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 67. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 67. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 67. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 67. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5ccf3e28  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 67. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 67. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 67. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef10131]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef10131]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef10131]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef10131]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5ccf3e28]
DEBUG: audit - 67. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 67. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 67. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5ccf3e28]
DEBUG: audit - 67. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5ccf3e28] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 67. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 67. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflkweok
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 68. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  68 (1)
DEBUG: audit - 68. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@14da8559] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@14da8559] read-only
DEBUG: audit - 68. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 68. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@14da8559] to manual commit
DEBUG: audit - 68. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e0ab2e5]
DEBUG: audit - 68. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@14da8559] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 68. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 68. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@5c134b66  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 68. PreparedStatement.setString(1, "admisdgjisgjsdjflkweok") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflkweok(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
68. select * from member where memberid = 'admisdgjisgjsdjflkweok'  {executed in 0 msec}
DEBUG: audit - 68. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 68. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 68. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1ca3fdf0  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 68. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3715f91b  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 68. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 68. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 68. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 68. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@14da8559  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 68. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 68. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 68. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e0ab2e5]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e0ab2e5]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e0ab2e5]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e0ab2e5]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@14da8559]
DEBUG: audit - 68. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 68. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 68. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@14da8559]
DEBUG: audit - 68. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@14da8559] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 68. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 68. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflkweokw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 69. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  69 (1)
DEBUG: audit - 69. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7936cf93] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7936cf93] read-only
DEBUG: audit - 69. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 69. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7936cf93] to manual commit
DEBUG: audit - 69. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68b10939]
DEBUG: audit - 69. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7936cf93] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 69. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 69. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6419e94e  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 69. PreparedStatement.setString(1, "admisdgjisgjsdjflkweokw") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflkweokw(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
69. select * from member where memberid = 'admisdgjisgjsdjflkweokw'  {executed in 0 msec}
DEBUG: audit - 69. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 69. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 69. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2b1ce809  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 69. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4b04c492  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 69. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 69. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 69. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 69. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7936cf93  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 69. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 69. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 69. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68b10939]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68b10939]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68b10939]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68b10939]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7936cf93]
DEBUG: audit - 69. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 69. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 69. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7936cf93]
DEBUG: audit - 69. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7936cf93] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 69. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 69. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflkweokwef
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 70. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  70 (1)
DEBUG: audit - 70. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4f52d144] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f52d144] read-only
DEBUG: audit - 70. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 70. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f52d144] to manual commit
DEBUG: audit - 70. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b29c727]
DEBUG: audit - 70. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f52d144] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 70. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 70. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@7269731a  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 70. PreparedStatement.setString(1, "admisdgjisgjsdjflkweokwef") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflkweokwef(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
70. select * from member where memberid = 'admisdgjisgjsdjflkweokwef'  {executed in 1 msec}
DEBUG: audit - 70. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 70. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 70. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2be844e2  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 70. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3e6dbe47  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 70. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 70. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 70. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 70. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4f52d144  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 70. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 70. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 70. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b29c727]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b29c727]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b29c727]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b29c727]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4f52d144]
DEBUG: audit - 70. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 70. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 70. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f52d144]
DEBUG: audit - 70. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f52d144] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 70. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 70. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflkweokwef
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 71. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  71 (1)
DEBUG: audit - 71. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@313d30b2] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@313d30b2] read-only
DEBUG: audit - 71. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 71. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@313d30b2] to manual commit
DEBUG: audit - 71. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6182d0d0]
DEBUG: audit - 71. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@313d30b2] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 71. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 71. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1cace7a4  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 71. PreparedStatement.setString(1, "admisdgjisgjsdjflkweokwef") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflkweokwef(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
71. select * from member where memberid = 'admisdgjisgjsdjflkweokwef'  {executed in 0 msec}
DEBUG: audit - 71. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 71. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 71. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@44ccec23  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 71. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@333fb03a  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 71. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 71. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 71. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 71. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@313d30b2  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 71. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 71. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 71. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6182d0d0]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6182d0d0]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6182d0d0]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6182d0d0]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@313d30b2]
DEBUG: audit - 71. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 71. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 71. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@313d30b2]
DEBUG: audit - 71. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@313d30b2] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 71. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 71. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflkweokwef
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 72. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  72 (1)
DEBUG: audit - 72. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3c9da7c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3c9da7c] read-only
DEBUG: audit - 72. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 72. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3c9da7c] to manual commit
DEBUG: audit - 72. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@576d5f21]
DEBUG: audit - 72. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3c9da7c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 72. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 72. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@43046bf8  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 72. PreparedStatement.setString(1, "admisdgjisgjsdjflkweokwef") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflkweokwef(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
72. select * from member where memberid = 'admisdgjisgjsdjflkweokwef'  {executed in 1 msec}
DEBUG: audit - 72. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 72. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 72. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@e5353de  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 72. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@337a8162  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 72. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 72. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 72. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 72. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3c9da7c  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 72. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 72. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 72. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@576d5f21]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@576d5f21]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@576d5f21]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@576d5f21]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3c9da7c]
DEBUG: audit - 72. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 72. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 72. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3c9da7c]
DEBUG: audit - 72. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3c9da7c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 72. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 72. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflkweokwefsdfk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 73. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  73 (1)
DEBUG: audit - 73. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@39245ced] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@39245ced] read-only
DEBUG: audit - 73. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 73. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@39245ced] to manual commit
DEBUG: audit - 73. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29bcebb6]
DEBUG: audit - 73. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@39245ced] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 73. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 73. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1b4cbf88  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 73. PreparedStatement.setString(1, "admisdgjisgjsdjflkweokwefsdfk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflkweokwefsdfk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
73. select * from member where memberid = 'admisdgjisgjsdjflkweokwefsdfk'  {executed in 0 msec}
DEBUG: audit - 73. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 73. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@144b38  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4e3be1d7  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 73. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 73. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 73. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@39245ced  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 73. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 73. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 73. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29bcebb6]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29bcebb6]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29bcebb6]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29bcebb6]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@39245ced]
DEBUG: audit - 73. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 73. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 73. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@39245ced]
DEBUG: audit - 73. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@39245ced] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 73. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 73. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflkweokwefsdfk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 74. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  74 (1)
DEBUG: audit - 74. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@72c5877d] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@72c5877d] read-only
DEBUG: audit - 74. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 74. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@72c5877d] to manual commit
DEBUG: audit - 74. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a231be]
DEBUG: audit - 74. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@72c5877d] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 74. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 74. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3145bf43  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 74. PreparedStatement.setString(1, "admisdgjisgjsdjflkweokwefsdfk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflkweokwefsdfk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
74. select * from member where memberid = 'admisdgjisgjsdjflkweokwefsdfk'  {executed in 1 msec}
DEBUG: audit - 74. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 74. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 74. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@6f652879  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 74. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@baedbea  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 74. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 74. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 74. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 74. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@72c5877d  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 74. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 74. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 74. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a231be]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a231be]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a231be]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a231be]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@72c5877d]
DEBUG: audit - 74. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 74. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 74. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@72c5877d]
DEBUG: audit - 74. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@72c5877d] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 74. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 74. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflkweokwefsdfk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 75. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  75 (1)
DEBUG: audit - 75. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@45beba4b] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@45beba4b] read-only
DEBUG: audit - 75. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 75. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@45beba4b] to manual commit
DEBUG: audit - 75. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2502d259]
DEBUG: audit - 75. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@45beba4b] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 75. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 75. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@fd2a790  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 75. PreparedStatement.setString(1, "admisdgjisgjsdjflkweokwefsdfk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflkweokwefsdfk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
75. select * from member where memberid = 'admisdgjisgjsdjflkweokwefsdfk'  {executed in 0 msec}
DEBUG: audit - 75. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 75. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 75. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3f8e28c3  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 75. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@c2da571  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 75. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 75. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 75. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 75. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@45beba4b  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 75. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 75. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 75. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2502d259]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2502d259]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2502d259]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2502d259]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@45beba4b]
DEBUG: audit - 75. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 75. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 75. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@45beba4b]
DEBUG: audit - 75. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@45beba4b] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 75. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 75. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisdgjisgjsdjflkweokwefsdfk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 76. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  76 (1)
DEBUG: audit - 76. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7603721e] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7603721e] read-only
DEBUG: audit - 76. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 76. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7603721e] to manual commit
DEBUG: audit - 76. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ff06980]
DEBUG: audit - 76. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7603721e] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 76. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 76. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6391387b  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 76. PreparedStatement.setString(1, "admisdgjisgjsdjflkweokwefsdfk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisdgjisgjsdjflkweokwefsdfk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
76. select * from member where memberid = 'admisdgjisgjsdjflkweokwefsdfk'  {executed in 1 msec}
DEBUG: audit - 76. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 76. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 76. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@e6f2595  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 76. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@22fff1b1  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 76. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 76. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 76. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 76. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7603721e  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 76. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 76. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 76. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ff06980]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ff06980]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ff06980]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ff06980]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7603721e]
DEBUG: audit - 76. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 76. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 76. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7603721e]
DEBUG: audit - 76. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7603721e] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 76. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 76. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/memberEnroll.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - 회원등록페이지 요청
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 77. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  77 (1)
DEBUG: audit - 77. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1305d02] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1305d02] read-only
DEBUG: audit - 77. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 77. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1305d02] to manual commit
DEBUG: audit - 77. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38780f9d]
DEBUG: audit - 77. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1305d02] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 77. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 77. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@29290ce  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 77. PreparedStatement.setString(1, "admi") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
77. select * from member where memberid = 'admi'  {executed in 1 msec}
DEBUG: audit - 77. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 77. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 77. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1c905d3  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 77. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@79b5f690  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 77. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 77. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 77. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 77. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1305d02  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 77. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 77. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 77. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38780f9d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38780f9d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38780f9d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38780f9d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1305d02]
DEBUG: audit - 77. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 77. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 77. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1305d02]
DEBUG: audit - 77. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1305d02] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 77. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 77. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admim
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 78. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  78 (1)
DEBUG: audit - 78. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6f6ec5c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f6ec5c] read-only
DEBUG: audit - 78. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 78. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f6ec5c] to manual commit
DEBUG: audit - 78. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9cbae1]
DEBUG: audit - 78. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f6ec5c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 78. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 78. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@10e2391d  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 78. PreparedStatement.setString(1, "admim") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admim(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
78. select * from member where memberid = 'admim'  {executed in 2 msec}
DEBUG: audit - 78. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 78. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 78. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@21c7b351  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 78. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@39944e3a  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 78. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 78. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 78. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 78. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6f6ec5c  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 78. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 78. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 78. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9cbae1]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9cbae1]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9cbae1]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9cbae1]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6f6ec5c]
DEBUG: audit - 78. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 78. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 78. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f6ec5c]
DEBUG: audit - 78. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f6ec5c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 78. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 78. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 79. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  79 (1)
DEBUG: audit - 79. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@47d8530e] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@47d8530e] read-only
DEBUG: audit - 79. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 79. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@47d8530e] to manual commit
DEBUG: audit - 79. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39160482]
DEBUG: audit - 79. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@47d8530e] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 79. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 79. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@addaaf2  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 79. PreparedStatement.setString(1, "admi") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
79. select * from member where memberid = 'admi'  {executed in 1 msec}
DEBUG: audit - 79. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 79. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 79. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@f98c884  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 79. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6a3efe1  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 79. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 79. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 79. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 79. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@47d8530e  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 79. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 79. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 79. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39160482]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39160482]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39160482]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39160482]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@47d8530e]
DEBUG: audit - 79. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 79. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 79. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@47d8530e]
DEBUG: audit - 79. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@47d8530e] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 79. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 79. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admin
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 80. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  80 (1)
DEBUG: audit - 80. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@18068b4] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@18068b4] read-only
DEBUG: audit - 80. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 80. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@18068b4] to manual commit
DEBUG: audit - 80. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d237060]
DEBUG: audit - 80. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@18068b4] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 80. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 80. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@26cf5444  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 80. PreparedStatement.setString(1, "admin") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admin(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
80. select * from member where memberid = 'admin'  {executed in 1 msec}
DEBUG: audit - 80. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 80. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 80. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@24084de1  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 80. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@22ae8970  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 80. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 80. ResultSet.next() returned true  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: resultset - 80. ResultSet.getString(MEMBERID) returned admin  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.getString(PASSWORD) returned $2a$10$R1XcilPpsC6eClvR6RtkmOK7cN5yvhfIntRVH9ifJBsBqQmnNCNK2  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.getString(MEMBERNAME) returned 관리자  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.getString(GENDER) returned F  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.getInt(AGE) returned 49  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.getString(EMAIL) returned admin@naver.com  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.getString(PHONE) returned 01012345678  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.getString(ADDRESS) returned 서울시 강남구 버거킹 하하  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor77.invoke(null:-1)
DEBUG: resultset - 80. ResultSet.getDate(ENROLLDATE) returned 2019-01-28  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor77.invoke(null:-1)
DEBUG: resultset - 80. ResultSet.getString(hobby) returned 운동,게임,여행  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 80. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 1
DEBUG: resultset - 80. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 80. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@18068b4  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 80. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 80. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 80. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d237060]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d237060]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d237060]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d237060]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@18068b4]
DEBUG: audit - 80. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 80. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 80. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@18068b4]
DEBUG: audit - 80. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@18068b4] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 80. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 80. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 81. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  81 (1)
DEBUG: audit - 81. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@47c85fa7] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@47c85fa7] read-only
DEBUG: audit - 81. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 81. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@47c85fa7] to manual commit
DEBUG: audit - 81. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dbc8ee9]
DEBUG: audit - 81. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@47c85fa7] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 81. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 81. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@725d5496  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 81. PreparedStatement.setString(1, "admi") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
81. select * from member where memberid = 'admi'  {executed in 1 msec}
DEBUG: audit - 81. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 81. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 81. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@77ed081d  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 81. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4e9f1bcf  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 81. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 81. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 81. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 81. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@47c85fa7  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 81. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 81. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 81. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dbc8ee9]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dbc8ee9]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dbc8ee9]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dbc8ee9]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@47c85fa7]
DEBUG: audit - 81. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 81. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 81. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@47c85fa7]
DEBUG: audit - 81. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@47c85fa7] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 81. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 81. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admisp
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 82. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  82 (1)
DEBUG: audit - 82. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@a0d0b1a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@a0d0b1a] read-only
DEBUG: audit - 82. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 82. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@a0d0b1a] to manual commit
DEBUG: audit - 82. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60b5a8c0]
DEBUG: audit - 82. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@a0d0b1a] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 82. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 82. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4a2e63f6  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 82. PreparedStatement.setString(1, "admisp") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admisp(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
82. select * from member where memberid = 'admisp'  {executed in 0 msec}
DEBUG: audit - 82. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 82. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 82. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@2899f472  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 82. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@65a7aa09  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 82. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 82. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 82. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 82. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@a0d0b1a  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 82. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 82. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 82. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60b5a8c0]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60b5a8c0]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60b5a8c0]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60b5a8c0]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@a0d0b1a]
DEBUG: audit - 82. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 82. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 82. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@a0d0b1a]
DEBUG: audit - 82. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@a0d0b1a] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 82. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 82. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 83. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  83 (1)
DEBUG: audit - 83. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@184283f8] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@184283f8] read-only
DEBUG: audit - 83. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 83. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@184283f8] to manual commit
DEBUG: audit - 83. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@189a0674]
DEBUG: audit - 83. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@184283f8] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 83. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 83. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3d4d6098  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 83. PreparedStatement.setString(1, "admispgk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
83. select * from member where memberid = 'admispgk'  {executed in 1 msec}
DEBUG: audit - 83. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 83. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 83. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@311c798a  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 83. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@797d707b  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 83. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 83. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 83. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 83. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@184283f8  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 83. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 83. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 83. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@189a0674]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@189a0674]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@189a0674]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@189a0674]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@184283f8]
DEBUG: audit - 83. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 83. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 83. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@184283f8]
DEBUG: audit - 83. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@184283f8] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 83. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 83. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgks
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 84. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  84 (1)
DEBUG: audit - 84. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@32887a17] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@32887a17] read-only
DEBUG: audit - 84. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 84. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@32887a17] to manual commit
DEBUG: audit - 84. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74064f5b]
DEBUG: audit - 84. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@32887a17] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 84. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 84. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6f0c8285  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 84. PreparedStatement.setString(1, "admispgks") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgks(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
84. select * from member where memberid = 'admispgks'  {executed in 1 msec}
DEBUG: audit - 84. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 84. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 84. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1e2515b1  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 84. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@589ffdb9  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 84. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 84. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 84. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 84. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@32887a17  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 84. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 84. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 84. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74064f5b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74064f5b]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74064f5b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74064f5b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@32887a17]
DEBUG: audit - 84. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 84. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 84. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@32887a17]
DEBUG: audit - 84. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@32887a17] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 84. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 84. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgks
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 85. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  85 (1)
DEBUG: audit - 85. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@67222fef] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@67222fef] read-only
DEBUG: audit - 85. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 85. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@67222fef] to manual commit
DEBUG: audit - 85. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d6498eb]
DEBUG: audit - 85. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@67222fef] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 85. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 85. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@16b6ce1e  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 85. PreparedStatement.setString(1, "admispgks") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgks(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
85. select * from member where memberid = 'admispgks'  {executed in 1 msec}
DEBUG: audit - 85. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 85. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 85. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@609dc670  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 85. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4917a948  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 85. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 85. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 85. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 85. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@67222fef  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 85. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 85. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 85. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d6498eb]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d6498eb]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d6498eb]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d6498eb]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@67222fef]
DEBUG: audit - 85. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 85. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 85. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@67222fef]
DEBUG: audit - 85. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@67222fef] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 85. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 85. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgksopgk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 86. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  86 (1)
DEBUG: audit - 86. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5c570d21] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c570d21] read-only
DEBUG: audit - 86. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 86. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c570d21] to manual commit
DEBUG: audit - 86. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad5f285]
DEBUG: audit - 86. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c570d21] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 86. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 86. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@55ace608  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 86. PreparedStatement.setString(1, "admispgksopgk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgksopgk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
86. select * from member where memberid = 'admispgksopgk'  {executed in 3 msec}
DEBUG: audit - 86. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 86. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 86. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3176d799  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 86. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@54525ae8  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 86. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 86. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 86. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 86. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5c570d21  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 86. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 86. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 86. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad5f285]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad5f285]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad5f285]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad5f285]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5c570d21]
DEBUG: audit - 86. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 86. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 86. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c570d21]
DEBUG: audit - 86. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c570d21] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 86. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 86. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgksopgk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 87. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  87 (1)
DEBUG: audit - 87. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@702b6b59] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@702b6b59] read-only
DEBUG: audit - 87. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 87. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@702b6b59] to manual commit
DEBUG: audit - 87. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71809e90]
DEBUG: audit - 87. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@702b6b59] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 87. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 87. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@76bf80d6  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 87. PreparedStatement.setString(1, "admispgksopgk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgksopgk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
87. select * from member where memberid = 'admispgksopgk'  {executed in 1 msec}
DEBUG: audit - 87. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 87. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 87. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5de55cfb  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 87. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@28643dc9  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 87. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgksopgk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
DEBUG: resultset - 87. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
INFO : connection - 88. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  87 88 (2)
DEBUG: resultset - 87. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 88. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@173ec6bb] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@173ec6bb] read-only
DEBUG: audit - 87. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@702b6b59  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 88. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 87. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 88. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@173ec6bb] to manual commit
DEBUG: audit - 88. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: audit - 87. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7785340f]
DEBUG: audit - 87. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: audit - 88. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71809e90]
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@173ec6bb] will be managed by Spring
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71809e90]
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71809e90]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71809e90]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@702b6b59]
DEBUG: audit - 88. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 88. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4cab81a  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 87. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 87. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 88. PreparedStatement.setString(1, "admispgksopgk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgksopgk(String)
DEBUG: audit - 87. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@702b6b59]
DEBUG: audit - 87. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@702b6b59] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 87. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  88 (1)
DEBUG: audit - 87. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
88. select * from member where memberid = 'admispgksopgk'  {executed in 0 msec}
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: audit - 88. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: resultset - 88. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 88. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@6520ad26  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 88. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3bdbd8c1  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 88. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 88. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 88. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 88. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@173ec6bb  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 88. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 88. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 88. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7785340f]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7785340f]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7785340f]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7785340f]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@173ec6bb]
DEBUG: audit - 88. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 88. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 88. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@173ec6bb]
DEBUG: audit - 88. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@173ec6bb] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 88. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 88. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgksopgkw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 89. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  89 (1)
DEBUG: audit - 89. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5327736b] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5327736b] read-only
DEBUG: audit - 89. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 89. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5327736b] to manual commit
DEBUG: audit - 89. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@344ac9c7]
DEBUG: audit - 89. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5327736b] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 89. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 89. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@649adf8f  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 89. PreparedStatement.setString(1, "admispgksopgkw") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgksopgkw(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
89. select * from member where memberid = 'admispgksopgkw'  {executed in 0 msec}
DEBUG: audit - 89. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 89. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 89. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@c4e445c  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 89. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6ea8b0e3  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 89. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 89. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 89. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 89. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5327736b  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 89. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 89. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 89. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@344ac9c7]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@344ac9c7]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@344ac9c7]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@344ac9c7]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5327736b]
DEBUG: audit - 89. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 89. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 89. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5327736b]
DEBUG: audit - 89. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5327736b] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 89. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 89. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgksopgkw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 90. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  90 (1)
DEBUG: audit - 90. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5e318927] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e318927] read-only
DEBUG: audit - 90. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 90. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e318927] to manual commit
DEBUG: audit - 90. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8026e98]
DEBUG: audit - 90. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e318927] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 90. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 90. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@5c4aea99  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 90. PreparedStatement.setString(1, "admispgksopgkw") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgksopgkw(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
90. select * from member where memberid = 'admispgksopgkw'  {executed in 0 msec}
DEBUG: audit - 90. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 90. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 90. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@ee03886  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 90. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@150de16c  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 90. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 90. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 90. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 90. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5e318927  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 90. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 90. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 90. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8026e98]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8026e98]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8026e98]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8026e98]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5e318927]
DEBUG: audit - 90. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 90. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 90. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e318927]
DEBUG: audit - 90. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e318927] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 90. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 90. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgksopgkwofk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 91. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  91 (1)
DEBUG: audit - 91. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@e88d0a4] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e88d0a4] read-only
DEBUG: audit - 91. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 91. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e88d0a4] to manual commit
DEBUG: audit - 91. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e9dc07]
DEBUG: audit - 91. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e88d0a4] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 91. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 91. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3f2ca0b0  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 91. PreparedStatement.setString(1, "admispgksopgkwofk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgksopgkwofk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
91. select * from member where memberid = 'admispgksopgkwofk'  {executed in 0 msec}
DEBUG: audit - 91. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 91. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 91. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@77e95a01  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 91. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2fb8a91f  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 91. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 91. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 91. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 91. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@e88d0a4  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 91. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 91. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 91. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e9dc07]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e9dc07]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e9dc07]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e9dc07]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@e88d0a4]
DEBUG: audit - 91. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 91. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 91. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e88d0a4]
DEBUG: audit - 91. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e88d0a4] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 91. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 91. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgksopgkwofk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 92. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  92 (1)
DEBUG: audit - 92. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@796c7b69] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@796c7b69] read-only
DEBUG: audit - 92. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 92. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@796c7b69] to manual commit
DEBUG: audit - 92. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e48661]
DEBUG: audit - 92. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@796c7b69] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 92. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 92. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@7f16d167  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 92. PreparedStatement.setString(1, "admispgksopgkwofk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgksopgkwofk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
92. select * from member where memberid = 'admispgksopgkwofk'  {executed in 1 msec}
DEBUG: audit - 92. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 92. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 92. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@653b5adf  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 92. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@1881f97  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 92. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 92. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 92. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 92. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@796c7b69  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 92. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 92. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 92. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e48661]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e48661]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e48661]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e48661]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@796c7b69]
DEBUG: audit - 92. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 92. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 92. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@796c7b69]
DEBUG: audit - 92. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@796c7b69] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 92. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 92. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgksopgkwofkwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 93. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  93 (1)
DEBUG: audit - 93. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1f88f4aa] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f88f4aa] read-only
DEBUG: audit - 93. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 93. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f88f4aa] to manual commit
DEBUG: audit - 93. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49971e63]
DEBUG: audit - 93. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f88f4aa] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 93. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 93. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@979ab53  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 93. PreparedStatement.setString(1, "admispgksopgkwofkwe") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgksopgkwofkwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
93. select * from member where memberid = 'admispgksopgkwofkwe'  {executed in 0 msec}
DEBUG: audit - 93. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 93. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 93. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@510c3372  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 93. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@20994b36  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 93. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 93. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 93. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 93. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1f88f4aa  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 93. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 93. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 93. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49971e63]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49971e63]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49971e63]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49971e63]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1f88f4aa]
DEBUG: audit - 93. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 93. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 93. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f88f4aa]
DEBUG: audit - 93. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f88f4aa] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 93. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 93. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgksopgkwofkwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 94. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  94 (1)
DEBUG: audit - 94. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@64687d2c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64687d2c] read-only
DEBUG: audit - 94. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 94. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64687d2c] to manual commit
DEBUG: audit - 94. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f7bc38e]
DEBUG: audit - 94. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64687d2c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 94. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 94. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@7e9097f9  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 94. PreparedStatement.setString(1, "admispgksopgkwofkwe") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgksopgkwofkwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
94. select * from member where memberid = 'admispgksopgkwofkwe'  {executed in 0 msec}
DEBUG: audit - 94. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 94. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 94. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5936041a  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 94. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@68e0db01  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 94. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 94. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 94. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 94. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@64687d2c  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 94. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 94. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 94. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f7bc38e]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f7bc38e]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f7bc38e]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f7bc38e]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@64687d2c]
DEBUG: audit - 94. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 94. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 94. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64687d2c]
DEBUG: audit - 94. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64687d2c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 94. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 94. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgksopgkwofkwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 95. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  95 (1)
DEBUG: audit - 95. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3dd65656] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3dd65656] read-only
DEBUG: audit - 95. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 95. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3dd65656] to manual commit
DEBUG: audit - 95. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db0b9cc]
DEBUG: audit - 95. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3dd65656] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 95. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 95. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6739f49f  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 95. PreparedStatement.setString(1, "admispgksopgkwofkwe") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgksopgkwofkwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
95. select * from member where memberid = 'admispgksopgkwofkwe'  {executed in 1 msec}
DEBUG: audit - 95. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 95. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 95. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@68527ac8  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 95. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@70b4d0d7  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 95. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 95. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 95. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 95. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3dd65656  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 95. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 95. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 95. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db0b9cc]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db0b9cc]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db0b9cc]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db0b9cc]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3dd65656]
DEBUG: audit - 95. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 95. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 95. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3dd65656]
DEBUG: audit - 95. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3dd65656] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 95. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 95. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admispgksopgkwofkwe
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 96. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  96 (1)
DEBUG: audit - 96. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@bfa2eea] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@bfa2eea] read-only
DEBUG: audit - 96. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 96. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@bfa2eea] to manual commit
DEBUG: audit - 96. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3954153b]
DEBUG: audit - 96. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@bfa2eea] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 96. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 96. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@785a5fb6  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 96. PreparedStatement.setString(1, "admispgksopgkwofkwe") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admispgksopgkwofkwe(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
96. select * from member where memberid = 'admispgksopgkwofkwe'  {executed in 1 msec}
DEBUG: audit - 96. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 96. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 96. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@220da329  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 96. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3b69879e  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 96. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 96. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 96. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 96. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@bfa2eea  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 96. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 96. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 96. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3954153b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3954153b]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3954153b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3954153b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@bfa2eea]
DEBUG: audit - 96. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 96. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 96. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@bfa2eea]
DEBUG: audit - 96. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@bfa2eea] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 96. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 96. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;k
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 97. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  97 (1)
DEBUG: audit - 97. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4a7169b9] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a7169b9] read-only
DEBUG: audit - 97. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 97. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a7169b9] to manual commit
DEBUG: audit - 97. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4042e911]
DEBUG: audit - 97. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a7169b9] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 97. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 97. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3e349e3c  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 97. PreparedStatement.setString(1, "sdf;k") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;k(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
97. select * from member where memberid = 'sdf;k'  {executed in 1 msec}
DEBUG: audit - 97. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 97. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 97. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7fc904e2  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 97. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2814706b  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 97. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 97. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 97. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 97. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4a7169b9  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 97. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 97. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 97. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4042e911]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4042e911]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4042e911]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4042e911]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4a7169b9]
DEBUG: audit - 97. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 97. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 97. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a7169b9]
DEBUG: audit - 97. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a7169b9] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 97. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 97. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;k
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 98. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  98 (1)
DEBUG: audit - 98. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3aa2f36c] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3aa2f36c] read-only
DEBUG: audit - 98. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 98. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3aa2f36c] to manual commit
DEBUG: audit - 98. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf9964a]
DEBUG: audit - 98. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3aa2f36c] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 98. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 98. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6ea893f5  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 98. PreparedStatement.setString(1, "sdf;k") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;k(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
98. select * from member where memberid = 'sdf;k'  {executed in 0 msec}
DEBUG: audit - 98. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 98. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 98. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@43bc34df  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 98. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6450b124  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 98. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 98. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 98. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 98. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3aa2f36c  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 98. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 98. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 98. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf9964a]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf9964a]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf9964a]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf9964a]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3aa2f36c]
DEBUG: audit - 98. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 98. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 98. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3aa2f36c]
DEBUG: audit - 98. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3aa2f36c] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 98. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 98. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;k
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 99. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  99 (1)
DEBUG: audit - 99. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6c2c50ef] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6c2c50ef] read-only
DEBUG: audit - 99. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 99. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6c2c50ef] to manual commit
DEBUG: audit - 99. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef89c42]
DEBUG: audit - 99. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6c2c50ef] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 99. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 99. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@b6edc33  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 99. PreparedStatement.setString(1, "sdf;k") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;k(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
99. select * from member where memberid = 'sdf;k'  {executed in 0 msec}
DEBUG: audit - 99. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 99. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 99. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5cb5e99  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 99. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@1fcbc8ee  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 99. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 99. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 99. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 99. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6c2c50ef  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 99. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 99. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 99. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef89c42]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef89c42]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef89c42]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef89c42]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6c2c50ef]
DEBUG: audit - 99. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 99. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 99. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6c2c50ef]
DEBUG: audit - 99. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6c2c50ef] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 99. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 99. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;k
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 100. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  100 (1)
DEBUG: audit - 100. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@696337a7] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@696337a7] read-only
DEBUG: audit - 100. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 100. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@696337a7] to manual commit
DEBUG: audit - 100. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62f60630]
DEBUG: audit - 100. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@696337a7] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 100. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 100. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1721acb6  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 100. PreparedStatement.setString(1, "sdf;k") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;k(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
100. select * from member where memberid = 'sdf;k'  {executed in 0 msec}
DEBUG: audit - 100. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 100. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 100. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@678f7ffa  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 100. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@351a32bd  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 100. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 100. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 100. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 100. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@696337a7  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 100. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 100. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 100. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62f60630]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62f60630]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62f60630]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62f60630]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@696337a7]
DEBUG: audit - 100. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 100. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 100. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@696337a7]
DEBUG: audit - 100. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@696337a7] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 100. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 100. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ks
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 101. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  101 (1)
DEBUG: audit - 101. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7aaf5564] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7aaf5564] read-only
DEBUG: audit - 101. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 101. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7aaf5564] to manual commit
DEBUG: audit - 101. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20dc43a1]
DEBUG: audit - 101. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7aaf5564] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 101. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 101. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@77c29e0c  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 101. PreparedStatement.setString(1, "sdf;ks") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ks(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
101. select * from member where memberid = 'sdf;ks'  {executed in 0 msec}
DEBUG: audit - 101. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 101. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 101. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7746e1e5  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 101. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@35c575e7  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 101. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 101. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 101. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 101. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7aaf5564  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 101. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 101. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 101. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20dc43a1]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20dc43a1]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20dc43a1]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20dc43a1]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7aaf5564]
DEBUG: audit - 101. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 101. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 101. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7aaf5564]
DEBUG: audit - 101. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7aaf5564] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 101. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 101. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 102. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  102 (1)
DEBUG: audit - 102. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@685b3d45] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@685b3d45] read-only
DEBUG: audit - 102. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 102. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@685b3d45] to manual commit
DEBUG: audit - 102. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210f54c0]
DEBUG: audit - 102. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@685b3d45] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 102. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 102. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@5f68cf77  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 102. PreparedStatement.setString(1, "sdf;ksdgk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
102. select * from member where memberid = 'sdf;ksdgk'  {executed in 0 msec}
DEBUG: audit - 102. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 102. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 102. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@6ee870ca  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 102. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@351a9083  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 102. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 102. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 102. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 102. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@685b3d45  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 102. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 102. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 102. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210f54c0]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210f54c0]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210f54c0]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210f54c0]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@685b3d45]
DEBUG: audit - 102. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 102. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 102. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@685b3d45]
DEBUG: audit - 102. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@685b3d45] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 102. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 102. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 103. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  103 (1)
DEBUG: audit - 103. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@43cd5843] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43cd5843] read-only
DEBUG: audit - 103. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 103. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43cd5843] to manual commit
DEBUG: audit - 103. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a47343a]
DEBUG: audit - 103. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43cd5843] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 103. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 103. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@167b7963  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 103. PreparedStatement.setString(1, "sdf;ksdgk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
103. select * from member where memberid = 'sdf;ksdgk'  {executed in 0 msec}
DEBUG: audit - 103. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 103. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 103. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3f5d34af  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 103. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@5c58319a  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 103. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 103. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 103. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 103. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@43cd5843  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 103. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 103. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 103. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a47343a]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a47343a]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a47343a]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a47343a]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@43cd5843]
DEBUG: audit - 103. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 103. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 103. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43cd5843]
DEBUG: audit - 103. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43cd5843] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 103. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 103. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 104. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  104 (1)
DEBUG: audit - 104. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1f886ae3] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f886ae3] read-only
DEBUG: audit - 104. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 104. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f886ae3] to manual commit
DEBUG: audit - 104. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655d09b4]
DEBUG: audit - 104. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f886ae3] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 104. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 104. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@62743d97  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 104. PreparedStatement.setString(1, "sdf;ksdgk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
104. select * from member where memberid = 'sdf;ksdgk'  {executed in 1 msec}
DEBUG: audit - 104. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 104. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 104. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3e779c48  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 104. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@33ea329b  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 104. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 104. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 104. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 104. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1f886ae3  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 104. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 104. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 104. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655d09b4]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655d09b4]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655d09b4]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655d09b4]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1f886ae3]
DEBUG: audit - 104. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 104. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 104. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f886ae3]
DEBUG: audit - 104. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f886ae3] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 104. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 104. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgks
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 105. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  105 (1)
DEBUG: audit - 105. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@61a7febf] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@61a7febf] read-only
DEBUG: audit - 105. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 105. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@61a7febf] to manual commit
DEBUG: audit - 105. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49927318]
DEBUG: audit - 105. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@61a7febf] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 105. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 105. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6489883a  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 105. PreparedStatement.setString(1, "sdf;ksdgks") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgks(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
105. select * from member where memberid = 'sdf;ksdgks'  {executed in 0 msec}
DEBUG: audit - 105. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 105. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 105. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3a05c012  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 105. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@60d57ef9  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 105. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 105. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 105. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 105. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@61a7febf  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 105. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 105. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 105. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49927318]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49927318]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49927318]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49927318]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@61a7febf]
DEBUG: audit - 105. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 105. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 105. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@61a7febf]
DEBUG: audit - 105. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@61a7febf] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 105. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 105. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksg
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 106. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  106 (1)
DEBUG: audit - 106. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@4b3c5a1b] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b3c5a1b] read-only
DEBUG: audit - 106. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 106. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b3c5a1b] to manual commit
DEBUG: audit - 106. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61310b25]
DEBUG: audit - 106. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b3c5a1b] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 106. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 106. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@59c8cff5  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 106. PreparedStatement.setString(1, "sdf;ksdgksg") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksg(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
106. select * from member where memberid = 'sdf;ksdgksg'  {executed in 4 msec}
DEBUG: audit - 106. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 106. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 106. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@700dba55  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 106. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@198cef52  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 106. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 106. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 106. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 106. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@4b3c5a1b  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 106. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 106. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 106. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61310b25]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61310b25]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61310b25]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61310b25]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@4b3c5a1b]
DEBUG: audit - 106. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 106. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 106. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b3c5a1b]
DEBUG: audit - 106. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b3c5a1b] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 106. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 106. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 107. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  107 (1)
DEBUG: audit - 107. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@2494be48] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2494be48] read-only
DEBUG: audit - 107. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 107. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2494be48] to manual commit
DEBUG: audit - 107. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ecb0198]
DEBUG: audit - 107. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2494be48] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 107. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 107. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@28e52c6  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 107. PreparedStatement.setString(1, "sdf;ksdgksgpk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
107. select * from member where memberid = 'sdf;ksdgksgpk'  {executed in 0 msec}
DEBUG: audit - 107. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 107. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 107. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@369da21  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 107. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6548dc15  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 107. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 107. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 107. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 107. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@2494be48  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 107. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 107. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 107. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ecb0198]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ecb0198]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ecb0198]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ecb0198]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@2494be48]
DEBUG: audit - 107. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 107. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 107. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2494be48]
DEBUG: audit - 107. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2494be48] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 107. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 107. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 108. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  108 (1)
DEBUG: audit - 108. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6d75be1f] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6d75be1f] read-only
DEBUG: audit - 108. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 108. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6d75be1f] to manual commit
DEBUG: audit - 108. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4768af7f]
DEBUG: audit - 108. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6d75be1f] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 108. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 108. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@468258e  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 108. PreparedStatement.setString(1, "sdf;ksdgksgpkw") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkw(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
108. select * from member where memberid = 'sdf;ksdgksgpkw'  {executed in 1 msec}
DEBUG: audit - 108. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 108. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 108. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@44ade65a  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 108. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@463caae7  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 108. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 108. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 108. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 108. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6d75be1f  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 108. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 108. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 108. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4768af7f]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4768af7f]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4768af7f]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4768af7f]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6d75be1f]
DEBUG: audit - 108. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 108. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 108. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6d75be1f]
DEBUG: audit - 108. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6d75be1f] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 108. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 108. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkw
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 109. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  109 (1)
DEBUG: audit - 109. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@6da83d15] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6da83d15] read-only
DEBUG: audit - 109. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 109. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6da83d15] to manual commit
DEBUG: audit - 109. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105aebd7]
DEBUG: audit - 109. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6da83d15] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 109. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 109. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@ef77d62  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 109. PreparedStatement.setString(1, "sdf;ksdgksgpkw") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkw(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
109. select * from member where memberid = 'sdf;ksdgksgpkw'  {executed in 0 msec}
DEBUG: audit - 109. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 109. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 109. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@221bb93c  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 109. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6558eafb  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: resultset - 109. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwf
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
DEBUG: resultset - 109. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
INFO : connection - 110. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: connection - open connections:  109 110 (2)
DEBUG: resultset - 109. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 110. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@317468c8] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@317468c8] read-only
DEBUG: audit - 109. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@6da83d15  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 110. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 109. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 110. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@317468c8] to manual commit
DEBUG: audit - 109. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 110. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: audit - 109. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b2a364c]
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105aebd7]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105aebd7]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105aebd7]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105aebd7]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@6da83d15]
DEBUG: audit - 110. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@317468c8] will be managed by Spring
DEBUG: audit - 109. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 109. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 110. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 109. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6da83d15]
DEBUG: audit - 110. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@532dbff3  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 109. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6da83d15] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 109. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  110 (1)
DEBUG: audit - 110. PreparedStatement.setString(1, "sdf;ksdgksgpkwf") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwf(String)
DEBUG: audit - 109. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
110. select * from member where memberid = 'sdf;ksdgksgpkwf'  {executed in 0 msec}
DEBUG: audit - 110. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 110. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 110. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@418dbf76  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 110. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@3b6f795d  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 110. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 110. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 110. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 110. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@317468c8  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 110. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 110. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 110. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b2a364c]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b2a364c]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b2a364c]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b2a364c]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@317468c8]
DEBUG: audit - 110. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 110. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 110. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@317468c8]
DEBUG: audit - 110. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@317468c8] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 110. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 110. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwep
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 111. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  111 (1)
DEBUG: audit - 111. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@69a6a8c2] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@69a6a8c2] read-only
DEBUG: audit - 111. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 111. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@69a6a8c2] to manual commit
DEBUG: audit - 111. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af76904]
DEBUG: audit - 111. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@69a6a8c2] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 111. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 111. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@548ad693  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 111. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwep") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwep(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
111. select * from member where memberid = 'sdf;ksdgksgpkwfwep'  {executed in 0 msec}
DEBUG: audit - 111. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 111. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 111. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@8368478  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 111. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@39387333  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 111. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 111. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 111. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 111. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@69a6a8c2  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 111. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 111. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 111. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af76904]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af76904]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af76904]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af76904]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@69a6a8c2]
DEBUG: audit - 111. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 111. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 111. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@69a6a8c2]
DEBUG: audit - 111. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@69a6a8c2] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 111. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 111. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 112. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  112 (1)
DEBUG: audit - 112. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@144fd3a9] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@144fd3a9] read-only
DEBUG: audit - 112. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 112. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@144fd3a9] to manual commit
DEBUG: audit - 112. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5028c140]
DEBUG: audit - 112. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@144fd3a9] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 112. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 112. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@a25d858  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 112. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
112. select * from member where memberid = 'sdf;ksdgksgpkwfwepofk'  {executed in 5 msec}
DEBUG: audit - 112. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 112. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 112. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@609d902e  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 112. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@76a97fbc  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 112. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 112. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 112. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 112. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@144fd3a9  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 112. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 112. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 112. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5028c140]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5028c140]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5028c140]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5028c140]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@144fd3a9]
DEBUG: audit - 112. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 112. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 112. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@144fd3a9]
DEBUG: audit - 112. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@144fd3a9] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 112. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 112. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofk
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 113. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  113 (1)
DEBUG: audit - 113. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@29ece778] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29ece778] read-only
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
DEBUG: audit - 113. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 113. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29ece778] to manual commit
DEBUG: audit - 113. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab7ef57]
DEBUG: audit - 113. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29ece778] will be managed by Spring
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
INFO : connection - 114. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 113. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 113. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@a3c32e0  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 113. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
113. select * from member where memberid = 'sdf;ksdgksgpkwfwepofk'  {executed in 0 msec}
DEBUG: audit - 113. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 113. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: connection - open connections:  113 114 (2)
DEBUG: audit - 113. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@4425c3f8  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 114. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: resultset - 113. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@113d417c  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@8840328] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8840328] read-only
DEBUG: resultset - 113. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 114. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 114. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8840328] to manual commit
DEBUG: debug - driver name is Oracle JDBC driver
DEBUG: resultset - 113. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: audit - 114. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f9c33a]
DEBUG: resultset - 113. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 114. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8840328] will be managed by Spring
DEBUG: audit - 113. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@29ece778  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 113. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@3ec7b8c5  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 114. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 113. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 114. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@e1e5867  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 113. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab7ef57]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab7ef57]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab7ef57]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab7ef57]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@29ece778]
DEBUG: audit - 113. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 114. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofk(String)
INFO : connection - 115. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: audit - 113. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: connection - open connections:  113 114 115 (3)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
114. select * from member where memberid = 'sdf;ksdgksgpkwfwepofk'  {executed in 1 msec}
DEBUG: audit - 113. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29ece778]
DEBUG: audit - 114. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: audit - 113. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29ece778] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
DEBUG: resultset - 114. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
INFO : connection - 113. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  114 115 (2)
DEBUG: audit - 113. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: audit - 114. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@262b97cf  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: resultset - 114. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2d406023  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: resultset - 114. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 115. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3cc2ad3f] for JDBC transaction
DEBUG: resultset - 114. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3cc2ad3f] read-only
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 114. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 115. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 114. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@8840328  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 114. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 115. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3cc2ad3f] to manual commit
DEBUG: audit - 115. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: audit - 114. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a23ac5]
DEBUG: audit - 114. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f9c33a]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f9c33a]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f9c33a]
DEBUG: audit - 115. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f9c33a]
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3cc2ad3f] will be managed by Spring
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@8840328]
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 114. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 114. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 114. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8840328]
DEBUG: audit - 114. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8840328] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 114. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  115 (1)
DEBUG: audit - 115. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 114. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: audit - 115. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@4bdaf94a  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: audit - 115. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
115. select * from member where memberid = 'sdf;ksdgksgpkwfwepofk'  {executed in 1 msec}
DEBUG: audit - 115. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 115. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 115. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@62581e5b  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 115. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@67a964c7  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 115. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 115. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 115. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 115. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3cc2ad3f  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 115. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@384628ab  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 115. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 115. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a23ac5]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a23ac5]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a23ac5]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a23ac5]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3cc2ad3f]
DEBUG: audit - 115. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 115. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 115. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3cc2ad3f]
DEBUG: audit - 115. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3cc2ad3f] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 115. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 115. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 116. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  116 (1)
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: audit - 116. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@60593052] for JDBC transaction
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@60593052] read-only
DEBUG: audit - 116. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofk
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: audit - 116. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: debug - driver name is Oracle JDBC driver
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@60593052] to manual commit
INFO : connection - 117. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  116 117 (2)
DEBUG: audit - 116. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f71fccb]
DEBUG: audit - 117. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7b21635f] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b21635f] read-only
DEBUG: audit - 117. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 116. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: audit - 117. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@60593052] will be managed by Spring
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b21635f] to manual commit
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 117. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: audit - 116. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bc9169f]
DEBUG: audit - 116. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1cbbab09  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 116. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofk(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
116. select * from member where memberid = 'sdf;ksdgksgpkwfwepofk'  {executed in 1 msec}
DEBUG: audit - 116. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: audit - 117. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b21635f] will be managed by Spring
DEBUG: resultset - 116. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 116. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@3549c36c  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 117. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 116. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@452ee6aa  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 117. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6537a9b3  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 116. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 117. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofk") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofk(String)
DEBUG: resultset - 116. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 116. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
117. select * from member where memberid = 'sdf;ksdgksgpkwfwepofk'  {executed in 0 msec}
DEBUG: audit - 116. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@60593052  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 117. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: audit - 116. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@384628ab  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: resultset - 117. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 116. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 117. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@157c05d1  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 116. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f71fccb]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f71fccb]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f71fccb]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f71fccb]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@60593052]
DEBUG: resultset - 117. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@56c2940f  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 116. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: resultset - 117. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 116. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 116. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@60593052]
DEBUG: audit - 116. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@60593052] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 116. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  117 (1)
DEBUG: audit - 116. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: resultset - 117. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: resultset - 117. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 117. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7b21635f  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 117. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 117. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 117. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bc9169f]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bc9169f]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bc9169f]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bc9169f]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7b21635f]
DEBUG: audit - 117. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 117. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 117. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b21635f]
DEBUG: audit - 117. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b21635f] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 117. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 117. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofkwipoefj
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 118. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  118 (1)
DEBUG: audit - 118. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@200607c8] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@200607c8] read-only
DEBUG: audit - 118. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 118. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@200607c8] to manual commit
DEBUG: audit - 118. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65071213]
DEBUG: audit - 118. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@200607c8] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 118. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 118. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6dfb477c  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 118. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofkwipoefj") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofkwipoefj(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
118. select * from member where memberid = 'sdf;ksdgksgpkwfwepofkwipoefj'  {executed in 0 msec}
DEBUG: audit - 118. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 118. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 118. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7dd3354c  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 118. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@2019276f  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 118. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 118. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 118. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 118. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@200607c8  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 118. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 118. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 118. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65071213]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65071213]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65071213]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65071213]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@200607c8]
DEBUG: audit - 118. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 118. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 118. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@200607c8]
DEBUG: audit - 118. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@200607c8] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 118. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 118. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofkwipoefj
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 119. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  119 (1)
DEBUG: audit - 119. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3b4a5740] for JDBC transaction
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3b4a5740] read-only
DEBUG: audit - 119. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofkwipoefj
DEBUG: audit - 119. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3b4a5740] to manual commit
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: audit - 119. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: debug - driver name is Oracle JDBC driver
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@526a5fd]
INFO : connection - 120. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  119 120 (2)
DEBUG: audit - 119. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3b4a5740] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 119. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 120. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@78f9924b] for JDBC transaction
DEBUG: audit - 119. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6999edc3  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@78f9924b] read-only
DEBUG: audit - 120. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 119. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofkwipoefj") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofkwipoefj(String)
DEBUG: audit - 120. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@78f9924b] to manual commit
DEBUG: audit - 120. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd0ec5b]
DEBUG: audit - 120. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@78f9924b] will be managed by Spring
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
119. select * from member where memberid = 'sdf;ksdgksgpkwfwepofkwipoefj'  {executed in 1 msec}
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 119. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 119. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 120. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 119. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@57e7  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 119. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@30b90357  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 120. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@10504512  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 119. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 120. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofkwipoefj") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofkwipoefj(String)
DEBUG: resultset - 119. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 119. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
120. select * from member where memberid = 'sdf;ksdgksgpkwfwepofkwipoefj'  {executed in 0 msec}
DEBUG: audit - 120. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: audit - 119. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3b4a5740  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: resultset - 120. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 119. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 120. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@248fe699  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 119. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: resultset - 120. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6ef77467  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 119. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@526a5fd]
DEBUG: resultset - 120. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@526a5fd]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@526a5fd]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@526a5fd]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3b4a5740]
DEBUG: audit - 119. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: resultset - 120. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: audit - 119. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: resultset - 120. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 119. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3b4a5740]
DEBUG: audit - 120. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@78f9924b  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 119. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3b4a5740] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
DEBUG: audit - 120. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@384628ab  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
INFO : connection - 119. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: audit - 120. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: connection - open connections:  120 (1)
DEBUG: audit - 119. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: audit - 120. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd0ec5b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd0ec5b]
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd0ec5b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd0ec5b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@78f9924b]
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: audit - 120. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 120. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 120. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@78f9924b]
DEBUG: audit - 120. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@78f9924b] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 120. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 120. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofkwipoefj
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 121. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: connection - open connections:  121 (1)
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: audit - 121. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3727be73] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3727be73] read-only
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofkwipoefj
DEBUG: audit - 121. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 121. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3727be73] to manual commit
DEBUG: audit - 121. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd1550]
DEBUG: audit - 121. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3727be73] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: debug - driver name is Oracle JDBC driver
DEBUG: audit - 121. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
INFO : connection - 122. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: audit - 121. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@2b2c83a0  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 121. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofkwipoefj") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofkwipoefj(String)
DEBUG: connection - open connections:  121 122 (2)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
121. select * from member where memberid = 'sdf;ksdgksgpkwfwepofkwipoefj'  {executed in 0 msec}
DEBUG: audit - 122. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@438013a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@438013a] read-only
DEBUG: audit - 121. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: audit - 122. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: resultset - 121. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 122. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: audit - 121. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@21f26490  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@438013a] to manual commit
DEBUG: audit - 122. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: resultset - 121. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6c58826b  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6046160]
DEBUG: resultset - 121. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: audit - 122. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@438013a] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 122. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: resultset - 121. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: audit - 122. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@40766d11  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 121. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 122. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofkwipoefj") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofkwipoefj(String)
DEBUG: audit - 121. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3727be73  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 121. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@384628ab  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 121. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
122. select * from member where memberid = 'sdf;ksdgksgpkwfwepofkwipoefj'  {executed in 1 msec}
DEBUG: audit - 121. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd1550]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd1550]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd1550]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd1550]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3727be73]
DEBUG: audit - 122. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 122. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 121. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 122. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@40385f4  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 121. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: resultset - 122. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@21a9eb75  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: audit - 121. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3727be73]
DEBUG: audit - 121. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: resultset - 122. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3727be73] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 121. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  122 (1)
DEBUG: audit - 121. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: resultset - 122. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 122. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 122. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@438013a  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 122. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 122. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: audit - 122. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6046160]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6046160]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6046160]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6046160]
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@438013a]
DEBUG: audit - 122. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 122. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 122. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@438013a]
DEBUG: audit - 122. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@438013a] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 122. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 122. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofkwipoefj
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 123. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  123 (1)
DEBUG: audit - 123. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7c2c3ccd] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7c2c3ccd] read-only
DEBUG: audit - 123. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 123. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7c2c3ccd] to manual commit
DEBUG: audit - 123. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@176caa9a]
DEBUG: audit - 123. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7c2c3ccd] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 123. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 123. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@67119e6  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 123. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofkwipoefj") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofkwipoefj(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
123. select * from member where memberid = 'sdf;ksdgksgpkwfwepofkwipoefj'  {executed in 1 msec}
DEBUG: audit - 123. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 123. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 123. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1ba697b1  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 123. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@696cc625  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 123. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 123. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 123. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 123. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7c2c3ccd  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 123. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 123. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 123. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@176caa9a]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@176caa9a]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@176caa9a]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@176caa9a]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7c2c3ccd]
DEBUG: audit - 123. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 123. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 123. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7c2c3ccd]
DEBUG: audit - 123. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7c2c3ccd] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 123. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 123. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofkwipoefj
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 124. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  124 (1)
DEBUG: audit - 124. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@54416a2] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54416a2] read-only
DEBUG: audit - 124. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 124. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54416a2] to manual commit
DEBUG: audit - 124. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79e5bb0d]
DEBUG: audit - 124. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54416a2] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 124. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 124. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@2de5f72b  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 124. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofkwipoefj") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofkwipoefj(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
124. select * from member where memberid = 'sdf;ksdgksgpkwfwepofkwipoefj'  {executed in 0 msec}
DEBUG: audit - 124. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 124. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 124. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@8b10533  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 124. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@5c58fafb  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 124. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 124. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 124. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 124. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@54416a2  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 124. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 124. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 124. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79e5bb0d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79e5bb0d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79e5bb0d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79e5bb0d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@54416a2]
DEBUG: audit - 124. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 124. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 124. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54416a2]
DEBUG: audit - 124. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54416a2] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 124. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 124. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofkwipoefjwr
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 125. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  125 (1)
DEBUG: audit - 125. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7ce9d6c4] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ce9d6c4] read-only
DEBUG: audit - 125. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 125. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ce9d6c4] to manual commit
DEBUG: audit - 125. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e560ba]
DEBUG: audit - 125. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ce9d6c4] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 125. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 125. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6ecedbed  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 125. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofkwipoefjwr") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofkwipoefjwr(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
125. select * from member where memberid = 'sdf;ksdgksgpkwfwepofkwipoefjwr'  {executed in 1 msec}
DEBUG: audit - 125. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 125. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 125. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5ca37f06  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 125. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@17082498  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 125. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 125. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 125. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 125. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7ce9d6c4  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 125. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 125. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 125. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e560ba]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e560ba]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e560ba]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e560ba]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7ce9d6c4]
DEBUG: audit - 125. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 125. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 125. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ce9d6c4]
DEBUG: audit - 125. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ce9d6c4] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 125. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 125. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofkwipoefjwr
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 126. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  126 (1)
DEBUG: audit - 126. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3e950043] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e950043] read-only
DEBUG: audit - 126. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 126. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e950043] to manual commit
DEBUG: audit - 126. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f37077b]
DEBUG: audit - 126. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e950043] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 126. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 126. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@36b744dd  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 126. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofkwipoefjwr") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofkwipoefjwr(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
126. select * from member where memberid = 'sdf;ksdgksgpkwfwepofkwipoefjwr'  {executed in 1 msec}
DEBUG: audit - 126. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 126. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 126. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@20b6dd50  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 126. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@677d0ae2  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 126. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 126. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 126. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 126. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3e950043  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 126. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 126. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 126. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f37077b]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f37077b]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f37077b]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f37077b]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3e950043]
DEBUG: audit - 126. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 126. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 126. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e950043]
DEBUG: audit - 126. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e950043] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 126. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 126. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : sdf;ksdgksgpkwfwepofkwipoefjwr
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 127. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  127 (1)
DEBUG: audit - 127. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@73b31f07] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73b31f07] read-only
DEBUG: audit - 127. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 127. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73b31f07] to manual commit
DEBUG: audit - 127. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b114af3]
DEBUG: audit - 127. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73b31f07] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 127. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 127. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1c1605f8  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 127. PreparedStatement.setString(1, "sdf;ksdgksgpkwfwepofkwipoefjwr") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: sdf;ksdgksgpkwfwepofkwipoefjwr(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
127. select * from member where memberid = 'sdf;ksdgksgpkwfwepofkwipoefjwr'  {executed in 0 msec}
DEBUG: audit - 127. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 127. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 127. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@77366a5a  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 127. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@56d1f09d  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 127. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 127. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 127. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 127. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@73b31f07  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 127. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 127. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 127. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b114af3]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b114af3]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b114af3]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b114af3]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@73b31f07]
DEBUG: audit - 127. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 127. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 127. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73b31f07]
DEBUG: audit - 127. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73b31f07] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 127. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 127. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 128. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  128 (1)
DEBUG: audit - 128. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@73c761fc] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73c761fc] read-only
DEBUG: audit - 128. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 128. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73c761fc] to manual commit
DEBUG: audit - 128. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b0185f]
DEBUG: audit - 128. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73c761fc] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 128. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 128. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@49e655e5  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 128. PreparedStatement.setString(1, "admi") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
128. select * from member where memberid = 'admi'  {executed in 2 msec}
DEBUG: audit - 128. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 128. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 128. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@1e615a4  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 128. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@45509727  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 128. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 128. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 128. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 128. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@73c761fc  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 128. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 128. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 128. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b0185f]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b0185f]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b0185f]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b0185f]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@73c761fc]
DEBUG: audit - 128. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 128. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 128. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73c761fc]
DEBUG: audit - 128. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73c761fc] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 128. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 128. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admin
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 129. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  129 (1)
DEBUG: audit - 129. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@7febd4ac] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7febd4ac] read-only
DEBUG: audit - 129. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 129. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7febd4ac] to manual commit
DEBUG: audit - 129. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@593ad967]
DEBUG: audit - 129. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7febd4ac] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 129. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 129. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@235c0144  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 129. PreparedStatement.setString(1, "admin") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admin(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
129. select * from member where memberid = 'admin'  {executed in 1 msec}
DEBUG: audit - 129. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 129. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@233ff37  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@d4deff7  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.next() returned true  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.getString(MEMBERID) returned admin  sun.reflect.GeneratedMethodAccessor78.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor77.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.getString(PASSWORD) returned $2a$10$R1XcilPpsC6eClvR6RtkmOK7cN5yvhfIntRVH9ifJBsBqQmnNCNK2  sun.reflect.GeneratedMethodAccessor78.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor77.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.getString(MEMBERNAME) returned 관리자  sun.reflect.GeneratedMethodAccessor78.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor77.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.getString(GENDER) returned F  sun.reflect.GeneratedMethodAccessor78.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor77.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.getInt(AGE) returned 49  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 129. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor77.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.getString(EMAIL) returned admin@naver.com  sun.reflect.GeneratedMethodAccessor78.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor77.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.getString(PHONE) returned 01012345678  sun.reflect.GeneratedMethodAccessor78.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor77.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.getString(ADDRESS) returned 서울시 강남구 버거킹 하하  sun.reflect.GeneratedMethodAccessor78.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor77.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.getDate(ENROLLDATE) returned 2019-01-28  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 129. ResultSet.wasNull() returned false  sun.reflect.GeneratedMethodAccessor77.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.getString(hobby) returned 운동,게임,여행  sun.reflect.GeneratedMethodAccessor78.invoke(null:-1)
DEBUG: resultset - 129. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 1
DEBUG: resultset - 129. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 129. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@7febd4ac  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 129. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 129. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 129. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@593ad967]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@593ad967]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@593ad967]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@593ad967]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@7febd4ac]
DEBUG: audit - 129. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 129. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 129. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7febd4ac]
DEBUG: audit - 129. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7febd4ac] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 129. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 129. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/memberEnroll.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - 회원등록페이지 요청
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 130. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  130 (1)
DEBUG: audit - 130. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@3d4e929a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3d4e929a] read-only
DEBUG: audit - 130. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 130. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3d4e929a] to manual commit
DEBUG: audit - 130. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2547376d]
DEBUG: audit - 130. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3d4e929a] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 130. PreparedStatement.new PreparedStatement returned   sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 130. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3421e3bb  sun.reflect.GeneratedMethodAccessor65.invoke(null:-1)
DEBUG: audit - 130. PreparedStatement.setString(1, "admi") returned   sun.reflect.GeneratedMethodAccessor66.invoke(null:-1)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
130. select * from member where memberid = 'admi'  {executed in 0 msec}
DEBUG: audit - 130. PreparedStatement.execute() returned true  sun.reflect.GeneratedMethodAccessor67.invoke(null:-1)
DEBUG: resultset - 130. ResultSet.new ResultSet returned   sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: audit - 130. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7db27de7  sun.reflect.GeneratedMethodAccessor68.invoke(null:-1)
DEBUG: resultset - 130. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@6152d163  sun.reflect.GeneratedMethodAccessor69.invoke(null:-1)
DEBUG: resultset - 130. ResultSet.getType() returned 1003  sun.reflect.GeneratedMethodAccessor70.invoke(null:-1)
DEBUG: resultset - 130. ResultSet.next() returned false  sun.reflect.GeneratedMethodAccessor61.invoke(null:-1)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 130. ResultSet.close() returned null  sun.reflect.GeneratedMethodAccessor71.invoke(null:-1)
DEBUG: audit - 130. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@3d4e929a  sun.reflect.GeneratedMethodAccessor72.invoke(null:-1)
DEBUG: audit - 130. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@16c4a5cc  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 130. PreparedStatement.isClosed() returned false  sun.reflect.GeneratedMethodAccessor73.invoke(null:-1)
DEBUG: audit - 130. PreparedStatement.close() returned   sun.reflect.GeneratedMethodAccessor74.invoke(null:-1)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2547376d]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2547376d]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2547376d]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2547376d]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@3d4e929a]
DEBUG: audit - 130. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 130. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 130. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3d4e929a]
DEBUG: audit - 130. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3d4e929a] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 130. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 130. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
INFO : XmlWebApplicationContext - Closing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 17:03:02 KST 2019]; parent: Root WebApplicationContext
INFO : XmlWebApplicationContext - Closing Root WebApplicationContext: startup date [Thu Feb 07 17:02:59 KST 2019]; root of context hierarchy
INFO : ContextLoader - Root WebApplicationContext: initialization started
INFO : XmlWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Thu Feb 07 17:39:24 KST 2019]; root of context hierarchy
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/root-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/security-context.xml]
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@6f5b766]
DEBUG: LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
DEBUG: SqlSessionFactoryBean - Parsed configuration file: 'class path resource [mybatis-config.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\board\board-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\demo\demo-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\member\member-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\memo\memo-mapper.xml]'
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : ContextLoader - Root WebApplicationContext: initialization completed in 6655 ms
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization started
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.active]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.default]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
INFO : XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 17:39:30 KST 2019]; parent: Root WebApplicationContext
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/servlet-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/aspect-context.xml]
INFO : AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@1c37765e]
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object com.kh.spring.common.aop.AroundAdviceAspect.aroundAdvice(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.LoginLoggerAdvice.advice(org.aspectj.lang.JoinPoint,java.lang.Object)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceDelete(org.aspectj.lang.JoinPoint)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceInsert(org.aspectj.lang.JoinPoint)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardList.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.selectBoardList(int,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardForm.do]}" onto public void com.kh.spring.board.controller.BoardController.boardForm()
INFO : RequestMappingHandlerMapping - Mapped "{[/board/insertBoard.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.insertBoard(com.kh.spring.board.model.vo.Board,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardView.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.boardView(org.springframework.web.servlet.ModelAndView,int)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/fileDownload.do]}" onto public void com.kh.spring.board.controller.BoardController.fileDownload(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo()
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo1.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo1(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo2.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo2(org.springframework.ui.Model,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo3.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo3(org.springframework.ui.Model,com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/insertDev.do],methods=[POST]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.insertDev(com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demoList.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.selectDemoList(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/deleteDev.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.deleteDemo(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.kh.spring.HomeController.home(java.util.Locale,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnroll.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnrollEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogin.do],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogout.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberView.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberUpdateEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/checkDuplicate.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/memo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/insertMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/deleteMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 17:39:30 KST 2019]; parent: Root WebApplicationContext
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 17:39:30 KST 2019]; parent: Root WebApplicationContext
INFO : SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0'
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 17:39:30 KST 2019]; parent: Root WebApplicationContext
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'boardServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.board.model.service.BoardServiceImpl@d2b5437]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'demoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.demo.model.service.DemoServiceImpl@9921484]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.model.service.MemberServiceImpl@57a07a98]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberController' with 0 common interceptors and 2 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.controller.MemberController@3921c2ef]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.util.Map com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.model.service.MemoServiceImpl@3e191e1c]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoController' with 0 common interceptors and 4 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.controller.MemoController@5909b0e0]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization completed in 11895 ms
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/memberEnroll.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - 회원등록페이지 요청
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admi
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - ... log4jdbc initializing ...
DEBUG: debug -   log4jdbc.properties not found on classpath
DEBUG: debug - x log4jdbc.debug.stack.prefix is not defined
DEBUG: debug - x log4jdbc.sqltiming.warn.threshold is not defined
DEBUG: debug - x log4jdbc.sqltiming.error.threshold is not defined
DEBUG: debug - x log4jdbc.dump.booleanastruefalse is not defined (using default value false)
DEBUG: debug - x log4jdbc.dump.sql.maxlinelength is not defined (using default of 90)
DEBUG: debug - x log4jdbc.dump.fulldebugstacktrace is not defined (using default value false)
DEBUG: debug - x log4jdbc.statement.warn is not defined (using default value false)
DEBUG: debug - x log4jdbc.dump.sql.select is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.insert is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.update is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.delete is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.create is not defined (using default value true)
DEBUG: debug - x log4jdbc.dump.sql.addsemicolon is not defined (using default value false)
DEBUG: debug - x log4jdbc.auto.load.popular.drivers is not defined (using default value true)
DEBUG: debug - x log4jdbc.trim.sql is not defined (using default value true)
DEBUG: debug - x log4jdbc.suppress.generated.keys.exception is not defined (using default value false)
DEBUG: debug - x log4jdbc.drivers is not defined
DEBUG: debug -   FOUND DRIVER oracle.jdbc.OracleDriver
DEBUG: debug -   FOUND DRIVER oracle.jdbc.driver.OracleDriver
DEBUG: debug - ... log4jdbc initialized! ...
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 1. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  1 (1)
DEBUG: audit - 1. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@1039172d] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1039172d] read-only
DEBUG: audit - 1. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 1. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1039172d] to manual commit
DEBUG: audit - 1. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8f0315]
DEBUG: audit - 1. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1039172d] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 1. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@6add611e  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.setString(1, "admi") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admi(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
1. select * from member where memberid = 'admi'  {executed in 34 msec}
DEBUG: audit - 1. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@19ec1eeb  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@34bbcac6  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 1. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 1. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@1039172d  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@271cf9b7  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 1. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 1. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8f0315]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8f0315]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8f0315]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8f0315]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@1039172d]
DEBUG: audit - 1. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 1. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 1. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1039172d]
DEBUG: audit - 1. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1039172d] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 1. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 1. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : admin
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 2. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  2 (1)
DEBUG: audit - 2. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@35f74c97] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@35f74c97] read-only
DEBUG: audit - 2. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 2. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@35f74c97] to manual commit
DEBUG: audit - 2. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b30b459]
DEBUG: audit - 2. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@35f74c97] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 2. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@7a0dbe62  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.setString(1, "admin") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: admin(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
2. select * from member where memberid = 'admin'  {executed in 2 msec}
DEBUG: audit - 2. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@7511c640  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@4bbd26c7  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.next() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(MEMBERID) returned admin  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(PASSWORD) returned $2a$10$R1XcilPpsC6eClvR6RtkmOK7cN5yvhfIntRVH9ifJBsBqQmnNCNK2  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(MEMBERNAME) returned 관리자  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(GENDER) returned F  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getInt(AGE) returned 49  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(EMAIL) returned admin@naver.com  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(PHONE) returned 01012345678  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(ADDRESS) returned 서울시 강남구 버거킹 하하  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getDate(ENROLLDATE) returned 2019-01-28  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.wasNull() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.getString(hobby) returned 운동,게임,여행  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 2. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 1
DEBUG: resultset - 2. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@35f74c97  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@271cf9b7  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 2. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 2. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b30b459]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b30b459]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b30b459]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b30b459]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@35f74c97]
DEBUG: audit - 2. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 2. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 2. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@35f74c97]
DEBUG: audit - 2. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@35f74c97] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 2. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 2. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
DEBUG: LoggerInterceptor - =============== Client Request ==============
DEBUG: LoggerInterceptor - /spring/member/checkDuplicate.do
DEBUG: LoggerInterceptor - ---------------------------------------------
DEBUG: MemberController - ID중복체크 : qqqq
DEBUG: DataSourceTransactionManager - Creating new transaction with name [com.kh.spring.member.model.service.MemberServiceImpl.selectOneMember]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception
DEBUG: debug - driver name is Oracle JDBC driver
INFO : connection - 3. Connection opened  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: connection - open connections:  3 (1)
DEBUG: audit - 3. Connection.new Connection returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:262)
DEBUG: DataSourceTransactionManager - Acquired Connection [net.sf.log4jdbc.ConnectionSpy@5e92b88a] for JDBC transaction
DEBUG: DataSourceUtils - Setting JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e92b88a] read-only
DEBUG: audit - 3. Connection.setReadOnly(true) returned   org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:178)
DEBUG: audit - 3. Connection.getAutoCommit() returned true  org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:278)
DEBUG: DataSourceTransactionManager - Switching JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e92b88a] to manual commit
DEBUG: audit - 3. Connection.setAutoCommit(false) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283)
DEBUG: SqlSessionUtils - Creating a new SqlSession
DEBUG: SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50555d28]
DEBUG: audit - 3. Connection.getAutoCommit() returned false  org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:83)
DEBUG: SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e92b88a] will be managed by Spring
DEBUG: selectOneMember - ==>  Preparing: select * from member where memberid = ? 
DEBUG: audit - 3. PreparedStatement.new PreparedStatement returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. Connection.prepareStatement(select * from member where memberid = ?) returned net.sf.log4jdbc.PreparedStatementSpy@11685713  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.setString(1, "qqqq") returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - ==> Parameters: qqqq(String)
DEBUG: sqltiming -  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
3. select * from member where memberid = 'qqqq'  {executed in 1 msec}
DEBUG: audit - 3. PreparedStatement.execute() returned true  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.new ResultSet returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5a75eb5c  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.getMetaData() returned oracle.jdbc.driver.OracleResultSetMetaData@20334127  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.getType() returned 1003  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: resultset - 3. ResultSet.next() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: selectOneMember - <==      Total: 0
DEBUG: resultset - 3. ResultSet.close() returned null  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.getConnection() returned net.sf.log4jdbc.ConnectionSpy@5e92b88a  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. Connection.getMetaData() returned org.apache.commons.dbcp.DelegatingDatabaseMetaData@271cf9b7  org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNextResultSet(DefaultResultSetHandler.java:258)
DEBUG: audit - 3. PreparedStatement.isClosed() returned false  sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: audit - 3. PreparedStatement.close() returned   sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
DEBUG: SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50555d28]
DEBUG: SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50555d28]
DEBUG: SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50555d28]
DEBUG: SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50555d28]
DEBUG: DataSourceTransactionManager - Initiating transaction commit
DEBUG: DataSourceTransactionManager - Committing JDBC transaction on Connection [net.sf.log4jdbc.ConnectionSpy@5e92b88a]
DEBUG: audit - 3. Connection.commit() returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:329)
DEBUG: audit - 3. Connection.setAutoCommit(true) returned   org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374)
DEBUG: audit - 3. Connection.isReadOnly() returned true  org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:231)
DEBUG: DataSourceUtils - Resetting read-only flag of JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e92b88a]
DEBUG: audit - 3. Connection.setReadOnly(false) returned   org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:235)
DEBUG: DataSourceTransactionManager - Releasing JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e92b88a] after transaction
DEBUG: DataSourceUtils - Returning JDBC Connection to DataSource
INFO : connection - 3. Connection closed  org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: connection - open connections:  none
DEBUG: audit - 3. Connection.close() returned   org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:354)
DEBUG: LoggerInterceptor - ------------------- View ------------------
DEBUG: LoggerInterceptor - =================== END ===================
INFO : XmlWebApplicationContext - Closing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 17:39:30 KST 2019]; parent: Root WebApplicationContext
INFO : XmlWebApplicationContext - Closing Root WebApplicationContext: startup date [Thu Feb 07 17:39:24 KST 2019]; root of context hierarchy
INFO : ContextLoader - Root WebApplicationContext: initialization started
INFO : XmlWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Thu Feb 07 19:31:24 KST 2019]; root of context hierarchy
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/root-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/security-context.xml]
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@331e47f0]
DEBUG: LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
DEBUG: SqlSessionFactoryBean - Parsed configuration file: 'class path resource [mybatis-config.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\board\board-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\demo\demo-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\member\member-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\memo\memo-mapper.xml]'
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : ContextLoader - Root WebApplicationContext: initialization completed in 3474 ms
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization started
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.active]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.default]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
INFO : XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 19:31:28 KST 2019]; parent: Root WebApplicationContext
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/servlet-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/aspect-context.xml]
INFO : AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@207e8b45]
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object com.kh.spring.common.aop.AroundAdviceAspect.aroundAdvice(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.LoginLoggerAdvice.advice(org.aspectj.lang.JoinPoint,java.lang.Object)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceDelete(org.aspectj.lang.JoinPoint)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceInsert(org.aspectj.lang.JoinPoint)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardList.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.selectBoardList(int,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardForm.do]}" onto public void com.kh.spring.board.controller.BoardController.boardForm()
INFO : RequestMappingHandlerMapping - Mapped "{[/board/insertBoard.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.insertBoard(com.kh.spring.board.model.vo.Board,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardView.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.boardView(org.springframework.web.servlet.ModelAndView,int)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/fileDownload.do]}" onto public void com.kh.spring.board.controller.BoardController.fileDownload(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo()
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo1.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo1(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo2.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo2(org.springframework.ui.Model,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo3.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo3(org.springframework.ui.Model,com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/insertDev.do],methods=[POST]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.insertDev(com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demoList.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.selectDemoList(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/deleteDev.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.deleteDemo(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.kh.spring.HomeController.home(java.util.Locale,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnroll.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnrollEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogin.do],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogout.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberView.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberUpdateEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/checkDuplicate.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/memo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/insertMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/deleteMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 19:31:28 KST 2019]; parent: Root WebApplicationContext
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 19:31:28 KST 2019]; parent: Root WebApplicationContext
INFO : SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0'
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 19:31:28 KST 2019]; parent: Root WebApplicationContext
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'boardServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.board.model.service.BoardServiceImpl@4619dec1]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'demoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.demo.model.service.DemoServiceImpl@4e245bd4]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.model.service.MemberServiceImpl@47126c9f]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberController' with 0 common interceptors and 2 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.controller.MemberController@78afaf9a]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.util.Map com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.model.service.MemoServiceImpl@78c2c8b6]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoController' with 0 common interceptors and 4 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.controller.MemoController@4ebfddad]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization completed in 5399 ms
INFO : XmlWebApplicationContext - Closing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 19:31:28 KST 2019]; parent: Root WebApplicationContext
INFO : XmlWebApplicationContext - Closing Root WebApplicationContext: startup date [Thu Feb 07 19:31:24 KST 2019]; root of context hierarchy
INFO : ContextLoader - Root WebApplicationContext: initialization started
INFO : XmlWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Thu Feb 07 19:31:45 KST 2019]; root of context hierarchy
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/root-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/security-context.xml]
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@7cf332a]
DEBUG: LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
DEBUG: SqlSessionFactoryBean - Parsed configuration file: 'class path resource [mybatis-config.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\board\board-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\demo\demo-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\member\member-mapper.xml]'
DEBUG: SqlSessionFactoryBean - Parsed mapper file: 'file [C:\workspaces\sts_workspace\01_HelloSpring\target\classes\mapper\memo\memo-mapper.xml]'
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: NameMatchTransactionAttributeSource - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-Exception]
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : ContextLoader - Root WebApplicationContext: initialization completed in 3437 ms
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization started
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.active]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.profiles.default]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
INFO : XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 19:31:48 KST 2019]; parent: Root WebApplicationContext
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/servlet-context.xml]
INFO : XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring/appServlet/aspect-context.xml]
INFO : AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG: UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@4b2d77a2]
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object com.kh.spring.common.aop.AroundAdviceAspect.aroundAdvice(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.LoginLoggerAdvice.advice(org.aspectj.lang.JoinPoint,java.lang.Object)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceDelete(org.aspectj.lang.JoinPoint)
DEBUG: ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void com.kh.spring.common.aop.PasswordCheckAspect.beforeAdviceInsert(org.aspectj.lang.JoinPoint)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardList.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.selectBoardList(int,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardForm.do]}" onto public void com.kh.spring.board.controller.BoardController.boardForm()
INFO : RequestMappingHandlerMapping - Mapped "{[/board/insertBoard.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.insertBoard(com.kh.spring.board.model.vo.Board,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/boardView.do]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.board.controller.BoardController.boardView(org.springframework.web.servlet.ModelAndView,int)
INFO : RequestMappingHandlerMapping - Mapped "{[/board/fileDownload.do]}" onto public void com.kh.spring.board.controller.BoardController.fileDownload(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo()
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo1.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo1(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo2.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo2(org.springframework.ui.Model,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demo3.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.demo3(org.springframework.ui.Model,com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/insertDev.do],methods=[POST]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.insertDev(com.kh.spring.demo.model.vo.Dev)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/demoList.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.selectDemoList(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/demo/deleteDev.do]}" onto public java.lang.String com.kh.spring.demo.controller.DemoController.deleteDemo(javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.kh.spring.HomeController.home(java.util.Locale,org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnroll.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberEnrollEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogin.do],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberLogout.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberView.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/memberUpdateEnd.do]}" onto public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
INFO : RequestMappingHandlerMapping - Mapped "{[/member/checkDuplicate.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/memo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/insertMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
INFO : RequestMappingHandlerMapping - Mapped "{[/memo/deleteMemo.do]}" onto public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 19:31:48 KST 2019]; parent: Root WebApplicationContext
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 19:31:48 KST 2019]; parent: Root WebApplicationContext
INFO : SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0'
INFO : RequestMappingHandlerAdapter - Looking for @ControllerAdvice: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 19:31:48 KST 2019]; parent: Root WebApplicationContext
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'boardServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.board.model.service.BoardServiceImpl@45097a10]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'demoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.demo.model.service.DemoServiceImpl@445f2e70]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.model.service.MemberServiceImpl@7a32aa10]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memberController' with 0 common interceptors and 2 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.member.controller.MemberController@597b70f1]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnroll()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberEnrollEnd(com.kh.spring.member.model.vo.Member,javax.servlet.http.HttpServletRequest)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public org.springframework.web.servlet.ModelAndView com.kh.spring.member.controller.MemberController.memberLogin(java.lang.String,java.lang.String,org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.logout(org.springframework.web.bind.support.SessionStatus)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.view(org.springframework.ui.Model,java.lang.String)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.member.controller.MemberController.memberUpdate(org.springframework.ui.Model,com.kh.spring.member.model.vo.Member)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.util.Map com.kh.spring.member.controller.MemberController.checkDuplicate(java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoServiceImpl' with 0 common interceptors and 2 specific interceptors
DEBUG: JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.model.service.MemoServiceImpl@1a71f78d]
DEBUG: AnnotationAwareAspectJAutoProxyCreator - Creating implicit proxy for bean 'memoController' with 0 common interceptors and 4 specific interceptors
DEBUG: CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.kh.spring.memo.controller.MemoController@464068d0]
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.memo(org.springframework.ui.Model)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.insertMemo(com.kh.spring.memo.model.vo.Memo)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String com.kh.spring.memo.controller.MemoController.deleteMemo(int,java.lang.String)
DEBUG: CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG: CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG: CglibAopProxy - Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG: CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG: JndiTemplate - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
DEBUG: JndiLocatorDelegate - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
DEBUG: JndiTemplate - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
DEBUG: JndiPropertySource - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
INFO : DispatcherServlet - FrameworkServlet 'appServlet': initialization completed in 4957 ms
INFO : XmlWebApplicationContext - Closing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Feb 07 19:31:48 KST 2019]; parent: Root WebApplicationContext
INFO : XmlWebApplicationContext - Closing Root WebApplicationContext: startup date [Thu Feb 07 19:31:45 KST 2019]; root of context hierarchy
